!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
--prefix	debian/rules	/^		--prefix=\/usr \\$/;"	m
-sourcedir	debian/rules	/^	dh_install -i --sourcedir=debian\/tmp$/;"	m
-sourcedir	debian/rules	/^	dh_install -s --sourcedir=debian\/tmp$/;"	m
ACCEPTABLE_DIFFERENCE	mfsmaster/chunks.c	194;"	d	file:
AFTER_CREATE	mfscommon/MFSCommunication.h	308;"	d
ANSSIZE	mfsmount/masterproxy.c	13;"	d	file:
ANTOAN_NOP	mfscommon/MFSCommunication.h	315;"	d
ANTOCL_CHART	mfscommon/MFSCommunication.h	1109;"	d
ANTOCL_CHART_DATA	mfscommon/MFSCommunication.h	1118;"	d
ANTOCS_CHUNK_CHECKSUM	mfscommon/MFSCommunication.h	531;"	d
ANTOCS_CHUNK_CHECKSUM_TAB	mfscommon/MFSCommunication.h	540;"	d
ANTOCU_CHART	mfscgi/chart.cgi.in	/^ANTOCU_CHART = (PROTO_BASE+505)$/;"	v
BACKGROUND_METASTORE	mfsmaster/filesystem.c	59;"	d	file:
BGJOBS	mfschunkserver/csserv.c	21;"	d	file:
BGJOBS	mfschunkserver/masterconn.c	21;"	d	file:
BGJOBSCNT	mfschunkserver/csserv.c	22;"	d	file:
BGJOBSCNT	mfschunkserver/masterconn.c	22;"	d	file:
BSIZE	mfsmetarestore/merger.c	7;"	d	file:
BUSY	mfsmaster/chunks.c	/^enum {INVALID,DEL,BUSY,VALID,TDBUSY,TDVALID};$/;"	e	enum:__anon13	file:
BYTEREV	mfscommon/crc.c	67;"	d	file:
BackLogsNumber	mfschunkserver/masterconn.c	/^static uint32_t BackLogsNumber;$/;"	v	file:
BackLogsNumber	mfsmaster/changelog.c	/^static uint32_t BackLogsNumber;$/;"	v	file:
BackLogsNumber	mfsmetalogger/masterconn.c	/^static uint32_t BackLogsNumber;$/;"	v	file:
BindHost	mfschunkserver/masterconn.c	/^static char *BindHost;$/;"	v	file:
BindHost	mfsmetalogger/masterconn.c	/^static char *BindHost;$/;"	v	file:
CALCDEFS	mfschunkserver/chartsdata.c	110;"	d	file:
CALCDEFS	mfsmaster/chartsdata.c	126;"	d	file:
CBUFFSIZE	mfscommon/charts.c	94;"	d	file:
CCdata	mfscgi/mfs.cgi.in	/^			CCdata = ""$/;"	v
CCdata	mfscgi/mfs.cgi.in	/^			CCdata = fields.getvalue("CCdata")$/;"	v
CCdata	mfscgi/mfs.cgi.in	/^		CCdata = ""$/;"	v
CHARTS	mfschunkserver/chartsdata.c	73;"	d	file:
CHARTS	mfsmaster/chartsdata.c	94;"	d	file:
CHARTS_ADD	mfscommon/charts.h	48;"	d
CHARTS_BYTESR	mfschunkserver/chartsdata.c	50;"	d	file:
CHARTS_BYTESRCVD	mfsmaster/chartsdata.c	91;"	d	file:
CHARTS_BYTESSENT	mfsmaster/chartsdata.c	92;"	d	file:
CHARTS_BYTESW	mfschunkserver/chartsdata.c	51;"	d	file:
CHARTS_CALC	mfscommon/charts.h	61;"	d
CHARTS_CALCDEF	mfscommon/charts.h	55;"	d
CHARTS_CALC_POS	mfscommon/charts.c	65;"	d	file:
CHARTS_CALC_START	mfscommon/charts.h	60;"	d
CHARTS_CHUNKIOJOBS	mfschunkserver/chartsdata.c	70;"	d	file:
CHARTS_CHUNKOPJOBS	mfschunkserver/chartsdata.c	71;"	d	file:
CHARTS_CONST	mfscommon/charts.h	47;"	d
CHARTS_CREATE	mfschunkserver/chartsdata.c	63;"	d	file:
CHARTS_CSCONNIN	mfschunkserver/chartsdata.c	46;"	d	file:
CHARTS_CSCONNOUT	mfschunkserver/chartsdata.c	47;"	d	file:
CHARTS_CSSERVIN	mfschunkserver/chartsdata.c	48;"	d	file:
CHARTS_CSSERVOUT	mfschunkserver/chartsdata.c	49;"	d	file:
CHARTS_DATABYTESR	mfschunkserver/chartsdata.c	54;"	d	file:
CHARTS_DATABYTESW	mfschunkserver/chartsdata.c	55;"	d	file:
CHARTS_DATALLOPR	mfschunkserver/chartsdata.c	56;"	d	file:
CHARTS_DATALLOPW	mfschunkserver/chartsdata.c	57;"	d	file:
CHARTS_DEFS_END	mfscommon/charts.h	45;"	d
CHARTS_DEF_IS_CALC	mfscommon/charts.c	64;"	d	file:
CHARTS_DEF_IS_DIRECT	mfscommon/charts.c	62;"	d	file:
CHARTS_DELCHUNK	mfsmaster/chartsdata.c	70;"	d	file:
CHARTS_DELETE	mfschunkserver/chartsdata.c	64;"	d	file:
CHARTS_DIRECT	mfscommon/charts.h	59;"	d
CHARTS_DIRECT_POS	mfscommon/charts.c	63;"	d	file:
CHARTS_DIRECT_START	mfscommon/charts.h	58;"	d
CHARTS_DIV	mfscommon/charts.h	53;"	d
CHARTS_DUPLICATE	mfschunkserver/chartsdata.c	66;"	d	file:
CHARTS_DUPTRUNC	mfschunkserver/chartsdata.c	68;"	d	file:
CHARTS_EXTENDED_POS	mfscommon/charts.c	70;"	d	file:
CHARTS_EXTENDED_START	mfscommon/charts.c	68;"	d	file:
CHARTS_FILENAME	mfschunkserver/chartsdata.c	40;"	d	file:
CHARTS_FILENAME	mfsmaster/chartsdata.c	66;"	d	file:
CHARTS_FILE_VERSION	mfscommon/charts.c	471;"	d	file:
CHARTS_GETATTR	mfsmaster/chartsdata.c	73;"	d	file:
CHARTS_HLOPR	mfschunkserver/chartsdata.c	58;"	d	file:
CHARTS_HLOPW	mfschunkserver/chartsdata.c	59;"	d	file:
CHARTS_IS_DIRECT_STAT	mfscommon/charts.c	67;"	d	file:
CHARTS_IS_EXTENDED_STAT	mfscommon/charts.c	69;"	d	file:
CHARTS_LINK	mfsmaster/chartsdata.c	83;"	d	file:
CHARTS_LLOPR	mfschunkserver/chartsdata.c	52;"	d	file:
CHARTS_LLOPW	mfschunkserver/chartsdata.c	53;"	d	file:
CHARTS_LOOKUP	mfsmaster/chartsdata.c	75;"	d	file:
CHARTS_MASTERIN	mfschunkserver/chartsdata.c	44;"	d	file:
CHARTS_MASTEROUT	mfschunkserver/chartsdata.c	45;"	d	file:
CHARTS_MAX	mfscommon/charts.h	51;"	d
CHARTS_MEMORY	mfsmaster/chartsdata.c	88;"	d	file:
CHARTS_MIN	mfscommon/charts.h	50;"	d
CHARTS_MKDIR	mfsmaster/chartsdata.c	76;"	d	file:
CHARTS_MKNOD	mfsmaster/chartsdata.c	80;"	d	file:
CHARTS_MODE_ADD	mfscommon/charts.h	25;"	d
CHARTS_MODE_MAX	mfscommon/charts.h	26;"	d
CHARTS_MUL	mfscommon/charts.h	52;"	d
CHARTS_NEG	mfscommon/charts.h	54;"	d
CHARTS_NODATA	mfscommon/charts.h	64;"	d
CHARTS_NODATA	mfscommon/charts.h	66;"	d
CHARTS_NODATA	mfscommon/charts.h	68;"	d
CHARTS_NONE	mfscommon/charts.h	57;"	d
CHARTS_OPEN	mfsmaster/chartsdata.c	85;"	d	file:
CHARTS_OP_ADD	mfscommon/charts.h	36;"	d
CHARTS_OP_CONST	mfscommon/charts.h	35;"	d
CHARTS_OP_DIV	mfscommon/charts.h	41;"	d
CHARTS_OP_END	mfscommon/charts.h	44;"	d
CHARTS_OP_MAX	mfscommon/charts.h	39;"	d
CHARTS_OP_MIN	mfscommon/charts.h	38;"	d
CHARTS_OP_MUL	mfscommon/charts.h	40;"	d
CHARTS_OP_NEG	mfscommon/charts.h	42;"	d
CHARTS_OP_SUB	mfscommon/charts.h	37;"	d
CHARTS_PACKETSRCVD	mfsmaster/chartsdata.c	89;"	d	file:
CHARTS_PACKETSSENT	mfsmaster/chartsdata.c	90;"	d	file:
CHARTS_READ	mfsmaster/chartsdata.c	86;"	d	file:
CHARTS_READDIR	mfsmaster/chartsdata.c	84;"	d	file:
CHARTS_READLINK	mfsmaster/chartsdata.c	79;"	d	file:
CHARTS_RENAME	mfsmaster/chartsdata.c	82;"	d	file:
CHARTS_REPL	mfschunkserver/chartsdata.c	62;"	d	file:
CHARTS_REPLCHUNK	mfsmaster/chartsdata.c	71;"	d	file:
CHARTS_RMDIR	mfsmaster/chartsdata.c	77;"	d	file:
CHARTS_RTIME	mfschunkserver/chartsdata.c	60;"	d	file:
CHARTS_SCALE_GIGA	mfscommon/charts.h	33;"	d
CHARTS_SCALE_KILO	mfscommon/charts.h	31;"	d
CHARTS_SCALE_MEGA	mfscommon/charts.h	32;"	d
CHARTS_SCALE_MICRO	mfscommon/charts.h	28;"	d
CHARTS_SCALE_MILI	mfscommon/charts.h	29;"	d
CHARTS_SCALE_NONE	mfscommon/charts.h	30;"	d
CHARTS_SCPU	mfschunkserver/chartsdata.c	43;"	d	file:
CHARTS_SCPU	mfsmaster/chartsdata.c	69;"	d	file:
CHARTS_SETATTR	mfsmaster/chartsdata.c	74;"	d	file:
CHARTS_STATFS	mfsmaster/chartsdata.c	72;"	d	file:
CHARTS_SUB	mfscommon/charts.h	49;"	d
CHARTS_SYMLINK	mfsmaster/chartsdata.c	78;"	d	file:
CHARTS_TEST	mfschunkserver/chartsdata.c	69;"	d	file:
CHARTS_TRUNCATE	mfschunkserver/chartsdata.c	67;"	d	file:
CHARTS_UCPU	mfschunkserver/chartsdata.c	42;"	d	file:
CHARTS_UCPU	mfsmaster/chartsdata.c	68;"	d	file:
CHARTS_UNLINK	mfsmaster/chartsdata.c	81;"	d	file:
CHARTS_VERSION	mfschunkserver/chartsdata.c	65;"	d	file:
CHARTS_WRITE	mfsmaster/chartsdata.c	87;"	d	file:
CHARTS_WTIME	mfschunkserver/chartsdata.c	61;"	d	file:
CHECKNAME	mfsmount/mfstools.c	2390;"	d	file:
CHIDS_AUTO	mfsmaster/filesystem.c	92;"	d	file:
CHIDS_NO	mfsmaster/filesystem.c	90;"	d	file:
CHIDS_YES	mfsmaster/filesystem.c	91;"	d	file:
CHILD	mfsmetarestore/merger.c	22;"	d	file:
CHUNKCNT	mfsmaster/chunks.c	2528;"	d	file:
CHUNKFSIZE	mfsmaster/chunks.c	2527;"	d	file:
CHUNKHDRCRC	mfschunkserver/hddspacemgr.c	75;"	d	file:
CHUNKHDRSIZE	mfschunkserver/hddspacemgr.c	74;"	d	file:
CHUNKLOCKED	mfschunkserver/hddspacemgr.c	93;"	d	file:
CHUNKS_CUT_COUNT	mfschunkserver/hddspacemgr.c	1185;"	d	file:
CHUNK_BUCKET_SIZE	mfsmaster/chunks.c	149;"	d	file:
CH_AVAIL	mfschunkserver/hddspacemgr.c	135;"	d	file:
CH_DELETED	mfschunkserver/hddspacemgr.c	137;"	d	file:
CH_LOCKED	mfschunkserver/hddspacemgr.c	136;"	d	file:
CH_NEW_AUTO	mfschunkserver/hddspacemgr.c	90;"	d	file:
CH_NEW_EXCLUSIVE	mfschunkserver/hddspacemgr.c	91;"	d	file:
CH_NEW_NONE	mfschunkserver/hddspacemgr.c	89;"	d	file:
CH_TOBEDELETED	mfschunkserver/hddspacemgr.c	138;"	d	file:
CLOSE	mfschunkserver/csserv.c	/^enum {IDLE,READ,WRITELAST,CONNECTING,WRITEINIT,WRITEFWD,WRITEFINISH,CLOSE,CLOSEWAIT,CLOSED};$/;"	e	enum:__anon20	file:
CLOSED	mfschunkserver/csserv.c	/^enum {IDLE,READ,WRITELAST,CONNECTING,WRITEINIT,WRITEFWD,WRITEFINISH,CLOSE,CLOSEWAIT,CLOSED};$/;"	e	enum:__anon20	file:
CLOSEDELAYTICKS	mfsmount/readdata.c	44;"	d	file:
CLOSEWAIT	mfschunkserver/csserv.c	/^enum {IDLE,READ,WRITELAST,CONNECTING,WRITEINIT,WRITEFWD,WRITEFINISH,CLOSE,CLOSEWAIT,CLOSED};$/;"	e	enum:__anon20	file:
CLTOAN_CHART	mfscommon/MFSCommunication.h	1105;"	d
CLTOAN_CHART_DATA	mfscommon/MFSCommunication.h	1114;"	d
CLTOCS_HDD_LIST_V1	mfscommon/MFSCommunication.h	1096;"	d
CLTOCS_HDD_LIST_V2	mfscommon/MFSCommunication.h	1202;"	d
CLTOCS_READ	mfscommon/MFSCommunication.h	491;"	d
CLTOCS_WRITE	mfscommon/MFSCommunication.h	503;"	d
CLTOCS_WRITE_DATA	mfscommon/MFSCommunication.h	511;"	d
CLTOCS_WRITE_FINISH	mfscommon/MFSCommunication.h	515;"	d
CLTOMA_CHUNKSTEST_INFO	mfscommon/MFSCommunication.h	1154;"	d
CLTOMA_CHUNKS_MATRIX	mfscommon/MFSCommunication.h	1163;"	d
CLTOMA_CSERV_LIST	mfscommon/MFSCommunication.h	1085;"	d
CLTOMA_EXPORTS_INFO	mfscommon/MFSCommunication.h	1181;"	d
CLTOMA_FSTEST_INFO	mfscommon/MFSCommunication.h	1143;"	d
CLTOMA_FUSE_ACCESS	mfscommon/MFSCommunication.h	654;"	d
CLTOMA_FUSE_APPEND	mfscommon/MFSCommunication.h	817;"	d
CLTOMA_FUSE_CHECK	mfscommon/MFSCommunication.h	826;"	d
CLTOMA_FUSE_GETATTR	mfscommon/MFSCommunication.h	671;"	d
CLTOMA_FUSE_GETDETACHEDATTR	mfscommon/MFSCommunication.h	889;"	d
CLTOMA_FUSE_GETDIR	mfscommon/MFSCommunication.h	765;"	d
CLTOMA_FUSE_GETDIRSTATS	mfscommon/MFSCommunication.h	936;"	d
CLTOMA_FUSE_GETEATTR	mfscommon/MFSCommunication.h	985;"	d
CLTOMA_FUSE_GETGOAL	mfscommon/MFSCommunication.h	859;"	d
CLTOMA_FUSE_GETRESERVED	mfscommon/MFSCommunication.h	975;"	d
CLTOMA_FUSE_GETTRASH	mfscommon/MFSCommunication.h	879;"	d
CLTOMA_FUSE_GETTRASHPATH	mfscommon/MFSCommunication.h	899;"	d
CLTOMA_FUSE_GETTRASHTIME	mfscommon/MFSCommunication.h	839;"	d
CLTOMA_FUSE_GETXATTR	mfscommon/MFSCommunication.h	1025;"	d
CLTOMA_FUSE_LINK	mfscommon/MFSCommunication.h	756;"	d
CLTOMA_FUSE_LOOKUP	mfscommon/MFSCommunication.h	662;"	d
CLTOMA_FUSE_MKDIR	mfscommon/MFSCommunication.h	720;"	d
CLTOMA_FUSE_MKNOD	mfscommon/MFSCommunication.h	711;"	d
CLTOMA_FUSE_OPEN	mfscommon/MFSCommunication.h	777;"	d
CLTOMA_FUSE_PURGE	mfscommon/MFSCommunication.h	927;"	d
CLTOMA_FUSE_QUOTACONTROL	mfscommon/MFSCommunication.h	1005;"	d
CLTOMA_FUSE_READLINK	mfscommon/MFSCommunication.h	693;"	d
CLTOMA_FUSE_READ_CHUNK	mfscommon/MFSCommunication.h	788;"	d
CLTOMA_FUSE_REGISTER	mfscommon/MFSCommunication.h	638;"	d
CLTOMA_FUSE_RENAME	mfscommon/MFSCommunication.h	746;"	d
CLTOMA_FUSE_REPAIR	mfscommon/MFSCommunication.h	956;"	d
CLTOMA_FUSE_RESERVED_INODES	mfscommon/MFSCommunication.h	1075;"	d
CLTOMA_FUSE_RMDIR	mfscommon/MFSCommunication.h	738;"	d
CLTOMA_FUSE_SETATTR	mfscommon/MFSCommunication.h	681;"	d
CLTOMA_FUSE_SETEATTR	mfscommon/MFSCommunication.h	995;"	d
CLTOMA_FUSE_SETGOAL	mfscommon/MFSCommunication.h	869;"	d
CLTOMA_FUSE_SETTRASHPATH	mfscommon/MFSCommunication.h	909;"	d
CLTOMA_FUSE_SETTRASHTIME	mfscommon/MFSCommunication.h	849;"	d
CLTOMA_FUSE_SETXATTR	mfscommon/MFSCommunication.h	1016;"	d
CLTOMA_FUSE_SNAPSHOT	mfscommon/MFSCommunication.h	966;"	d
CLTOMA_FUSE_STATFS	mfscommon/MFSCommunication.h	646;"	d
CLTOMA_FUSE_SYMLINK	mfscommon/MFSCommunication.h	702;"	d
CLTOMA_FUSE_TRUNCATE	mfscommon/MFSCommunication.h	946;"	d
CLTOMA_FUSE_UNDEL	mfscommon/MFSCommunication.h	918;"	d
CLTOMA_FUSE_UNLINK	mfscommon/MFSCommunication.h	730;"	d
CLTOMA_FUSE_WRITE_CHUNK	mfscommon/MFSCommunication.h	798;"	d
CLTOMA_FUSE_WRITE_CHUNK_END	mfscommon/MFSCommunication.h	807;"	d
CLTOMA_INFO	mfscommon/MFSCommunication.h	1132;"	d
CLTOMA_MLOG_LIST	mfscommon/MFSCommunication.h	1190;"	d
CLTOMA_QUOTA_INFO	mfscommon/MFSCommunication.h	1172;"	d
CLTOMA_SESSION_LIST	mfscommon/MFSCommunication.h	1123;"	d
COLON	mfscommon/charts.c	432;"	d	file:
COLOR_AUX	mfscommon/charts.c	115;"	d	file:
COLOR_AXIS	mfscommon/charts.c	114;"	d	file:
COLOR_BKG	mfscommon/charts.c	113;"	d	file:
COLOR_DATA1	mfscommon/charts.c	117;"	d	file:
COLOR_DATA2	mfscommon/charts.c	118;"	d	file:
COLOR_DATA3	mfscommon/charts.c	119;"	d	file:
COLOR_NODATA	mfscommon/charts.c	120;"	d	file:
COLOR_TEXT	mfscommon/charts.c	116;"	d	file:
COLOR_TRANSPARENT	mfscommon/charts.c	112;"	d	file:
CONNECTING	mfschunkserver/csserv.c	/^enum {IDLE,READ,WRITELAST,CONNECTING,WRITEINIT,WRITEFWD,WRITEFINISH,CLOSE,CLOSEWAIT,CLOSED};$/;"	e	enum:__anon20	file:
CONNECTING	mfschunkserver/masterconn.c	/^enum {FREE,CONNECTING,HEADER,DATA,KILL};$/;"	e	enum:__anon25	file:
CONNECTING	mfschunkserver/replicator.c	/^typedef enum {IDLE,CONNECTING,HEADER,DATA} modetype;$/;"	e	enum:__anon21	file:
CONNECTING	mfsmetalogger/masterconn.c	/^enum {FREE,CONNECTING,HEADER,DATA,KILL};$/;"	e	enum:__anon9	file:
CONNECT_RETRIES	mfschunkserver/csserv.c	54;"	d	file:
CONNECT_TIMEOUT	mfschunkserver/csserv.c	55;"	d	file:
CONNMSECTO	mfschunkserver/replicator.c	43;"	d	file:
COPY_charptr	mfscommon/cfg.c	140;"	d	file:
COPY_double	mfscommon/cfg.c	139;"	d	file:
COPY_int	mfscommon/cfg.c	134;"	d	file:
COPY_int32	mfscommon/cfg.c	135;"	d	file:
COPY_int64	mfscommon/cfg.c	137;"	d	file:
COPY_uint32	mfscommon/cfg.c	136;"	d	file:
COPY_uint64	mfscommon/cfg.c	138;"	d	file:
CPU_USAGE	mfsmaster/chartsdata.c	46;"	d	file:
CRCDELAY	mfschunkserver/hddspacemgr.c	63;"	d	file:
CRCSTEPS	mfschunkserver/hddspacemgr.c	65;"	d	file:
CRC_FOUR_BYTES	mfscommon/crc.c	143;"	d	file:
CRC_ONE_BYTE	mfscommon/crc.c	142;"	d	file:
CRC_POLY	mfscommon/MFSCommunication.h	61;"	d
CRC_REORDER	mfscommon/crc.c	141;"	d	file:
CREATE	mfsmaster/chunks.c	/^enum {NONE,CREATE,SET_VERSION,DUPLICATE,TRUNCATE,DUPTRUNC};$/;"	e	enum:__anon12	file:
CROSS	debian/rules	/^CROSS= --build $(DEB_BUILD_GNU_TYPE) --host $(DEB_HOST_GNU_TYPE)$/;"	m
CROSS	debian/rules	/^CROSS= --build $(DEB_BUILD_GNU_TYPE)$/;"	m
CSDB_HASH	mfsmount/csdb.c	26;"	d	file:
CSDB_HASHSIZE	mfsmount/csdb.c	25;"	d	file:
CSMSECTIMEOUT	mfsmount/cscomm.c	35;"	d	file:
CSSERV_TIMEOUT	mfschunkserver/csserv.c	52;"	d	file:
CSTOAN_CHUNK_CHECKSUM	mfscommon/MFSCommunication.h	535;"	d
CSTOAN_CHUNK_CHECKSUM_TAB	mfscommon/MFSCommunication.h	544;"	d
CSTOCL_HDD_LIST_V1	mfscommon/MFSCommunication.h	1100;"	d
CSTOCL_HDD_LIST_V2	mfscommon/MFSCommunication.h	1206;"	d
CSTOCL_READ_DATA	mfscommon/MFSCommunication.h	499;"	d
CSTOCL_READ_STATUS	mfscommon/MFSCommunication.h	495;"	d
CSTOCL_WRITE_STATUS	mfscommon/MFSCommunication.h	507;"	d
CSTOCS_GET_CHUNK_BLOCKS	mfscommon/MFSCommunication.h	521;"	d
CSTOCS_GET_CHUNK_BLOCKS_STATUS	mfscommon/MFSCommunication.h	525;"	d
CSTOCU_HDD_LIST_V1	mfscgi/mfs.cgi.in	/^CSTOCU_HDD_LIST_V1 = (PROTO_BASE+503)$/;"	v
CSTOCU_HDD_LIST_V2	mfscgi/mfs.cgi.in	/^CSTOCU_HDD_LIST_V2 = (PROTO_BASE+601)$/;"	v
CSTOMA_CHUNKOP	mfscommon/MFSCommunication.h	465;"	d
CSTOMA_CHUNK_DAMAGED	mfscommon/MFSCommunication.h	389;"	d
CSTOMA_CHUNK_LOST	mfscommon/MFSCommunication.h	402;"	d
CSTOMA_CREATE	mfscommon/MFSCommunication.h	414;"	d
CSTOMA_DELETE	mfscommon/MFSCommunication.h	422;"	d
CSTOMA_DUPLICATE	mfscommon/MFSCommunication.h	430;"	d
CSTOMA_DUPTRUNC	mfscommon/MFSCommunication.h	481;"	d
CSTOMA_ERROR_OCCURRED	mfscommon/MFSCommunication.h	406;"	d
CSTOMA_REGISTER	mfscommon/MFSCommunication.h	361;"	d
CSTOMA_REPLICATE	mfscommon/MFSCommunication.h	449;"	d
CSTOMA_SET_VERSION	mfscommon/MFSCommunication.h	438;"	d
CSTOMA_SPACE	mfscommon/MFSCommunication.h	383;"	d
CSTOMA_TRUNCATE	mfscommon/MFSCommunication.h	473;"	d
CSorder	mfscgi/mfs.cgi.in	/^		CSorder = 0$/;"	v
CSorder	mfscgi/mfs.cgi.in	/^		CSorder = int(fields.getvalue("CSorder"))$/;"	v
CSrev	mfscgi/mfs.cgi.in	/^		CSrev = 0$/;"	v
CSrev	mfscgi/mfs.cgi.in	/^		CSrev = int(fields.getvalue("CSrev"))$/;"	v
CUIDREC_BUCKET_SIZE	mfsmaster/filesystem.c	365;"	d	file:
CUTOAN_CHART	mfscgi/chart.cgi.in	/^CUTOAN_CHART = (PROTO_BASE+504)$/;"	v
CUTOCS_HDD_LIST_V1	mfscgi/mfs.cgi.in	/^CUTOCS_HDD_LIST_V1 = (PROTO_BASE+502)$/;"	v
CUTOCS_HDD_LIST_V2	mfscgi/mfs.cgi.in	/^CUTOCS_HDD_LIST_V2 = (PROTO_BASE+600)$/;"	v
CUTOMA_CHUNKSTEST_INFO	mfscgi/mfs.cgi.in	/^CUTOMA_CHUNKSTEST_INFO = (PROTO_BASE+514)$/;"	v
CUTOMA_CHUNKS_MATRIX	mfscgi/mfs.cgi.in	/^CUTOMA_CHUNKS_MATRIX = (PROTO_BASE+516)$/;"	v
CUTOMA_CSERV_LIST	mfscgi/mfs.cgi.in	/^CUTOMA_CSERV_LIST = (PROTO_BASE+500)$/;"	v
CUTOMA_EXPORTS_INFO	mfscgi/mfs.cgi.in	/^CUTOMA_EXPORTS_INFO = (PROTO_BASE+520)$/;"	v
CUTOMA_FSTEST_INFO	mfscgi/mfs.cgi.in	/^CUTOMA_FSTEST_INFO = (PROTO_BASE+512)$/;"	v
CUTOMA_INFO	mfscgi/mfs.cgi.in	/^CUTOMA_INFO = (PROTO_BASE+510)$/;"	v
CUTOMA_MLOG_LIST	mfscgi/mfs.cgi.in	/^CUTOMA_MLOG_LIST = (PROTO_BASE+522)$/;"	v
CUTOMA_QUOTA_INFO	mfscgi/mfs.cgi.in	/^CUTOMA_QUOTA_INFO = (PROTO_BASE+518)$/;"	v
CUTOMA_SESSION_LIST	mfscgi/mfs.cgi.in	/^CUTOMA_SESSION_LIST = (PROTO_BASE+508)$/;"	v
ClientHandler	mfscgi/cgiserv.py.in	/^class ClientHandler:$/;"	c
CreateProcess	ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
DATA	mfschunkserver/csserv.c	/^enum {HEADER,DATA};$/;"	e	enum:__anon19	file:
DATA	mfschunkserver/masterconn.c	/^enum {FREE,CONNECTING,HEADER,DATA,KILL};$/;"	e	enum:__anon25	file:
DATA	mfschunkserver/replicator.c	/^typedef enum {IDLE,CONNECTING,HEADER,DATA} modetype;$/;"	e	enum:__anon21	file:
DATA	mfscommon/charts.c	48;"	d	file:
DATA	mfsmaster/matoclserv.c	/^enum {KILL,HEADER,DATA};$/;"	e	enum:__anon17	file:
DATA	mfsmaster/matocsserv.c	/^enum{KILL,HEADER,DATA};$/;"	e	enum:__anon16	file:
DATA	mfsmaster/matomlserv.c	/^enum{KILL,HEADER,DATA};$/;"	e	enum:__anon15	file:
DATA	mfsmetalogger/masterconn.c	/^enum {FREE,CONNECTING,HEADER,DATA,KILL};$/;"	e	enum:__anon9	file:
DCM_INODEHASH_LENG	mfsmaster/datacachemgr.c	25;"	d	file:
DCM_INODE_HASH	mfsmaster/datacachemgr.c	27;"	d	file:
DCM_NIL	mfsmaster/datacachemgr.c	29;"	d	file:
DCM_TAB_LENG	mfsmaster/datacachemgr.c	24;"	d	file:
DEB_BUILD_GNU_TYPE	debian/rules	/^DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)$/;"	m
DEB_HOST_GNU_TYPE	debian/rules	/^DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)$/;"	m
DEFAULT_GOAL	mfsmaster/filesystem.c	83;"	d	file:
DEFAULT_INPUT_BUFFSIZE	mfsmount/mastercomm.c	95;"	d	file:
DEFAULT_OPTIONS	mfsmount/main.c	68;"	d	file:
DEFAULT_OPTIONS	mfsmount/main.c	70;"	d	file:
DEFAULT_OUTPUT_BUFFSIZE	mfsmount/mastercomm.c	94;"	d	file:
DEFAULT_TRASHTIME	mfsmaster/filesystem.c	84;"	d	file:
DEL	mfsmaster/chunks.c	/^enum {INVALID,DEL,BUSY,VALID,TDBUSY,TDVALID};$/;"	e	enum:__anon13	file:
DELAYEDSTEP	mfschunkserver/hddspacemgr.c	60;"	d	file:
DHASHPOS	mfschunkserver/hddspacemgr.c	87;"	d	file:
DHASHSIZE	mfschunkserver/hddspacemgr.c	86;"	d	file:
DTYPE_ISVALID	mfscommon/MFSCommunication.h	198;"	d
DTYPE_RESERVED	mfscommon/MFSCommunication.h	197;"	d
DTYPE_TRASH	mfscommon/MFSCommunication.h	196;"	d
DTYPE_UNKNOWN	mfscommon/MFSCommunication.h	195;"	d
DUPLICATE	mfsmaster/chunks.c	/^enum {NONE,CREATE,SET_VERSION,DUPLICATE,TRUNCATE,DUPTRUNC};$/;"	e	enum:__anon12	file:
DUPTRUNC	mfsmaster/chunks.c	/^enum {NONE,CREATE,SET_VERSION,DUPLICATE,TRUNCATE,DUPTRUNC};$/;"	e	enum:__anon12	file:
EAT	mfsmetarestore/restore.c	29;"	d	file:
EATTR_BITS	mfscommon/MFSCommunication.h	218;"	d
EATTR_DESCRIPTIONS	mfscommon/MFSCommunication.h	231;"	d
EATTR_NOACACHE	mfscommon/MFSCommunication.h	221;"	d
EATTR_NODATACACHE	mfscommon/MFSCommunication.h	223;"	d
EATTR_NOECACHE	mfscommon/MFSCommunication.h	222;"	d
EATTR_NOOWNER	mfscommon/MFSCommunication.h	220;"	d
EATTR_STRINGS	mfscommon/MFSCommunication.h	225;"	d
EDGEHASH	mfsmaster/filesystem.c	58;"	d	file:
EDGEHASHBITS	mfsmaster/filesystem.c	66;"	d	file:
EDGEHASHPOS	mfsmaster/filesystem.c	68;"	d	file:
EDGEHASHSIZE	mfsmaster/filesystem.c	67;"	d	file:
EDQUOT	mfsmount/mfs_fuse.c	225;"	d	file:
EDQUOT	mfsmount/writedata.c	51;"	d	file:
ERRORLIMIT	mfschunkserver/hddspacemgr.c	79;"	d	file:
ERRORS_LOG_MAX	mfsmaster/filesystem.c	244;"	d	file:
ERROR_BADPASSWORD	mfscommon/MFSCommunication.h	112;"	d
ERROR_BADSESSIONID	mfscommon/MFSCommunication.h	110;"	d
ERROR_BNUMTOOBIG	mfscommon/MFSCommunication.h	96;"	d
ERROR_CANTCONNECT	mfscommon/MFSCommunication.h	99;"	d
ERROR_CANTCREATEPATH	mfscommon/MFSCommunication.h	104;"	d
ERROR_CHUNKBUSY	mfscommon/MFSCommunication.h	86;"	d
ERROR_CHUNKEXIST	mfscommon/MFSCommunication.h	93;"	d
ERROR_CHUNKLOST	mfscommon/MFSCommunication.h	79;"	d
ERROR_CRC	mfscommon/MFSCommunication.h	102;"	d
ERROR_DELAYED	mfscommon/MFSCommunication.h	103;"	d
ERROR_DISCONNECTED	mfscommon/MFSCommunication.h	101;"	d
ERROR_EACCES	mfscommon/MFSCommunication.h	75;"	d
ERROR_EEXIST	mfscommon/MFSCommunication.h	76;"	d
ERROR_EINVAL	mfscommon/MFSCommunication.h	77;"	d
ERROR_ENOATTR	mfscommon/MFSCommunication.h	114;"	d
ERROR_ENOENT	mfscommon/MFSCommunication.h	74;"	d
ERROR_ENOTDIR	mfscommon/MFSCommunication.h	73;"	d
ERROR_ENOTEMPTY	mfscommon/MFSCommunication.h	78;"	d
ERROR_EPERM	mfscommon/MFSCommunication.h	72;"	d
ERROR_EROFS	mfscommon/MFSCommunication.h	108;"	d
ERROR_INDEXTOOBIG	mfscommon/MFSCommunication.h	82;"	d
ERROR_IO	mfscommon/MFSCommunication.h	95;"	d
ERROR_LOCKED	mfscommon/MFSCommunication.h	83;"	d
ERROR_MAX	mfscommon/MFSCommunication.h	116;"	d
ERROR_MISMATCH	mfscommon/MFSCommunication.h	106;"	d
ERROR_NOCHUNK	mfscommon/MFSCommunication.h	85;"	d
ERROR_NOCHUNKSERVERS	mfscommon/MFSCommunication.h	84;"	d
ERROR_NOPASSWORD	mfscommon/MFSCommunication.h	111;"	d
ERROR_NOSPACE	mfscommon/MFSCommunication.h	94;"	d
ERROR_NOTDONE	mfscommon/MFSCommunication.h	88;"	d
ERROR_NOTOPENED	mfscommon/MFSCommunication.h	89;"	d
ERROR_NOTSTARTED	mfscommon/MFSCommunication.h	90;"	d
ERROR_OUTOFMEMORY	mfscommon/MFSCommunication.h	80;"	d
ERROR_QUOTA	mfscommon/MFSCommunication.h	109;"	d
ERROR_REGISTER	mfscommon/MFSCommunication.h	87;"	d
ERROR_STRINGS	mfscommon/MFSCommunication.h	118;"	d
ERROR_WRONGCHUNKID	mfscommon/MFSCommunication.h	100;"	d
ERROR_WRONGOFFSET	mfscommon/MFSCommunication.h	98;"	d
ERROR_WRONGSIZE	mfscommon/MFSCommunication.h	97;"	d
ERROR_WRONGVERSION	mfscommon/MFSCommunication.h	92;"	d
ESTATDEFS	mfschunkserver/chartsdata.c	115;"	d	file:
ESTATDEFS	mfsmaster/chartsdata.c	131;"	d	file:
EXA	mfscommon/charts.c	438;"	d	file:
EXorder	mfscgi/mfs.cgi.in	/^		EXorder = 0$/;"	v
EXorder	mfscgi/mfs.cgi.in	/^		EXorder = int(fields.getvalue("EXorder"))$/;"	v
EXrev	mfscgi/mfs.cgi.in	/^		EXrev = 0$/;"	v
EXrev	mfscgi/mfs.cgi.in	/^		EXrev = int(fields.getvalue("EXrev"))$/;"	v
ExportsFileName	mfsmaster/exports.c	/^static char *ExportsFileName;$/;"	v	file:
F	mfscommon/md5.c	46;"	d	file:
FASTCRC	mfscommon/crc.c	64;"	d	file:
FDOT	mfscommon/charts.c	431;"	d	file:
FF	mfscommon/md5.c	53;"	d	file:
FLAG_RESERVED	mfsmaster/filesystem.c	/^enum {FLAG_TREE,FLAG_TRASH,FLAG_RESERVED};$/;"	e	enum:__anon10	file:
FLAG_TRASH	mfsmaster/filesystem.c	/^enum {FLAG_TREE,FLAG_TRASH,FLAG_RESERVED};$/;"	e	enum:__anon10	file:
FLAG_TREE	mfsmaster/filesystem.c	/^enum {FLAG_TREE,FLAG_TRASH,FLAG_RESERVED};$/;"	e	enum:__anon10	file:
FLIST_BUCKET_SIZE	mfsmaster/chunks.c	116;"	d	file:
FREE	mfschunkserver/masterconn.c	/^enum {FREE,CONNECTING,HEADER,DATA,KILL};$/;"	e	enum:__anon25	file:
FREE	mfsmetalogger/masterconn.c	/^enum {FREE,CONNECTING,HEADER,DATA,KILL};$/;"	e	enum:__anon9	file:
FREENODE_BUCKET_SIZE	mfsmaster/filesystem.c	314;"	d	file:
FUSE_REGISTER_BLOB_ACL	mfscommon/MFSCommunication.h	592;"	d
FUSE_REGISTER_BLOB_NOACL	mfscommon/MFSCommunication.h	579;"	d
FUSE_REGISTER_BLOB_TOOLS_NOACL	mfscommon/MFSCommunication.h	586;"	d
FUSE_TRUNCATE	mfsmaster/matoclserv.c	/^enum {FUSE_WRITE,FUSE_TRUNCATE};$/;"	e	enum:__anon18	file:
FUSE_WRITE	mfsmaster/matoclserv.c	/^enum {FUSE_WRITE,FUSE_TRUNCATE};$/;"	e	enum:__anon18	file:
G	mfscommon/md5.c	47;"	d	file:
GETDIR_FLAG_ADDTOCACHE	mfscommon/MFSCommunication.h	257;"	d
GETDIR_FLAG_WITHATTR	mfscommon/MFSCommunication.h	256;"	d
GETNAME	mfsmetarestore/restore.c	37;"	d	file:
GETPATH	mfsmetarestore/restore.c	70;"	d	file:
GETU32	mfsmetarestore/restore.c	118;"	d	file:
GETU64	mfsmetarestore/restore.c	119;"	d	file:
GG	mfscommon/md5.c	58;"	d	file:
GIGA	mfscommon/charts.c	435;"	d	file:
GMODE_ISVALID	mfscommon/MFSCommunication.h	214;"	d
GMODE_NORMAL	mfscommon/MFSCommunication.h	212;"	d
GMODE_RECURSIVE	mfscommon/MFSCommunication.h	213;"	d
H	mfscommon/md5.c	48;"	d	file:
HASHPOS	mfschunkserver/hddspacemgr.c	84;"	d	file:
HASHPOS	mfsmaster/chunks.c	60;"	d	file:
HASHSIZE	mfschunkserver/hddspacemgr.c	83;"	d	file:
HASHSIZE	mfsmaster/chunks.c	59;"	d	file:
HASH_BUCKETS	mfsmount/chunkloccache.c	31;"	d	file:
HASH_BUCKETS	mfsmount/symlinkcache.c	31;"	d	file:
HASH_BUCKET_SIZE	mfsmount/chunkloccache.c	30;"	d	file:
HASH_BUCKET_SIZE	mfsmount/symlinkcache.c	30;"	d	file:
HASH_FUNCTIONS	mfsmount/chunkloccache.c	29;"	d	file:
HASH_FUNCTIONS	mfsmount/symlinkcache.c	29;"	d	file:
HAVE_STRUCT_TM_TM_GMTOFF	mfscommon/charts.c	23;"	d	file:
HAVE_ZLIB_H	mfscommon/charts.c	22;"	d	file:
HDDTestFreq	mfschunkserver/hddspacemgr.c	/^static uint32_t HDDTestFreq=10;$/;"	v	file:
HDaddrname	mfscgi/mfs.cgi.in	/^		HDaddrname = 0$/;"	v
HDaddrname	mfscgi/mfs.cgi.in	/^		HDaddrname = int(fields.getvalue("HDaddrname"))$/;"	v
HDorder	mfscgi/mfs.cgi.in	/^		HDorder = 0$/;"	v
HDorder	mfscgi/mfs.cgi.in	/^		HDorder = int(fields.getvalue("HDorder"))$/;"	v
HDperiod	mfscgi/mfs.cgi.in	/^		HDperiod = 0$/;"	v
HDperiod	mfscgi/mfs.cgi.in	/^		HDperiod = int(fields.getvalue("HDperiod"))$/;"	v
HDrev	mfscgi/mfs.cgi.in	/^		HDrev = 0$/;"	v
HDrev	mfscgi/mfs.cgi.in	/^		HDrev = int(fields.getvalue("HDrev"))$/;"	v
HDtime	mfscgi/mfs.cgi.in	/^		HDtime = 0$/;"	v
HDtime	mfscgi/mfs.cgi.in	/^		HDtime = int(fields.getvalue("HDtime"))$/;"	v
HEADER	mfschunkserver/csserv.c	/^enum {HEADER,DATA};$/;"	e	enum:__anon19	file:
HEADER	mfschunkserver/masterconn.c	/^enum {FREE,CONNECTING,HEADER,DATA,KILL};$/;"	e	enum:__anon25	file:
HEADER	mfschunkserver/replicator.c	/^typedef enum {IDLE,CONNECTING,HEADER,DATA} modetype;$/;"	e	enum:__anon21	file:
HEADER	mfsmaster/matoclserv.c	/^enum {KILL,HEADER,DATA};$/;"	e	enum:__anon17	file:
HEADER	mfsmaster/matocsserv.c	/^enum{KILL,HEADER,DATA};$/;"	e	enum:__anon16	file:
HEADER	mfsmaster/matomlserv.c	/^enum{KILL,HEADER,DATA};$/;"	e	enum:__anon15	file:
HEADER	mfsmetalogger/masterconn.c	/^enum {FREE,CONNECTING,HEADER,DATA,KILL};$/;"	e	enum:__anon9	file:
HH	mfscommon/md5.c	63;"	d	file:
HITS_CORRECT	mfsmount/chunkloccache.c	/^	HITS_CORRECT = 0,$/;"	e	enum:__anon7	file:
HITS_WRONG	mfsmount/chunkloccache.c	/^	HITS_WRONG,$/;"	e	enum:__anon7	file:
HTTP	mfscgi/cgiserv.py.in	/^class HTTP(ClientHandler):$/;"	c
HashCPS	mfsmaster/chunks.c	/^static uint32_t HashCPS;$/;"	v	file:
HashSteps	mfsmaster/chunks.c	/^static uint32_t HashSteps;$/;"	v	file:
I	mfscommon/md5.c	49;"	d	file:
IDHASH	mfsmount/writedata.c	60;"	d	file:
IDHASHSIZE	mfsmount/writedata.c	59;"	d	file:
IDLE	mfschunkserver/csserv.c	/^enum {IDLE,READ,WRITELAST,CONNECTING,WRITEINIT,WRITEFWD,WRITEFINISH,CLOSE,CLOSEWAIT,CLOSED};$/;"	e	enum:__anon20	file:
IDLE	mfschunkserver/replicator.c	/^typedef enum {IDLE,CONNECTING,HEADER,DATA} modetype;$/;"	e	enum:__anon21	file:
II	mfscommon/md5.c	68;"	d	file:
INODE_TYPE_MASK	mfsmount/mfs_meta_fuse.c	81;"	d	file:
INODE_TYPE_MASK	mfsmount/mfstools.c	48;"	d	file:
INODE_TYPE_RESERVED	mfsmount/mfs_meta_fuse.c	83;"	d	file:
INODE_TYPE_RESERVED	mfsmount/mfstools.c	50;"	d	file:
INODE_TYPE_SPECIAL	mfsmount/mfs_meta_fuse.c	84;"	d	file:
INODE_TYPE_SPECIAL	mfsmount/mfstools.c	51;"	d	file:
INODE_TYPE_TRASH	mfsmount/mfs_meta_fuse.c	82;"	d	file:
INODE_TYPE_TRASH	mfsmount/mfstools.c	49;"	d	file:
INODE_VALUE_MASK	mfsmount/mfs_meta_fuse.c	80;"	d	file:
INODE_VALUE_MASK	mfsmount/mfstools.c	47;"	d	file:
INSERTS	mfsmount/symlinkcache.c	/^	INSERTS = 0,$/;"	e	enum:__anon5	file:
INVALID	mfsmaster/chunks.c	/^enum {INVALID,DEL,BUSY,VALID,TDBUSY,TDVALID};$/;"	e	enum:__anon13	file:
INmatrix	mfscgi/mfs.cgi.in	/^		INmatrix = 0$/;"	v
INmatrix	mfscgi/mfs.cgi.in	/^		INmatrix = int(fields.getvalue("INmatrix"))$/;"	v
IO_NONE	mfsmount/mfs_fuse.c	/^enum {IO_NONE,IO_READ,IO_WRITE,IO_READONLY,IO_WRITEONLY};$/;"	e	enum:__anon3	file:
IO_READ	mfsmount/mfs_fuse.c	/^enum {IO_NONE,IO_READ,IO_WRITE,IO_READONLY,IO_WRITEONLY};$/;"	e	enum:__anon3	file:
IO_READONLY	mfsmount/mfs_fuse.c	/^enum {IO_NONE,IO_READ,IO_WRITE,IO_READONLY,IO_WRITEONLY};$/;"	e	enum:__anon3	file:
IO_WRITE	mfsmount/mfs_fuse.c	/^enum {IO_NONE,IO_READ,IO_WRITE,IO_READONLY,IO_WRITEONLY};$/;"	e	enum:__anon3	file:
IO_WRITEONLY	mfsmount/mfs_fuse.c	/^enum {IO_NONE,IO_READ,IO_WRITE,IO_READONLY,IO_WRITEONLY};$/;"	e	enum:__anon3	file:
IS_SPECIAL_INODE	mfsmount/mfs_fuse.c	97;"	d	file:
IS_SPECIAL_NAME	mfsmount/mfs_fuse.c	98;"	d	file:
ITIMER_PROF	mfsmaster/chartsdata.c	44;"	d	file:
ITIMER_REAL	mfsmaster/chartsdata.c	38;"	d	file:
ITIMER_VIRTUAL	mfsmaster/chartsdata.c	41;"	d	file:
JHASHPOS	mfschunkserver/bgjobs.c	40;"	d	file:
JHASHSIZE	mfschunkserver/bgjobs.c	39;"	d	file:
JOBS_EVERYLOOP	mfsmaster/chunks.c	/^enum {JOBS_INIT,JOBS_EVERYLOOP,JOBS_EVERYSECOND};$/;"	e	enum:__anon11	file:
JOBS_EVERYSECOND	mfsmaster/chunks.c	/^enum {JOBS_INIT,JOBS_EVERYLOOP,JOBS_EVERYSECOND};$/;"	e	enum:__anon11	file:
JOBS_INIT	mfsmaster/chunks.c	/^enum {JOBS_INIT,JOBS_EVERYLOOP,JOBS_EVERYSECOND};$/;"	e	enum:__anon11	file:
JSTATE_DISABLED	mfschunkserver/bgjobs.c	/^	JSTATE_DISABLED,$/;"	e	enum:__anon22	file:
JSTATE_ENABLED	mfschunkserver/bgjobs.c	/^	JSTATE_ENABLED,$/;"	e	enum:__anon22	file:
JSTATE_INPROGRESS	mfschunkserver/bgjobs.c	/^	JSTATE_INPROGRESS$/;"	e	enum:__anon22	file:
KEY_BIND	mfsmount/main.c	/^	KEY_BIND,$/;"	e	enum:__anon1	file:
KEY_CFGFILE	mfsmount/main.c	/^	KEY_CFGFILE,$/;"	e	enum:__anon1	file:
KEY_HELP	mfsmount/main.c	/^	KEY_HELP,$/;"	e	enum:__anon1	file:
KEY_HOST	mfsmount/main.c	/^	KEY_HOST,$/;"	e	enum:__anon1	file:
KEY_META	mfsmount/main.c	/^	KEY_META,$/;"	e	enum:__anon1	file:
KEY_NOSTDMOUNTOPTIONS	mfsmount/main.c	/^	KEY_NOSTDMOUNTOPTIONS,$/;"	e	enum:__anon1	file:
KEY_PASSWORDASK	mfsmount/main.c	/^	KEY_PASSWORDASK,$/;"	e	enum:__anon1	file:
KEY_PATH	mfsmount/main.c	/^	KEY_PATH,$/;"	e	enum:__anon1	file:
KEY_PORT	mfsmount/main.c	/^	KEY_PORT,$/;"	e	enum:__anon1	file:
KEY_VERSION	mfsmount/main.c	/^	KEY_VERSION,$/;"	e	enum:__anon1	file:
KILL	mfschunkserver/masterconn.c	/^enum {FREE,CONNECTING,HEADER,DATA,KILL};$/;"	e	enum:__anon25	file:
KILL	mfsmaster/matoclserv.c	/^enum {KILL,HEADER,DATA};$/;"	e	enum:__anon17	file:
KILL	mfsmaster/matocsserv.c	/^enum{KILL,HEADER,DATA};$/;"	e	enum:__anon16	file:
KILL	mfsmaster/matomlserv.c	/^enum{KILL,HEADER,DATA};$/;"	e	enum:__anon15	file:
KILL	mfsmetalogger/masterconn.c	/^enum {FREE,CONNECTING,HEADER,DATA,KILL};$/;"	e	enum:__anon9	file:
KILO	mfscommon/charts.c	433;"	d	file:
LASTERRSIZE	mfschunkserver/hddspacemgr.c	80;"	d	file:
LASTERRTIME	mfschunkserver/hddspacemgr.c	81;"	d	file:
LENG	mfscommon/charts.c	47;"	d	file:
LINELENG	mfsmount/oplog.c	33;"	d	file:
LINKS	mfsmount/symlinkcache.c	/^	LINKS,$/;"	e	enum:__anon5	file:
LOCKTIMEOUT	mfsmaster/chunks.c	162;"	d	file:
LONGRANGE	mfscommon/charts.c	57;"	d	file:
LOOKUPNOHASHLIMIT	mfsmaster/filesystem.c	69;"	d	file:
LOSTCHUNKSBLOCKSIZE	mfschunkserver/hddspacemgr.c	72;"	d	file:
ListenHost	mfschunkserver/csserv.c	/^static char *ListenHost;$/;"	v	file:
ListenHost	mfsmaster/matoclserv.c	/^static char *ListenHost;$/;"	v	file:
ListenHost	mfsmaster/matocsserv.c	/^static char *ListenHost;$/;"	v	file:
ListenHost	mfsmaster/matomlserv.c	/^static char *ListenHost;$/;"	v	file:
ListenPort	mfschunkserver/csserv.c	/^static char *ListenPort;$/;"	v	file:
ListenPort	mfsmaster/matoclserv.c	/^static char *ListenPort;$/;"	v	file:
ListenPort	mfsmaster/matocsserv.c	/^static char *ListenPort;$/;"	v	file:
ListenPort	mfsmaster/matomlserv.c	/^static char *ListenPort;$/;"	v	file:
MAPBITS	mfsmount/readdata.c	46;"	d	file:
MAPINDX	mfsmount/readdata.c	49;"	d	file:
MAPMASK	mfsmount/readdata.c	48;"	d	file:
MAPSIZE	mfsmount/readdata.c	47;"	d	file:
MASTERINFO_INODE	mfsmount/mfs_fuse.c	69;"	d	file:
MASTERINFO_INODE	mfsmount/mfs_meta_fuse.c	94;"	d	file:
MASTERINFO_NAME	mfsmount/mfs_fuse.c	68;"	d	file:
MASTERINFO_NAME	mfsmount/mfs_meta_fuse.c	93;"	d	file:
MASTER_BYTESRCVD	mfsmount/mastercomm.c	/^	MASTER_BYTESRCVD,$/;"	e	enum:__anon6	file:
MASTER_BYTESSENT	mfsmount/mastercomm.c	/^	MASTER_BYTESSENT,$/;"	e	enum:__anon6	file:
MASTER_CONNECTS	mfsmount/mastercomm.c	/^	MASTER_CONNECTS = 0,$/;"	e	enum:__anon6	file:
MASTER_PACKETSRCVD	mfsmount/mastercomm.c	/^	MASTER_PACKETSRCVD,$/;"	e	enum:__anon6	file:
MASTER_PACKETSSENT	mfsmount/mastercomm.c	/^	MASTER_PACKETSSENT,$/;"	e	enum:__anon6	file:
MATOCL_CHUNKSTEST_INFO	mfscommon/MFSCommunication.h	1158;"	d
MATOCL_CHUNKS_MATRIX	mfscommon/MFSCommunication.h	1167;"	d
MATOCL_CSERV_LIST	mfscommon/MFSCommunication.h	1089;"	d
MATOCL_EXPORTS_INFO	mfscommon/MFSCommunication.h	1185;"	d
MATOCL_FSTEST_INFO	mfscommon/MFSCommunication.h	1147;"	d
MATOCL_FUSE_ACCESS	mfscommon/MFSCommunication.h	658;"	d
MATOCL_FUSE_APPEND	mfscommon/MFSCommunication.h	821;"	d
MATOCL_FUSE_CHECK	mfscommon/MFSCommunication.h	830;"	d
MATOCL_FUSE_GETATTR	mfscommon/MFSCommunication.h	676;"	d
MATOCL_FUSE_GETDETACHEDATTR	mfscommon/MFSCommunication.h	893;"	d
MATOCL_FUSE_GETDIR	mfscommon/MFSCommunication.h	770;"	d
MATOCL_FUSE_GETDIRSTATS	mfscommon/MFSCommunication.h	940;"	d
MATOCL_FUSE_GETEATTR	mfscommon/MFSCommunication.h	989;"	d
MATOCL_FUSE_GETGOAL	mfscommon/MFSCommunication.h	863;"	d
MATOCL_FUSE_GETRESERVED	mfscommon/MFSCommunication.h	979;"	d
MATOCL_FUSE_GETTRASH	mfscommon/MFSCommunication.h	883;"	d
MATOCL_FUSE_GETTRASHPATH	mfscommon/MFSCommunication.h	903;"	d
MATOCL_FUSE_GETTRASHTIME	mfscommon/MFSCommunication.h	843;"	d
MATOCL_FUSE_GETXATTR	mfscommon/MFSCommunication.h	1030;"	d
MATOCL_FUSE_LINK	mfscommon/MFSCommunication.h	760;"	d
MATOCL_FUSE_LOOKUP	mfscommon/MFSCommunication.h	666;"	d
MATOCL_FUSE_MKDIR	mfscommon/MFSCommunication.h	725;"	d
MATOCL_FUSE_MKNOD	mfscommon/MFSCommunication.h	715;"	d
MATOCL_FUSE_OPEN	mfscommon/MFSCommunication.h	781;"	d
MATOCL_FUSE_PURGE	mfscommon/MFSCommunication.h	931;"	d
MATOCL_FUSE_QUOTACONTROL	mfscommon/MFSCommunication.h	1010;"	d
MATOCL_FUSE_READLINK	mfscommon/MFSCommunication.h	697;"	d
MATOCL_FUSE_READ_CHUNK	mfscommon/MFSCommunication.h	792;"	d
MATOCL_FUSE_REGISTER	mfscommon/MFSCommunication.h	642;"	d
MATOCL_FUSE_RENAME	mfscommon/MFSCommunication.h	750;"	d
MATOCL_FUSE_REPAIR	mfscommon/MFSCommunication.h	960;"	d
MATOCL_FUSE_RMDIR	mfscommon/MFSCommunication.h	742;"	d
MATOCL_FUSE_SETATTR	mfscommon/MFSCommunication.h	688;"	d
MATOCL_FUSE_SETEATTR	mfscommon/MFSCommunication.h	999;"	d
MATOCL_FUSE_SETGOAL	mfscommon/MFSCommunication.h	873;"	d
MATOCL_FUSE_SETTRASHPATH	mfscommon/MFSCommunication.h	913;"	d
MATOCL_FUSE_SETTRASHTIME	mfscommon/MFSCommunication.h	853;"	d
MATOCL_FUSE_SETXATTR	mfscommon/MFSCommunication.h	1021;"	d
MATOCL_FUSE_SNAPSHOT	mfscommon/MFSCommunication.h	970;"	d
MATOCL_FUSE_STATFS	mfscommon/MFSCommunication.h	650;"	d
MATOCL_FUSE_SYMLINK	mfscommon/MFSCommunication.h	706;"	d
MATOCL_FUSE_TRUNCATE	mfscommon/MFSCommunication.h	950;"	d
MATOCL_FUSE_UNDEL	mfscommon/MFSCommunication.h	922;"	d
MATOCL_FUSE_UNLINK	mfscommon/MFSCommunication.h	734;"	d
MATOCL_FUSE_WRITE_CHUNK	mfscommon/MFSCommunication.h	802;"	d
MATOCL_FUSE_WRITE_CHUNK_END	mfscommon/MFSCommunication.h	811;"	d
MATOCL_INFO	mfscommon/MFSCommunication.h	1136;"	d
MATOCL_MLOG_LIST	mfscommon/MFSCommunication.h	1194;"	d
MATOCL_QUOTA_INFO	mfscommon/MFSCommunication.h	1176;"	d
MATOCL_SESSION_LIST	mfscommon/MFSCommunication.h	1127;"	d
MATOCS_CHUNKOP	mfscommon/MFSCommunication.h	453;"	d
MATOCS_CREATE	mfscommon/MFSCommunication.h	410;"	d
MATOCS_DELETE	mfscommon/MFSCommunication.h	418;"	d
MATOCS_DUPLICATE	mfscommon/MFSCommunication.h	426;"	d
MATOCS_DUPTRUNC	mfscommon/MFSCommunication.h	477;"	d
MATOCS_REPLICATE	mfscommon/MFSCommunication.h	442;"	d
MATOCS_SET_VERSION	mfscommon/MFSCommunication.h	434;"	d
MATOCS_STRUCTURE_LOG	mfscommon/MFSCommunication.h	393;"	d
MATOCS_STRUCTURE_LOG_ROTATE	mfscommon/MFSCommunication.h	398;"	d
MATOCS_TRUNCATE	mfscommon/MFSCommunication.h	469;"	d
MATOCU_CHUNKSTEST_INFO	mfscgi/mfs.cgi.in	/^MATOCU_CHUNKSTEST_INFO = (PROTO_BASE+515)$/;"	v
MATOCU_CHUNKS_MATRIX	mfscgi/mfs.cgi.in	/^MATOCU_CHUNKS_MATRIX = (PROTO_BASE+517)$/;"	v
MATOCU_CSERV_LIST	mfscgi/mfs.cgi.in	/^MATOCU_CSERV_LIST = (PROTO_BASE+501)$/;"	v
MATOCU_EXPORTS_INFO	mfscgi/mfs.cgi.in	/^MATOCU_EXPORTS_INFO = (PROTO_BASE+521)$/;"	v
MATOCU_FSTEST_INFO	mfscgi/mfs.cgi.in	/^MATOCU_FSTEST_INFO = (PROTO_BASE+513)$/;"	v
MATOCU_INFO	mfscgi/mfs.cgi.in	/^MATOCU_INFO = (PROTO_BASE+511)$/;"	v
MATOCU_MLOG_LIST	mfscgi/mfs.cgi.in	/^MATOCU_MLOG_LIST = (PROTO_BASE+523)$/;"	v
MATOCU_QUOTA_INFO	mfscgi/mfs.cgi.in	/^MATOCU_QUOTA_INFO = (PROTO_BASE+519)$/;"	v
MATOCU_SESSION_LIST	mfscgi/mfs.cgi.in	/^MATOCU_SESSION_LIST = (PROTO_BASE+509)$/;"	v
MATOML_DOWNLOAD_DATA	mfscommon/MFSCommunication.h	347;"	d
MATOML_DOWNLOAD_START	mfscommon/MFSCommunication.h	338;"	d
MATOML_METACHANGES_LOG	mfscommon/MFSCommunication.h	329;"	d
MATTR_ALLOWDATACACHE	mfscommon/MFSCommunication.h	240;"	d
MATTR_NOACACHE	mfscommon/MFSCommunication.h	238;"	d
MATTR_NOECACHE	mfscommon/MFSCommunication.h	239;"	d
MATTR_UNDEFINED	mfscommon/MFSCommunication.h	241;"	d
MAXCPS	mfsmaster/chunks.c	56;"	d	file:
MAXFNAMELENG	mfsmaster/filesystem.c	86;"	d	file:
MAXHISTORYSIZE	mfsmount/oplog.c	34;"	d	file:
MAXIDHOLE	mfsmetarestore/main.c	39;"	d	file:
MAXLOGLINESIZE	mfsmaster/changelog.c	31;"	d	file:
MAXLOOPTIME	mfsmaster/chunks.c	55;"	d	file:
MAX_CHUNKS_PER_FILE	mfsmetadump/mfsmetadump.c	34;"	d	file:
MAX_FILE_SIZE	mfsmount/mfs_fuse.c	59;"	d	file:
MAX_INDEX	mfsmaster/filesystem.c	88;"	d	file:
MAX_INDEX	mfsmetadump/mfsmetadump.c	33;"	d	file:
MAX_RECV_PACKET_SIZE	mfschunkserver/replicator.c	47;"	d	file:
MBorder	mfscgi/mfs.cgi.in	/^			MBorder = 0$/;"	v
MBorder	mfscgi/mfs.cgi.in	/^			MBorder = int(fields.getvalue("MBorder"))$/;"	v
MBrev	mfscgi/mfs.cgi.in	/^			MBrev = 0$/;"	v
MBrev	mfscgi/mfs.cgi.in	/^			MBrev = int(fields.getvalue("MBrev"))$/;"	v
MEDIUMRANGE	mfscommon/charts.c	56;"	d	file:
MEGA	mfscommon/charts.c	434;"	d	file:
MEMORY_USAGE	mfsmaster/chartsdata.c	32;"	d	file:
META_DL_BLOCK	mfsmetalogger/masterconn.c	46;"	d	file:
META_INODE_MAX	mfsmount/mfs_meta_fuse.c	78;"	d	file:
META_INODE_MIN	mfsmount/mfs_meta_fuse.c	77;"	d	file:
META_RESERVED_INODE	mfsmount/mfs_meta_fuse.c	73;"	d	file:
META_RESERVED_MODE	mfsmount/mfs_meta_fuse.c	74;"	d	file:
META_RESERVED_NAME	mfsmount/mfs_meta_fuse.c	75;"	d	file:
META_ROOT_INODE	mfsmount/mfs_meta_fuse.c	64;"	d	file:
META_ROOT_MODE	mfsmount/mfs_meta_fuse.c	65;"	d	file:
META_TRASH_INODE	mfsmount/mfs_meta_fuse.c	67;"	d	file:
META_TRASH_MODE	mfsmount/mfs_meta_fuse.c	68;"	d	file:
META_TRASH_NAME	mfsmount/mfs_meta_fuse.c	69;"	d	file:
META_UNDEL_INODE	mfsmount/mfs_meta_fuse.c	70;"	d	file:
META_UNDEL_MODE	mfsmount/mfs_meta_fuse.c	71;"	d	file:
META_UNDEL_NAME	mfsmount/mfs_meta_fuse.c	72;"	d	file:
MFSAPPENDCHUNKS	mfsmount/mfstools.c	/^	MFSAPPENDCHUNKS,$/;"	e	enum:__anon2	file:
MFSBLOCKBITS	mfscommon/MFSCommunication.h	41;"	d
MFSBLOCKBITS	mfscommon/MFSCommunication.h	53;"	d
MFSBLOCKMASK	mfscommon/MFSCommunication.h	39;"	d
MFSBLOCKMASK	mfscommon/MFSCommunication.h	51;"	d
MFSBLOCKNEGMASK	mfscommon/MFSCommunication.h	40;"	d
MFSBLOCKNEGMASK	mfscommon/MFSCommunication.h	52;"	d
MFSBLOCKSINCHUNK	mfscommon/MFSCommunication.h	31;"	d
MFSBLOCKSIZE	mfscommon/MFSCommunication.h	38;"	d
MFSBLOCKSIZE	mfscommon/MFSCommunication.h	50;"	d
MFSCHECKFILE	mfsmount/mfstools.c	/^	MFSCHECKFILE,$/;"	e	enum:__anon2	file:
MFSCHUNKBITS	mfscommon/MFSCommunication.h	36;"	d
MFSCHUNKBITS	mfscommon/MFSCommunication.h	48;"	d
MFSCHUNKBLOCKMASK	mfscommon/MFSCommunication.h	37;"	d
MFSCHUNKBLOCKMASK	mfscommon/MFSCommunication.h	49;"	d
MFSCHUNKMASK	mfscommon/MFSCommunication.h	35;"	d
MFSCHUNKMASK	mfscommon/MFSCommunication.h	47;"	d
MFSCHUNKSIZE	mfscommon/MFSCommunication.h	34;"	d
MFSCHUNKSIZE	mfscommon/MFSCommunication.h	46;"	d
MFSCRCEMPTY	mfscommon/MFSCommunication.h	42;"	d
MFSCRCEMPTY	mfscommon/MFSCommunication.h	54;"	d
MFSDELEATTR	mfsmount/mfstools.c	/^	MFSDELEATTR,$/;"	e	enum:__anon2	file:
MFSDELQUOTA	mfsmount/mfstools.c	/^	MFSDELQUOTA$/;"	e	enum:__anon2	file:
MFSDIRINFO	mfsmount/mfstools.c	/^	MFSDIRINFO,$/;"	e	enum:__anon2	file:
MFSFILEINFO	mfsmount/mfstools.c	/^	MFSFILEINFO,$/;"	e	enum:__anon2	file:
MFSFILEREPAIR	mfsmount/mfstools.c	/^	MFSFILEREPAIR,$/;"	e	enum:__anon2	file:
MFSGETEATTR	mfsmount/mfstools.c	/^	MFSGETEATTR,$/;"	e	enum:__anon2	file:
MFSGETGOAL	mfsmount/mfstools.c	/^	MFSGETGOAL=1,$/;"	e	enum:__anon2	file:
MFSGETQUOTA	mfsmount/mfstools.c	/^	MFSGETQUOTA,$/;"	e	enum:__anon2	file:
MFSGETTRASHTIME	mfsmount/mfstools.c	/^	MFSGETTRASHTIME,$/;"	e	enum:__anon2	file:
MFSHDRSIZE	mfscommon/MFSCommunication.h	43;"	d
MFSHDRSIZE	mfscommon/MFSCommunication.h	55;"	d
MFSMAKESNAPSHOT	mfsmount/mfstools.c	/^	MFSMAKESNAPSHOT,$/;"	e	enum:__anon2	file:
MFSMAXFILES	mfscommon/main.c	22;"	d	file:
MFSSETEATTR	mfsmount/mfstools.c	/^	MFSSETEATTR,$/;"	e	enum:__anon2	file:
MFSSETGOAL	mfsmount/mfstools.c	/^	MFSSETGOAL,$/;"	e	enum:__anon2	file:
MFSSETQUOTA	mfsmount/mfstools.c	/^	MFSSETQUOTA,$/;"	e	enum:__anon2	file:
MFSSETTRASHTIME	mfsmount/mfstools.c	/^	MFSSETTRASHTIME,$/;"	e	enum:__anon2	file:
MFSSIGNATURE	mfscommon/MFSCommunication.h	33;"	d
MFSSIGNATURE	mfscommon/MFSCommunication.h	45;"	d
MFS_INODE_REUSE_DELAY	mfscommon/MFSCommunication.h	68;"	d
MFS_MAX_FILE_SIZE	mfscommon/MFSCommunication.h	66;"	d
MFS_NAME_MAX	mfscommon/MFSCommunication.h	65;"	d
MFS_OPT	mfsmount/main.c	174;"	d	file:
MFS_ROOT_ID	mfscommon/MFSCommunication.h	63;"	d
MFS_USE_MEMLOCK	mfscommon/main.c	33;"	d	file:
MFS_USE_MEMLOCK	mfsmount/main.c	22;"	d	file:
MICRO	mfscommon/charts.c	442;"	d	file:
MILI	mfscommon/charts.c	441;"	d	file:
MINCPS	mfsmaster/chunks.c	57;"	d	file:
MINLOOPTIME	mfsmaster/chunks.c	54;"	d	file:
MIN_SPECIAL_INODE	mfsmount/mfs_fuse.c	96;"	d	file:
MISSES	mfsmount/chunkloccache.c	/^	MISSES,$/;"	e	enum:__anon7	file:
MLTOMA_DOWNLOAD_DATA	mfscommon/MFSCommunication.h	343;"	d
MLTOMA_DOWNLOAD_END	mfscommon/MFSCommunication.h	351;"	d
MLTOMA_DOWNLOAD_START	mfscommon/MFSCommunication.h	334;"	d
MLTOMA_REGISTER	mfscommon/MFSCommunication.h	323;"	d
MLorder	mfscgi/mfs.cgi.in	/^		MLorder = 0$/;"	v
MLorder	mfscgi/mfs.cgi.in	/^		MLorder = int(fields.getvalue("MLorder"))$/;"	v
MLrev	mfscgi/mfs.cgi.in	/^		MLrev = 0$/;"	v
MLrev	mfscgi/mfs.cgi.in	/^		MLrev = int(fields.getvalue("MLrev"))$/;"	v
MMAP_ALLOC	mfschunkserver/hddspacemgr.c	21;"	d	file:
MMAP_ALLOC	mfsmount/mastercomm.c	21;"	d	file:
MODE_MASK_R	mfscommon/MFSCommunication.h	174;"	d
MODE_MASK_W	mfscommon/MFSCommunication.h	175;"	d
MODE_MASK_X	mfscommon/MFSCommunication.h	176;"	d
MOD_ADLER	mfscommon/charts.c	1938;"	d	file:
MOorder	mfscgi/mfs.cgi.in	/^		MOorder = 0$/;"	v
MOorder	mfscgi/mfs.cgi.in	/^		MOorder = int(fields.getvalue("MOorder"))$/;"	v
MOrev	mfscgi/mfs.cgi.in	/^		MOrev = 0$/;"	v
MOrev	mfscgi/mfs.cgi.in	/^		MOrev = int(fields.getvalue("MOrev"))$/;"	v
MSGBUFFSIZE	mfsmaster/filesystem.c	243;"	d	file:
MSorder	mfscgi/mfs.cgi.in	/^		MSorder = 0$/;"	v
MSorder	mfscgi/mfs.cgi.in	/^		MSorder = int(fields.getvalue("MSorder"))$/;"	v
MSrev	mfscgi/mfs.cgi.in	/^		MSrev = 0$/;"	v
MSrev	mfscgi/mfs.cgi.in	/^		MSrev = int(fields.getvalue("MSrev"))$/;"	v
MasterHost	mfschunkserver/masterconn.c	/^static char *MasterHost;$/;"	v	file:
MasterHost	mfsmetalogger/masterconn.c	/^static char *MasterHost;$/;"	v	file:
MasterPort	mfschunkserver/masterconn.c	/^static char *MasterPort;$/;"	v	file:
MasterPort	mfsmetalogger/masterconn.c	/^static char *MasterPort;$/;"	v	file:
MaxDelHardLimit	mfsmaster/chunks.c	/^static uint32_t MaxDelHardLimit;$/;"	v	file:
MaxDelSoftLimit	mfsmaster/chunks.c	/^static uint32_t MaxDelSoftLimit;$/;"	v	file:
MaxPacketSize	mfschunkserver/csserv.c	57;"	d	file:
MaxPacketSize	mfschunkserver/masterconn.c	50;"	d	file:
MaxPacketSize	mfsmaster/matoclserv.c	54;"	d	file:
MaxPacketSize	mfsmaster/matocsserv.c	46;"	d	file:
MaxPacketSize	mfsmaster/matomlserv.c	45;"	d	file:
MaxPacketSize	mfsmetalogger/masterconn.c	44;"	d	file:
MaxReadRepl	mfsmaster/chunks.c	/^static uint32_t MaxReadRepl;$/;"	v	file:
MaxWriteRepl	mfsmaster/chunks.c	/^static uint32_t MaxWriteRepl;$/;"	v	file:
NAME_MAX	mfsmount/mfs_meta_fuse.c	61;"	d	file:
NEWSESSION_TIMEOUT	mfsmaster/matoclserv.c	63;"	d	file:
NODEHASHBITS	mfsmaster/filesystem.c	61;"	d	file:
NODEHASHPOS	mfsmaster/filesystem.c	63;"	d	file:
NODEHASHSIZE	mfsmaster/filesystem.c	62;"	d	file:
NONE	mfsmaster/chunks.c	/^enum {NONE,CREATE,SET_VERSION,DUPLICATE,TRUNCATE,DUPTRUNC};$/;"	e	enum:__anon12	file:
OLDSESSION_TIMEOUT	mfsmaster/matoclserv.c	64;"	d	file:
OPBUFFSIZE	mfsmount/oplog.c	32;"	d	file:
OPENDELAY	mfschunkserver/hddspacemgr.c	62;"	d	file:
OPENSTEPS	mfschunkserver/hddspacemgr.c	64;"	d	file:
OPHISTORY_INODE	mfsmount/mfs_fuse.c	85;"	d	file:
OPHISTORY_NAME	mfsmount/mfs_fuse.c	84;"	d	file:
OPLOG_INODE	mfsmount/mfs_fuse.c	83;"	d	file:
OPLOG_NAME	mfsmount/mfs_fuse.c	82;"	d	file:
OP_ACCESS	mfsmount/mfs_fuse.c	/^	OP_ACCESS,$/;"	e	enum:__anon4	file:
OP_CHUNKOP	mfschunkserver/bgjobs.c	/^	OP_CHUNKOP,$/;"	e	enum:__anon23	file:
OP_CLOSE	mfschunkserver/bgjobs.c	/^	OP_CLOSE,$/;"	e	enum:__anon23	file:
OP_CREATE	mfsmount/mfs_fuse.c	/^	OP_CREATE,$/;"	e	enum:__anon4	file:
OP_DIRCACHE_GETATTR	mfsmount/mfs_fuse.c	/^	OP_DIRCACHE_GETATTR,$/;"	e	enum:__anon4	file:
OP_DIRCACHE_LOOKUP	mfsmount/mfs_fuse.c	/^	OP_DIRCACHE_LOOKUP,$/;"	e	enum:__anon4	file:
OP_EXIT	mfschunkserver/bgjobs.c	/^	OP_EXIT,$/;"	e	enum:__anon23	file:
OP_FLUSH	mfsmount/mfs_fuse.c	/^	OP_FLUSH,$/;"	e	enum:__anon4	file:
OP_FSYNC	mfsmount/mfs_fuse.c	/^	OP_FSYNC,$/;"	e	enum:__anon4	file:
OP_GETATTR	mfsmount/mfs_fuse.c	/^	OP_GETATTR,$/;"	e	enum:__anon4	file:
OP_GETDIR_FULL	mfsmount/mfs_fuse.c	/^	OP_GETDIR_FULL,$/;"	e	enum:__anon4	file:
OP_GETDIR_SMALL	mfsmount/mfs_fuse.c	/^	OP_GETDIR_SMALL,$/;"	e	enum:__anon4	file:
OP_INVAL	mfschunkserver/bgjobs.c	/^	OP_INVAL,$/;"	e	enum:__anon23	file:
OP_LINK	mfsmount/mfs_fuse.c	/^	OP_LINK,$/;"	e	enum:__anon4	file:
OP_LOOKUP	mfsmount/mfs_fuse.c	/^	OP_LOOKUP,$/;"	e	enum:__anon4	file:
OP_LOOKUP_INTERNAL	mfsmount/mfs_fuse.c	/^	OP_LOOKUP_INTERNAL,$/;"	e	enum:__anon4	file:
OP_MKDIR	mfsmount/mfs_fuse.c	/^	OP_MKDIR,$/;"	e	enum:__anon4	file:
OP_MKNOD	mfsmount/mfs_fuse.c	/^	OP_MKNOD,$/;"	e	enum:__anon4	file:
OP_OPEN	mfschunkserver/bgjobs.c	/^	OP_OPEN,$/;"	e	enum:__anon23	file:
OP_OPEN	mfsmount/mfs_fuse.c	/^	OP_OPEN,$/;"	e	enum:__anon4	file:
OP_OPENDIR	mfsmount/mfs_fuse.c	/^	OP_OPENDIR,$/;"	e	enum:__anon4	file:
OP_READ	mfschunkserver/bgjobs.c	/^	OP_READ,$/;"	e	enum:__anon23	file:
OP_READ	mfsmount/mfs_fuse.c	/^	OP_READ,$/;"	e	enum:__anon4	file:
OP_READDIR	mfsmount/mfs_fuse.c	/^	OP_READDIR,$/;"	e	enum:__anon4	file:
OP_READLINK	mfsmount/mfs_fuse.c	/^	OP_READLINK,$/;"	e	enum:__anon4	file:
OP_READLINK_CACHED	mfsmount/mfs_fuse.c	/^	OP_READLINK_CACHED,$/;"	e	enum:__anon4	file:
OP_RELEASE	mfsmount/mfs_fuse.c	/^	OP_RELEASE,$/;"	e	enum:__anon4	file:
OP_RELEASEDIR	mfsmount/mfs_fuse.c	/^	OP_RELEASEDIR,$/;"	e	enum:__anon4	file:
OP_RENAME	mfsmount/mfs_fuse.c	/^	OP_RENAME,$/;"	e	enum:__anon4	file:
OP_REPLICATE	mfschunkserver/bgjobs.c	/^	OP_REPLICATE$/;"	e	enum:__anon23	file:
OP_RMDIR	mfsmount/mfs_fuse.c	/^	OP_RMDIR,$/;"	e	enum:__anon4	file:
OP_SETATTR	mfsmount/mfs_fuse.c	/^	OP_SETATTR,$/;"	e	enum:__anon4	file:
OP_STATFS	mfsmount/mfs_fuse.c	/^	OP_STATFS = 0,$/;"	e	enum:__anon4	file:
OP_SYMLINK	mfsmount/mfs_fuse.c	/^	OP_SYMLINK,$/;"	e	enum:__anon4	file:
OP_UNLINK	mfsmount/mfs_fuse.c	/^	OP_UNLINK,$/;"	e	enum:__anon4	file:
OP_WRITE	mfschunkserver/bgjobs.c	/^	OP_WRITE,$/;"	e	enum:__anon23	file:
OP_WRITE	mfsmount/mfs_fuse.c	/^	OP_WRITE,$/;"	e	enum:__anon4	file:
PARENT	mfsmetarestore/merger.c	21;"	d	file:
PATH_MAX	mfsmaster/filesystem.c	8116;"	d	file:
PATH_SIZE_LIMIT	mfsmount/mfs_meta_fuse.c	62;"	d	file:
PERCENT	mfscommon/charts.c	443;"	d	file:
PETA	mfscommon/charts.c	437;"	d	file:
PHN_USEIEC	mfsmount/mfstools.c	67;"	d	file:
PHN_USESI	mfsmount/mfstools.c	66;"	d	file:
PKGVERSION	mfsmount/mfs_fuse.c	61;"	d	file:
PKGVERSION	mfsmount/mfs_meta_fuse.c	106;"	d	file:
PRESERVEDELAY	mfschunkserver/hddspacemgr.c	68;"	d	file:
PRESERVESTEPS	mfschunkserver/hddspacemgr.c	69;"	d	file:
PRESERVE_BLOCK	mfschunkserver/hddspacemgr.c	53;"	d	file:
PROTO_BASE	mfscgi/chart.cgi.in	/^PROTO_BASE = @PROTO_BASE@$/;"	v
PROTO_BASE	mfscgi/mfs.cgi.in	/^PROTO_BASE = @PROTO_BASE@$/;"	v
QUERYSIZE	mfsmount/masterproxy.c	12;"	d	file:
QUOTA_FLAG_HALL	mfscommon/MFSCommunication.h	253;"	d
QUOTA_FLAG_HINODES	mfscommon/MFSCommunication.h	249;"	d
QUOTA_FLAG_HLENGTH	mfscommon/MFSCommunication.h	250;"	d
QUOTA_FLAG_HREALSIZE	mfscommon/MFSCommunication.h	252;"	d
QUOTA_FLAG_HSIZE	mfscommon/MFSCommunication.h	251;"	d
QUOTA_FLAG_SALL	mfscommon/MFSCommunication.h	248;"	d
QUOTA_FLAG_SINODES	mfscommon/MFSCommunication.h	244;"	d
QUOTA_FLAG_SLENGTH	mfscommon/MFSCommunication.h	245;"	d
QUOTA_FLAG_SREALSIZE	mfscommon/MFSCommunication.h	247;"	d
QUOTA_FLAG_SSIZE	mfscommon/MFSCommunication.h	246;"	d
QUorder	mfscgi/mfs.cgi.in	/^		QUorder = 0$/;"	v
QUorder	mfscgi/mfs.cgi.in	/^		QUorder = int(fields.getvalue("QUorder"))$/;"	v
QUrev	mfscgi/mfs.cgi.in	/^		QUrev = 0$/;"	v
QUrev	mfscgi/mfs.cgi.in	/^		QUrev = int(fields.getvalue("QUrev"))$/;"	v
QuotaTimeLimit	mfsmaster/filesystem.c	/^static uint32_t QuotaTimeLimit;$/;"	v	file:
RANGES	mfscommon/charts.c	60;"	d	file:
RAWSIZE	mfscommon/charts.c	93;"	d	file:
READ	mfschunkserver/csserv.c	/^enum {IDLE,READ,WRITELAST,CONNECTING,WRITEINIT,WRITEFWD,WRITEFINISH,CLOSE,CLOSEWAIT,CLOSED};$/;"	e	enum:__anon20	file:
READDIR_BUFFSIZE	mfsmount/mfs_fuse.c	57;"	d	file:
READDIR_BUFFSIZE	mfsmount/mfs_meta_fuse.c	41;"	d	file:
RECEIVE_TIMEOUT	mfsmount/mastercomm.c	97;"	d	file:
RECVMSECTO	mfschunkserver/replicator.c	45;"	d	file:
REFRESHTICKS	mfsmount/readdata.c	43;"	d	file:
REGISTER_CLOSESESSION	mfscommon/MFSCommunication.h	631;"	d
REGISTER_GETRANDOM	mfscommon/MFSCommunication.h	594;"	d
REGISTER_NEWMETASESSION	mfscommon/MFSCommunication.h	623;"	d
REGISTER_NEWSESSION	mfscommon/MFSCommunication.h	601;"	d
REGISTER_RECONNECT	mfscommon/MFSCommunication.h	609;"	d
REGISTER_TOOLS	mfscommon/MFSCommunication.h	616;"	d
REPHASHFN	mfsmaster/matocsserv.c	103;"	d	file:
REPHASHSIZE	mfsmaster/matocsserv.c	102;"	d	file:
RM_RELOAD	mfscommon/main.c	78;"	d	file:
RM_RESTART	mfscommon/main.c	75;"	d	file:
RM_START	mfscommon/main.c	76;"	d	file:
RM_STOP	mfscommon/main.c	77;"	d	file:
RM_TEST	mfscommon/main.c	79;"	d	file:
RND_RC4_STEP	mfscommon/random.c	62;"	d	file:
ROTATE_LEFT	mfscommon/md5.c	51;"	d	file:
RUSAGE_SELF	mfsmaster/chartsdata.c	30;"	d	file:
RejectOld	mfsmaster/matoclserv.c	/^static uint32_t RejectOld;$/;"	v	file:
ReplicationsDelayDisconnect	mfsmaster/chunks.c	/^static uint32_t ReplicationsDelayDisconnect=3600;$/;"	v	file:
ReplicationsDelayInit	mfsmaster/chunks.c	/^static uint32_t ReplicationsDelayInit=300;$/;"	v	file:
RunTab	mfschunkserver/init.h	/^} RunTab[]={$/;"	v	typeref:struct:__anon24
RunTab	mfsmaster/init.h	/^} RunTab[]={$/;"	v	typeref:struct:__anon14
RunTab	mfsmetalogger/init.h	/^} RunTab[]={$/;"	v	typeref:struct:__anon8
S11	mfscommon/md5.c	23;"	d	file:
S12	mfscommon/md5.c	24;"	d	file:
S13	mfscommon/md5.c	25;"	d	file:
S14	mfscommon/md5.c	26;"	d	file:
S21	mfscommon/md5.c	27;"	d	file:
S22	mfscommon/md5.c	28;"	d	file:
S23	mfscommon/md5.c	29;"	d	file:
S24	mfscommon/md5.c	30;"	d	file:
S31	mfscommon/md5.c	31;"	d	file:
S32	mfscommon/md5.c	32;"	d	file:
S33	mfscommon/md5.c	33;"	d	file:
S34	mfscommon/md5.c	34;"	d	file:
S41	mfscommon/md5.c	35;"	d	file:
S42	mfscommon/md5.c	36;"	d	file:
S43	mfscommon/md5.c	37;"	d	file:
S44	mfscommon/md5.c	38;"	d	file:
SEARCH_HITS	mfsmount/symlinkcache.c	/^	SEARCH_HITS,$/;"	e	enum:__anon5	file:
SEARCH_MISSES	mfsmount/symlinkcache.c	/^	SEARCH_MISSES,$/;"	e	enum:__anon5	file:
SENDMSECTO	mfschunkserver/replicator.c	44;"	d	file:
SESFLAG_CANCHANGEQUOTA	mfscommon/MFSCommunication.h	263;"	d
SESFLAG_DYNAMICIP	mfscommon/MFSCommunication.h	261;"	d
SESFLAG_IGNOREGID	mfscommon/MFSCommunication.h	262;"	d
SESFLAG_MAPALL	mfscommon/MFSCommunication.h	264;"	d
SESFLAG_NEG_STRINGS	mfscommon/MFSCommunication.h	276;"	d
SESFLAG_POS_STRINGS	mfscommon/MFSCommunication.h	266;"	d
SESFLAG_READONLY	mfscommon/MFSCommunication.h	260;"	d
SESSION_STATS	mfsmaster/matoclserv.c	61;"	d	file:
SET_ATIME_FLAG	mfscommon/MFSCommunication.h	190;"	d
SET_DELETE_FLAG	mfscommon/MFSCommunication.h	192;"	d
SET_GID_FLAG	mfscommon/MFSCommunication.h	187;"	d
SET_GOAL_FLAG	mfscommon/MFSCommunication.h	184;"	d
SET_LENGTH_FLAG	mfscommon/MFSCommunication.h	188;"	d
SET_MODE_FLAG	mfscommon/MFSCommunication.h	185;"	d
SET_MTIME_FLAG	mfscommon/MFSCommunication.h	189;"	d
SET_OPENED_FLAG	mfscommon/MFSCommunication.h	191;"	d
SET_UID_FLAG	mfscommon/MFSCommunication.h	186;"	d
SET_VERSION	mfsmaster/chunks.c	/^enum {NONE,CREATE,SET_VERSION,DUPLICATE,TRUNCATE,DUPTRUNC};$/;"	e	enum:__anon12	file:
SHORTRANGE	mfscommon/charts.c	55;"	d	file:
SLIST_BUCKET_SIZE	mfsmaster/chunks.c	94;"	d	file:
SMODE_DECREASE	mfscommon/MFSCommunication.h	203;"	d
SMODE_INCREASE	mfscommon/MFSCommunication.h	202;"	d
SMODE_ISVALID	mfscommon/MFSCommunication.h	209;"	d
SMODE_RDECREASE	mfscommon/MFSCommunication.h	206;"	d
SMODE_RINCREASE	mfscommon/MFSCommunication.h	205;"	d
SMODE_RMASK	mfscommon/MFSCommunication.h	208;"	d
SMODE_RSET	mfscommon/MFSCommunication.h	204;"	d
SMODE_SET	mfscommon/MFSCommunication.h	201;"	d
SMODE_TMASK	mfscommon/MFSCommunication.h	207;"	d
SPACE	mfscommon/charts.c	444;"	d	file:
SQUARE	mfscommon/charts.c	445;"	d	file:
STACK_NODATA	mfscommon/charts.c	877;"	d	file:
STATDEFS	mfschunkserver/chartsdata.c	76;"	d	file:
STATDEFS	mfsmaster/chartsdata.c	97;"	d	file:
STATNODES	mfsmount/chunkloccache.c	/^	STATNODES$/;"	e	enum:__anon7	file:
STATNODES	mfsmount/mastercomm.c	/^	STATNODES$/;"	e	enum:__anon6	file:
STATNODES	mfsmount/mfs_fuse.c	/^	STATNODES$/;"	e	enum:__anon4	file:
STATNODES	mfsmount/symlinkcache.c	/^	STATNODES$/;"	e	enum:__anon5	file:
STATSHISTORY	mfschunkserver/hddspacemgr.c	77;"	d	file:
STATS_INODE	mfsmount/mfs_fuse.c	78;"	d	file:
STATS_NAME	mfsmount/mfs_fuse.c	77;"	d	file:
STATUS_OK	mfscommon/MFSCommunication.h	70;"	d
STR	mfschunkserver/init.h	30;"	d
STR	mfscommon/main.c	64;"	d	file:
STR	mfsmaster/init.h	35;"	d
STR	mfsmetadump/mfsmetadump.c	30;"	d	file:
STR	mfsmetalogger/init.h	26;"	d
STR	mfsmetarestore/main.c	36;"	d	file:
STR	mfsmount/main.c	64;"	d	file:
STR	mfsmount/mfstools.c	44;"	d	file:
STR_AUX	mfschunkserver/init.h	29;"	d
STR_AUX	mfscommon/main.c	63;"	d	file:
STR_AUX	mfsmaster/init.h	34;"	d
STR_AUX	mfsmetadump/mfsmetadump.c	29;"	d	file:
STR_AUX	mfsmetalogger/init.h	25;"	d
STR_AUX	mfsmetarestore/main.c	35;"	d	file:
STR_AUX	mfsmount/main.c	63;"	d	file:
STR_AUX	mfsmount/mfstools.c	43;"	d	file:
STR_TO_charptr	mfscommon/cfg.c	128;"	d	file:
STR_TO_double	mfscommon/cfg.c	127;"	d	file:
STR_TO_int	mfscommon/cfg.c	122;"	d	file:
STR_TO_int32	mfscommon/cfg.c	123;"	d	file:
STR_TO_int64	mfscommon/cfg.c	125;"	d	file:
STR_TO_uint32	mfscommon/cfg.c	124;"	d	file:
STR_TO_uint64	mfscommon/cfg.c	126;"	d	file:
SUGID_CLEAR_MODE_ALWAYS	mfscommon/MFSCommunication.h	288;"	d
SUGID_CLEAR_MODE_BSD	mfscommon/MFSCommunication.h	290;"	d
SUGID_CLEAR_MODE_EXT	mfscommon/MFSCommunication.h	291;"	d
SUGID_CLEAR_MODE_NEVER	mfscommon/MFSCommunication.h	287;"	d
SUGID_CLEAR_MODE_OPTIONS	mfscommon/MFSCommunication.h	294;"	d
SUGID_CLEAR_MODE_OSX	mfscommon/MFSCommunication.h	289;"	d
SUGID_CLEAR_MODE_STRINGS	mfscommon/MFSCommunication.h	296;"	d
SUGID_CLEAR_MODE_XFS	mfscommon/MFSCommunication.h	292;"	d
SYMLINK	mfsmount/mfstools.c	2394;"	d	file:
Server	mfscgi/cgiserv.py.in	/^class Server:$/;"	c
TDBUSY	mfsmaster/chunks.c	/^enum {INVALID,DEL,BUSY,VALID,TDBUSY,TDVALID};$/;"	e	enum:__anon13	file:
TDVALID	mfsmaster/chunks.c	/^enum {INVALID,DEL,BUSY,VALID,TDBUSY,TDVALID};$/;"	e	enum:__anon13	file:
TERA	mfscommon/charts.c	436;"	d	file:
TIMEDIFF	mfsmount/readdata.c	80;"	d	file:
TIMEDIFF	mfsmount/writedata.c	113;"	d	file:
TIMEMODE_RUN_LATE	mfscommon/main.h	26;"	d
TIMEMODE_SKIP_LATE	mfscommon/main.h	25;"	d
TRUNCATE	mfsmaster/chunks.c	/^enum {NONE,CREATE,SET_VERSION,DUPLICATE,TRUNCATE,DUPTRUNC};$/;"	e	enum:__anon12	file:
TYPE_BLOCKDEV	mfscommon/MFSCommunication.h	165;"	d
TYPE_CHARDEV	mfscommon/MFSCommunication.h	166;"	d
TYPE_DIRECTORY	mfscommon/MFSCommunication.h	162;"	d
TYPE_FIFO	mfscommon/MFSCommunication.h	164;"	d
TYPE_FILE	mfscommon/MFSCommunication.h	161;"	d
TYPE_RESERVED	mfscommon/MFSCommunication.h	170;"	d
TYPE_SOCKET	mfscommon/MFSCommunication.h	167;"	d
TYPE_SYMLINK	mfscommon/MFSCommunication.h	163;"	d
TYPE_TRASH	mfscommon/MFSCommunication.h	169;"	d
TYPE_UNKNOWN	mfscommon/MFSCommunication.h	171;"	d
Timeout	mfschunkserver/masterconn.c	/^static uint32_t Timeout;$/;"	v	file:
Timeout	mfsmetalogger/masterconn.c	/^static uint32_t Timeout;$/;"	v	file:
TmpMaxDel	mfsmaster/chunks.c	/^static uint32_t TmpMaxDel;$/;"	v	file:
TmpMaxDelFrac	mfsmaster/chunks.c	/^static double TmpMaxDelFrac;$/;"	v	file:
TopologyFileName	mfsmaster/topology.c	/^static char *TopologyFileName;$/;"	v	file:
UNUSED_DELETE_TIMEOUT	mfsmaster/chunks.c	164;"	d	file:
USECTICK	mfsmount/readdata.c	41;"	d	file:
USE_CHUNK_BUCKETS	mfsmaster/chunks.c	52;"	d	file:
USE_CUIDREC_BUCKETS	mfsmaster/filesystem.c	57;"	d	file:
USE_FLIST_BUCKETS	mfsmaster/chunks.c	51;"	d	file:
USE_FREENODE_BUCKETS	mfsmaster/filesystem.c	56;"	d	file:
USE_NET_ORDER	mfscommon/charts.c	45;"	d	file:
USE_PIO	mfschunkserver/hddspacemgr.c	56;"	d	file:
USE_PTHREADS	mfscommon/main.c	38;"	d	file:
USE_SLIST_BUCKETS	mfsmaster/chunks.c	50;"	d	file:
VALID	mfsmaster/chunks.c	/^enum {INVALID,DEL,BUSY,VALID,TDBUSY,TDVALID};$/;"	e	enum:__anon13	file:
VERSION_ANY	mfscommon/MFSCommunication.h	59;"	d
VERYLONGRANGE	mfscommon/charts.c	58;"	d	file:
WANT_READ	mfscommon/MFSCommunication.h	306;"	d
WANT_WRITE	mfscommon/MFSCommunication.h	307;"	d
WCHASH	mfsmount/writedata.c	57;"	d	file:
WCHASHSIZE	mfsmount/writedata.c	56;"	d	file:
WORKERS	mfsmount/writedata.c	54;"	d	file:
WRITEFINISH	mfschunkserver/csserv.c	/^enum {IDLE,READ,WRITELAST,CONNECTING,WRITEINIT,WRITEFWD,WRITEFINISH,CLOSE,CLOSEWAIT,CLOSED};$/;"	e	enum:__anon20	file:
WRITEFWD	mfschunkserver/csserv.c	/^enum {IDLE,READ,WRITELAST,CONNECTING,WRITEINIT,WRITEFWD,WRITEFINISH,CLOSE,CLOSEWAIT,CLOSED};$/;"	e	enum:__anon20	file:
WRITEINIT	mfschunkserver/csserv.c	/^enum {IDLE,READ,WRITELAST,CONNECTING,WRITEINIT,WRITEFWD,WRITEFINISH,CLOSE,CLOSEWAIT,CLOSED};$/;"	e	enum:__anon20	file:
WRITELAST	mfschunkserver/csserv.c	/^enum {IDLE,READ,WRITELAST,CONNECTING,WRITEINIT,WRITEFWD,WRITEFINISH,CLOSE,CLOSEWAIT,CLOSED};$/;"	e	enum:__anon20	file:
XOR_FOUR_BYTES	mfschunkserver/replicator.c	93;"	d	file:
XOR_ONE_BYTE	mfschunkserver/replicator.c	92;"	d	file:
XPOS	mfscommon/charts.c	49;"	d	file:
XSIZE	mfscommon/charts.c	51;"	d	file:
YOTTA	mfscommon/charts.c	440;"	d	file:
YPOS	mfscommon/charts.c	50;"	d	file:
YSIZE	mfscommon/charts.c	52;"	d	file:
ZETTA	mfscommon/charts.c	439;"	d	file:
_BGJOBS_H_	mfschunkserver/bgjobs.h	20;"	d
_CFG_H_	mfscommon/cfg.h	20;"	d
_CHANGELOG_H_	mfsmaster/changelog.h	20;"	d
_CHARTSDATA_H_	mfschunkserver/chartsdata.h	20;"	d
_CHARTSDATA_H_	mfsmaster/chartsdata.h	20;"	d
_CHARTS_H_	mfscommon/charts.h	20;"	d
_CHUNKLOC_CACHE_H_	mfsmount/chunkloccache.h	20;"	d
_CHUNKS_H_	mfsmaster/chunks.h	20;"	d
_CONFIG_GEN_FUNCTION	mfscommon/cfg.c	146;"	d	file:
_CONFIG_MAKE_PROTOTYPE	mfscommon/cfg.h	24;"	d
_CRC_H_	mfscommon/crc.h	20;"	d
_CSCOMM_H_	mfsmount/cscomm.h	20;"	d
_CSDB_H_	mfsmount/csdb.h	20;"	d
_CSSERV_H_	mfschunkserver/csserv.h	20;"	d
_DATACACHEMGR_H_	mfsmaster/datacachemgr.h	20;"	d
_DATAPACK_H_	mfscommon/datapack.h	20;"	d
_DIRATTRCACHE_H_	mfsmount/dirattrcache.h	20;"	d
_EXPORTS_H_	mfsmaster/exports.h	20;"	d
_FILESYSTEM_H_	mfsmaster/filesystem.h	20;"	d
_HDDSPACEMGR_H_	mfschunkserver/hddspacemgr.h	20;"	d
_ITREE_H_	mfsmaster/itree.h	20;"	d
_MAIN_H_	mfscommon/main.h	20;"	d
_MASSERT_H_	mfscommon/massert.h	20;"	d
_MASTERCOMM_H_	mfsmount/mastercomm.h	20;"	d
_MASTERCONN_H_	mfschunkserver/masterconn.h	20;"	d
_MASTERCONN_H_	mfsmetalogger/masterconn.h	20;"	d
_MASTERPROXY_H_	mfsmount/masterproxy.h	20;"	d
_MATOCLSERV_H_	mfsmaster/matoclserv.h	20;"	d
_MATOCSSERV_H_	mfsmaster/matocsserv.h	20;"	d
_MATOMLSERV_H_	mfsmaster/matomlserv.h	20;"	d
_MD5_H_	mfscommon/md5.h	20;"	d
_MERGER_H_	mfsmetarestore/merger.h	2;"	d
_MFS_COMMUNICATION_H_	mfscommon/MFSCommunication.h	20;"	d
_MFS_FUSE_H_	mfsmount/mfs_fuse.h	20;"	d
_MFS_META_FUSE_H_	mfsmount/mfs_meta_fuse.h	20;"	d
_OPLOG_H_	mfsmount/oplog.h	20;"	d
_PCQUEUE_H_	mfscommon/pcqueue.h	20;"	d
_RC4RANDOM_H_	mfscommon/random.h	20;"	d
_READDATA_H_	mfsmount/readdata.h	20;"	d
_REPLICATOR_H_	mfschunkserver/replicator.h	20;"	d
_RESTORE_H_	mfsmetarestore/restore.h	20;"	d
_SLOGGER_H_	mfscommon/slogger.h	2;"	d
_SOCKETS_H_	mfscommon/sockets.h	20;"	d
_STATS_H_	mfsmount/stats.h	20;"	d
_STRERR_H_	mfscommon/strerr.h	20;"	d
_SYMLINKCACHE_H_	mfsmount/symlinkcache.h	20;"	d
_TOPOLOGY_H_	mfsmaster/topology.h	20;"	d
_WRITEDATAALT_H_	mfsmount/writedata.h	20;"	d
__DARWIN_64_BIT_INO_T	mfsmount/mfs_fuse.c	21;"	d	file:
__DARWIN_64_BIT_INO_T	mfsmount/mfs_meta_fuse.c	21;"	d	file:
__init__	mfscgi/cgiserv.py.in	/^	def __init__(self, server, client_socket, client_address):$/;"	m	class:ClientHandler
__init__	mfscgi/cgiserv.py.in	/^	def __init__(self,host='localhost',port=80):$/;"	m	class:Server
__printflike	mfsmount/oplog.h	27;"	d
__printflike	mfsmount/oplog.h	29;"	d
_acquired_file	mfsmount/mastercomm.c	/^typedef struct _acquired_file {$/;"	s	file:
_bstnode	mfsmaster/filesystem.c	/^typedef struct _bstnode {$/;"	s	file:
_chunk_bucket	mfsmaster/chunks.c	/^typedef struct _chunk_bucket {$/;"	s	file:
_chunk_oc_args	mfschunkserver/bgjobs.c	/^typedef struct _chunk_oc_args {$/;"	s	file:
_chunk_op_args	mfschunkserver/bgjobs.c	/^typedef struct _chunk_op_args {$/;"	s	file:
_chunk_rd_args	mfschunkserver/bgjobs.c	/^typedef struct _chunk_rd_args {$/;"	s	file:
_chunk_rp_args	mfschunkserver/bgjobs.c	/^typedef struct _chunk_rp_args {$/;"	s	file:
_chunk_wr_args	mfschunkserver/bgjobs.c	/^typedef struct _chunk_wr_args {$/;"	s	file:
_cntcond	mfschunkserver/hddspacemgr.c	/^typedef struct _cntcond {$/;"	s	file:
_csdbentry	mfsmount/csdb.c	/^typedef struct _csdbentry {$/;"	s	file:
_data	mfsmaster/filesystem.c	/^	union _data {$/;"	u	struct:_fsnode	file:
_datacache_entry	mfsmaster/datacachemgr.c	/^typedef struct _datacache_entry {$/;"	s	file:
_ddata	mfsmaster/filesystem.c	/^		struct _ddata {				\/\/ type==TYPE_DIRECTORY$/;"	s	union:_fsnode::_data	file:
_devdata	mfsmaster/filesystem.c	/^		struct _devdata {$/;"	s	union:_fsnode::_data	file:
_dirbuf	mfsmount/mfs_fuse.c	/^typedef struct _dirbuf {$/;"	s	file:
_dirbuf	mfsmount/mfs_meta_fuse.c	/^typedef struct _dirbuf {$/;"	s	file:
_dircache	mfsmount/dirattrcache.c	/^typedef struct _dircache {$/;"	s	file:
_estatdef	mfscommon/charts.h	/^typedef struct _estatdef {$/;"	s
_exports	mfsmaster/exports.c	/^typedef struct _exports {$/;"	s	file:
_fdata	mfsmaster/filesystem.c	/^		struct _fdata {				\/\/ type==TYPE_FILE ; type==TYPE_TRASH ; type==TYPE_RESERVED$/;"	s	union:_fsnode::_data	file:
_fhentry	mfsmount/oplog.c	/^typedef struct _fhentry {$/;"	s	file:
_finfo	mfsmount/mfs_fuse.c	/^typedef struct _finfo {$/;"	s	file:
_flist	mfsmaster/chunks.c	/^typedef struct _flist {$/;"	s	file:
_flist_bucket	mfsmaster/chunks.c	/^typedef struct _flist_bucket {$/;"	s	file:
_freenode	mfsmaster/filesystem.c	/^typedef struct _freenode {$/;"	s	file:
_freenode_bucket	mfsmaster/filesystem.c	/^typedef struct _freenode_bucket {$/;"	s	file:
_fsedge	mfsmaster/filesystem.c	/^typedef struct _fsedge {$/;"	s	file:
_fsnode	mfsmaster/filesystem.c	/^typedef struct _fsnode {$/;"	s	file:
_hashbucket	mfsmount/chunkloccache.c	/^typedef struct _hashbucket {$/;"	s	file:
_hashbucket	mfsmount/symlinkcache.c	/^typedef struct _hashbucket {$/;"	s	file:
_hentry	mfsmetarestore/merger.c	/^typedef struct _hentry {$/;"	s	file:
_itnode	mfsmaster/itree.c	/^typedef struct _itnode {$/;"	s	file:
_job	mfschunkserver/bgjobs.c	/^typedef struct _job {$/;"	s	file:
_job_info	mfsmaster/chunks.c	/^typedef struct _job_info {$/;"	s	file:
_jobpool	mfschunkserver/bgjobs.c	/^typedef struct _jobpool {$/;"	s	file:
_loop_info	mfsmaster/chunks.c	/^typedef struct _loop_info {$/;"	s	file:
_md5ctx	mfscommon/md5.h	/^typedef struct _md5ctx {$/;"	s
_pathbuf	mfsmount/mfs_meta_fuse.c	/^typedef struct _pathbuf {$/;"	s	file:
_qentry	mfscommon/pcqueue.c	/^typedef struct _qentry {$/;"	s	file:
_queue	mfscommon/pcqueue.c	/^typedef struct _queue {$/;"	s	file:
_quotanode	mfsmaster/filesystem.c	/^typedef struct _quotanode {$/;"	s	file:
_readrec	mfsmount/readdata.c	/^typedef struct _readrec {$/;"	s	file:
_repdst	mfsmaster/matocsserv.c	/^typedef struct _repdst {$/;"	s	file:
_replication	mfschunkserver/replicator.c	/^typedef struct _replication {$/;"	s	file:
_repsrc	mfschunkserver/replicator.c	/^typedef struct _repsrc {$/;"	s	file:
_repsrc	mfsmaster/matocsserv.c	/^typedef struct _repsrc {$/;"	s	file:
_sdata	mfsmaster/filesystem.c	/^		struct _sdata {				\/\/ type==TYPE_SYMLINK$/;"	s	union:_fsnode::_data	file:
_sessionidrec	mfsmaster/filesystem.c	/^typedef struct _sessionidrec {$/;"	s	file:
_sessionidrec_bucket	mfsmaster/filesystem.c	/^typedef struct _sessionidrec_bucket {$/;"	s	file:
_sinfo	mfsmount/mfs_fuse.c	/^typedef struct _sinfo {$/;"	s	file:
_slist	mfsmaster/chunks.c	/^typedef struct _slist {$/;"	s	file:
_slist_bucket	mfsmaster/chunks.c	/^typedef struct _slist_bucket {$/;"	s	file:
_statdef	mfscommon/charts.h	/^typedef struct _statdef {$/;"	s
_statsnode	mfsmount/stats.c	/^typedef struct _statsnode {$/;"	s	file:
_statsrecord	mfsmaster/filesystem.c	/^typedef struct _statsrecord {$/;"	s	file:
_threc	mfsmount/mastercomm.c	/^typedef struct _threc {$/;"	s	file:
absolute	mfsmount/stats.c	/^	uint8_t absolute;$/;"	m	struct:_statsnode	file:
ac_fn_c_check_decl	configure	/^ac_fn_c_check_decl ()$/;"	f
ac_fn_c_check_func	configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_member	configure	/^ac_fn_c_check_member ()$/;"	f
ac_fn_c_check_type	configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_find_intX_t	configure	/^ac_fn_c_find_intX_t ()$/;"	f
ac_fn_c_find_uintX_t	configure	/^ac_fn_c_find_uintX_t ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
acquired_file	mfsmount/mastercomm.c	/^} acquired_file;$/;"	t	typeref:struct:_acquired_file	file:
active	mfsmount/stats.c	/^	uint8_t active;$/;"	m	struct:_statsnode	file:
activenodes	mfsmount/stats.c	/^static uint32_t activenodes = 0;$/;"	v	file:
activity	mfschunkserver/csserv.c	/^	uint32_t activity;$/;"	m	struct:csserventry	file:
addrdata	mfscgi/mfs.cgi.in	/^				addrdata = d[0:8]$/;"	v
afhead	mfsmount/mastercomm.c	/^static acquired_file *afhead=NULL;$/;"	v	file:
aflock	mfsmount/mastercomm.c	/^static pthread_mutex_t fdlock,reclock,aflock;$/;"	v	file:
agid	mfsmaster/matoclserv.c	/^	uint32_t agid;$/;"	m	struct:chunklist	file:
allactiveplengs	mfsmount/stats.c	/^static uint32_t allactiveplengs = 0;$/;"	v	file:
allchunkcounts	mfsmaster/chunks.c	/^uint32_t allchunkcounts[11][11];$/;"	v
alldirs	mfsmaster/exports.c	/^	unsigned alldirs:1;$/;"	m	struct:_exports	file:
allvalidcopies	mfsmaster/chunks.c	/^	uint8_t allvalidcopies;$/;"	m	struct:chunk	file:
append_file	mfsmount/mfstools.c	/^int append_file(const char *fname,const char *afname) {$/;"	f
args	mfschunkserver/bgjobs.c	/^	void *args;$/;"	m	struct:_job	file:
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
atime	mfsmaster/filesystem.c	/^	uint32_t ctime,mtime,atime;$/;"	m	struct:_fsnode	file:
attr_cache_timeout	mfsmount/mfs_fuse.c	/^static double attr_cache_timeout = 0.1;$/;"	v	file:
attr_cache_timeout	mfsmount/mfs_meta_fuse.c	/^static double attr_cache_timeout = 1.0;$/;"	v	file:
attrcacheto	mfsmount/main.c	/^	double attrcacheto;$/;"	m	struct:mfsopts	file:
auid	mfsmaster/matoclserv.c	/^	uint32_t auid;$/;"	m	struct:chunklist	file:
avail	mfschunkserver/hddspacemgr.c	/^	uint64_t avail;$/;"	m	struct:folder	file:
bindhost	mfsmount/main.c	/^	char *bindhost;$/;"	m	struct:mfsopts	file:
bindhostname	mfsmount/mastercomm.c	/^	char *bindhostname;$/;"	m	struct:connect_args_t	file:
bindip	mfschunkserver/masterconn.c	/^	uint32_t bindip;$/;"	m	struct:masterconn	file:
bindip	mfsmetalogger/masterconn.c	/^	uint32_t bindip;$/;"	m	struct:masterconn	file:
bitmasksize	mfsmaster/filesystem.c	/^static uint32_t bitmasksize;$/;"	v	file:
block	mfschunkserver/hddspacemgr.c	/^	uint8_t *block;$/;"	m	struct:chunk	file:
blockbufferkey	mfschunkserver/hddspacemgr.c	/^static pthread_key_t blockbufferkey;$/;"	v	file:
blockno	mfschunkserver/hddspacemgr.c	/^	uint16_t blockno;	\/\/ 0xFFFF == invalid$/;"	m	struct:chunk	file:
blocknum	mfschunkserver/bgjobs.c	/^	uint16_t blocknum;$/;"	m	struct:_chunk_rd_args	file:
blocknum	mfschunkserver/bgjobs.c	/^	uint16_t blocknum;$/;"	m	struct:_chunk_wr_args	file:
blocks	mfschunkserver/hddspacemgr.c	/^	uint16_t blocks;$/;"	m	struct:chunk	file:
blocks	mfschunkserver/replicator.c	/^	uint16_t blocks;$/;"	m	struct:_repsrc	file:
blocksize	mfscgi/cgiserv.py.in	/^	blocksize = 2 << 16				# size of blocks to read from files and send$/;"	v	class:HTTP
blocksize	mfscgi/cgiserv.py.in	/^	blocksize = 2048$/;"	v	class:ClientHandler
blocksteps	mfschunkserver/hddspacemgr.c	/^	uint8_t blocksteps;$/;"	m	struct:chunk	file:
bsd_basename	mfsmount/mfstools.c	/^int bsd_basename(const char *path,char *bname) {$/;"	f
bsd_dirname	mfsmount/mfstools.c	/^int bsd_dirname(const char *path,char *bname) {$/;"	f
bstnode	mfsmaster/filesystem.c	/^} bstnode;$/;"	t	typeref:struct:_bstnode	file:
bucket	mfsmaster/chunks.c	/^	chunk bucket[CHUNK_BUCKET_SIZE];$/;"	m	struct:_chunk_bucket	file:
bucket	mfsmaster/chunks.c	/^	flist bucket[FLIST_BUCKET_SIZE];$/;"	m	struct:_flist_bucket	file:
bucket	mfsmaster/chunks.c	/^	slist bucket[SLIST_BUCKET_SIZE];$/;"	m	struct:_slist_bucket	file:
bucket	mfsmaster/filesystem.c	/^	freenode bucket[FREENODE_BUCKET_SIZE];$/;"	m	struct:_freenode_bucket	file:
bucket	mfsmaster/filesystem.c	/^	sessionidrec bucket[CUIDREC_BUCKET_SIZE];$/;"	m	struct:_sessionidrec_bucket	file:
buff	mfsmetarestore/merger.c	/^	char *buff;$/;"	m	struct:_hentry	file:
buff	mfsmount/mfs_fuse.c	/^	char *buff;$/;"	m	struct:_sinfo	file:
buffer	mfschunkserver/bgjobs.c	/^	const uint8_t *buffer;$/;"	m	struct:_chunk_wr_args	file:
buffer	mfschunkserver/bgjobs.c	/^	uint8_t *buffer;$/;"	m	struct:_chunk_rd_args	file:
buffer	mfscommon/md5.h	/^	uint8_t buffer[64];$/;"	m	struct:_md5ctx
bytesleft	mfschunkserver/csserv.c	/^	uint32_t bytesleft;$/;"	m	struct:packetstruct	file:
bytesleft	mfschunkserver/masterconn.c	/^	uint32_t bytesleft;$/;"	m	struct:packetstruct	file:
bytesleft	mfschunkserver/replicator.c	/^	uint32_t bytesleft;$/;"	m	struct:_repsrc	file:
bytesleft	mfsmaster/matoclserv.c	/^	uint32_t bytesleft;$/;"	m	struct:packetstruct	file:
bytesleft	mfsmaster/matocsserv.c	/^	uint32_t bytesleft;$/;"	m	struct:packetstruct	file:
bytesleft	mfsmaster/matomlserv.c	/^	uint32_t bytesleft;$/;"	m	struct:packetstruct	file:
bytesleft	mfsmetalogger/masterconn.c	/^	uint32_t bytesleft;$/;"	m	struct:packetstruct	file:
c1src	mfscommon/charts.h	/^	uint32_t c1src;$/;"	m	struct:_estatdef
c2src	mfscommon/charts.h	/^	uint32_t c2src;$/;"	m	struct:_estatdef
c3src	mfscommon/charts.h	/^	uint32_t c3src;$/;"	m	struct:_estatdef
cacheblockcount	mfsmount/writedata.c	/^	uint32_t cacheblockcount;$/;"	m	struct:inodedata_s	file:
cacheblocks	mfsmount/writedata.c	/^static cblock *cacheblocks,*freecblockshead;$/;"	v	file:
cachefiles	mfsmount/main.c	/^	int cachefiles;$/;"	m	struct:mfsopts	file:
cachemode	mfsmount/main.c	/^	char *cachemode;$/;"	m	struct:mfsopts	file:
calcdefs	mfschunkserver/chartsdata.c	/^static const uint32_t calcdefs[]=CALCDEFS$/;"	v	file:
calcdefs	mfscommon/charts.c	/^static uint32_t *calcdefs;$/;"	v	file:
calcdefs	mfsmaster/chartsdata.c	/^static const uint32_t calcdefs[]=CALCDEFS$/;"	v	file:
calcdefscount	mfscommon/charts.c	/^static uint32_t calcdefscount;$/;"	v	file:
calcstartpos	mfscommon/charts.c	/^static uint32_t **calcstartpos;$/;"	v	file:
callback	mfschunkserver/bgjobs.c	/^	void (*callback)(uint8_t status,void *extra);$/;"	m	struct:_job	file:
canexit	mfscommon/main.c	/^int canexit() {$/;"	f
carry	mfschunkserver/hddspacemgr.c	/^	double carry;$/;"	m	struct:folder	file:
carry	mfsmaster/matocsserv.c	/^	double carry;$/;"	m	struct:matocsserventry	file:
cbhead	mfsmaster/chunks.c	/^static chunk_bucket *cbhead = NULL;$/;"	v	file:
cblock	mfsmount/writedata.c	/^} cblock;$/;"	t	typeref:struct:cblock_s	file:
cblock_s	mfsmount/writedata.c	/^typedef struct cblock_s {$/;"	s	file:
cchtmp	mfscgi/mfs.cgi.in	/^		cchtmp = CCdata.split(":")$/;"	v
cclist	mfschunkserver/hddspacemgr.c	/^static cntcond *cclist = NULL;$/;"	v	file:
ccond	mfschunkserver/hddspacemgr.c	/^	cntcond *ccond;$/;"	m	struct:chunk	file:
ceentry	mfscommon/main.c	/^typedef struct ceentry {$/;"	s	file:
ceentry	mfscommon/main.c	/^} ceentry;$/;"	t	typeref:struct:ceentry	file:
cehead	mfscommon/main.c	/^static ceentry *cehead=NULL;$/;"	v	file:
cfg_isdefined	mfscommon/cfg.c	/^int cfg_isdefined(const char *name) {$/;"	f
cfg_load	mfscommon/cfg.c	/^int cfg_load (const char *configfname,int _lu) {$/;"	f
cfg_term	mfscommon/cfg.c	/^void cfg_term(void) {$/;"	f
chain1fd	mfsmaster/matomlserv.c	/^	int metafd,chain1fd,chain2fd;$/;"	m	struct:matomlserventry	file:
chain2fd	mfsmaster/matomlserv.c	/^	int metafd,chain1fd,chain2fd;$/;"	m	struct:matomlserventry	file:
changed	mfsmount/mfs_meta_fuse.c	/^	int changed;$/;"	m	struct:_pathbuf	file:
changelog	mfsmaster/changelog.c	/^void changelog(uint64_t version,const char *format,...) {$/;"	f
changelog_checkname	mfsmetarestore/main.c	/^int changelog_checkname(const char *fname) {$/;"	f
changelog_init	mfsmaster/changelog.c	/^int changelog_init(void) {$/;"	f
changelog_rotate	mfsmaster/changelog.c	/^void changelog_rotate() {$/;"	f
changeugid	mfscommon/main.c	/^void changeugid(void) {$/;"	f
chart	mfscommon/charts.c	/^static uint8_t chart[(XSIZE)*(YSIZE)];$/;"	v	file:
chartid	mfscgi/chart.cgi.in	/^		chartid = -1$/;"	v
chartid	mfscgi/chart.cgi.in	/^		chartid = int(fields.getvalue("id"))$/;"	v
chartid	mfscgi/chart.cgi.in	/^	chartid = -1$/;"	v
charts	mfscgi/mfs.cgi.in	/^		charts = ($/;"	v
charts_add	mfscommon/charts.c	/^void charts_add (uint64_t *data,uint32_t datats) {$/;"	f
charts_adler32	mfscommon/charts.c	/^static uint32_t charts_adler32(uint8_t *data,uint32_t len) {$/;"	f	file:
charts_chart_to_rawchart	mfscommon/charts.c	/^void charts_chart_to_rawchart() {$/;"	f
charts_datasize	mfscommon/charts.c	/^uint32_t charts_datasize(uint32_t number) {$/;"	f
charts_fake_compress	mfscommon/charts.c	/^int charts_fake_compress(uint8_t *src,uint32_t srcsize,uint8_t *dst,uint32_t *dstsize) {$/;"	f
charts_fill_crc	mfscommon/charts.c	/^void charts_fill_crc(uint8_t *buff,uint32_t leng) {$/;"	f
charts_filltab	mfscommon/charts.c	/^void charts_filltab(uint64_t *datatab,uint32_t range,uint32_t type,uint32_t cno) {$/;"	f
charts_fixmax	mfscommon/charts.c	/^double charts_fixmax(uint64_t max,uint8_t *scale,uint8_t *mode,uint16_t *base) {$/;"	f
charts_get	mfscommon/charts.c	/^uint64_t charts_get (uint32_t type,uint32_t numb) {$/;"	f
charts_get_png	mfscommon/charts.c	/^void charts_get_png(uint8_t *buff) {$/;"	f
charts_import_from_old_3ranges_format	mfscommon/charts.c	/^int charts_import_from_old_3ranges_format(int fd) {$/;"	f
charts_import_from_old_4ranges_format	mfscommon/charts.c	/^int charts_import_from_old_4ranges_format(int fd) {$/;"	f
charts_init	mfscommon/charts.c	/^int charts_init (const uint32_t *calcs,const statdef *stats,const estatdef *estats,const char *filename) {$/;"	f
charts_inittimepointers	mfscommon/charts.c	/^void charts_inittimepointers (void) {$/;"	f
charts_load	mfscommon/charts.c	/^void charts_load(void) {$/;"	f
charts_make_png	mfscommon/charts.c	/^uint32_t charts_make_png(uint32_t number) {$/;"	f
charts_makechart	mfscommon/charts.c	/^void charts_makechart(uint32_t type,uint32_t range) {$/;"	f
charts_makedata	mfscommon/charts.c	/^void charts_makedata(uint8_t *buff,uint32_t number) {$/;"	f
charts_puttext	mfscommon/charts.c	/^static inline void charts_puttext(int32_t posx,int32_t posy,uint8_t color,uint8_t *data,uint32_t leng,int32_t minx,int32_t maxx,int32_t miny,int32_t maxy) {$/;"	f	file:
charts_putwarning	mfscommon/charts.c	/^static inline void charts_putwarning(uint32_t posx,uint32_t posy,uint8_t color) {$/;"	f	file:
charts_store	mfscommon/charts.c	/^void charts_store (void) {$/;"	f
charts_term	mfscommon/charts.c	/^void charts_term (void) {$/;"	f
chartsdata_init	mfschunkserver/chartsdata.c	/^int chartsdata_init (void) {$/;"	f
chartsdata_init	mfsmaster/chartsdata.c	/^int chartsdata_init (void) {$/;"	f
chartsdata_memusage	mfsmaster/chartsdata.c	/^uint64_t chartsdata_memusage(void) {$/;"	f
chartsdata_refresh	mfschunkserver/chartsdata.c	/^void chartsdata_refresh(void) {$/;"	f
chartsdata_refresh	mfsmaster/chartsdata.c	/^void chartsdata_refresh(void) {$/;"	f
chartsdata_store	mfschunkserver/chartsdata.c	/^void chartsdata_store(void) {$/;"	f
chartsdata_store	mfsmaster/chartsdata.c	/^void chartsdata_store(void) {$/;"	f
chartsdata_term	mfschunkserver/chartsdata.c	/^void chartsdata_term(void) {$/;"	f
chartsdata_term	mfsmaster/chartsdata.c	/^void chartsdata_term(void) {$/;"	f
check_file	mfsmount/mfstools.c	/^int check_file(const char* fname) {$/;"	f
check_old_locks	mfscommon/main.c	/^int check_old_locks(uint8_t runmode,uint32_t timeout) {$/;"	f
chfreehead	mfsmaster/chunks.c	/^static chunk *chfreehead = NULL;$/;"	v	file:
chid	mfscgi/mfs.cgi.in	/^					chid = id$/;"	v
chid	mfscgi/mfs.cgi.in	/^					chid = int(CCdata)$/;"	v
chid	mfscgi/mfs.cgi.in	/^			chid = 0$/;"	v
child	mfsmaster/filesystem.c	/^	struct _fsnode *child,*parent;$/;"	m	struct:_fsedge	typeref:struct:_fsedge::_fsnode	file:
children	mfsmaster/filesystem.c	/^			fsedge *children;$/;"	m	struct:_fsnode::_data::_ddata	file:
chindx	mfsmount/writedata.c	/^	uint32_t chindx;	\/\/ chunk number$/;"	m	struct:cblock_s	file:
chunk	mfschunkserver/hddspacemgr.c	/^typedef struct chunk {$/;"	s	file:
chunk	mfschunkserver/hddspacemgr.c	/^} chunk;$/;"	t	typeref:struct:chunk	file:
chunk	mfsmaster/chunks.c	/^typedef struct chunk {$/;"	s	file:
chunk	mfsmaster/chunks.c	/^} chunk;$/;"	t	typeref:struct:chunk	file:
chunk_add_file	mfsmaster/chunks.c	/^int chunk_add_file(uint64_t chunkid,uint32_t inode,uint16_t indx,uint8_t goal) {$/;"	f
chunk_bucket	mfsmaster/chunks.c	/^} chunk_bucket;$/;"	t	typeref:struct:_chunk_bucket	file:
chunk_count	mfsmaster/chunks.c	/^uint32_t chunk_count(void) {$/;"	f
chunk_damaged	mfsmaster/chunks.c	/^void chunk_damaged(void *ptr,uint64_t chunkid) {$/;"	f
chunk_delete	mfsmaster/chunks.c	/^void chunk_delete(chunk* c) {$/;"	f
chunk_delete_file	mfsmaster/chunks.c	/^int chunk_delete_file(uint64_t chunkid,uint32_t inode,uint16_t indx) {$/;"	f
chunk_do_jobs	mfsmaster/chunks.c	/^void chunk_do_jobs(chunk *c,uint16_t scount,double minusage,double maxusage) {$/;"	f
chunk_dump	mfsmaster/chunks.c	/^void chunk_dump(void) {$/;"	f
chunk_emergency_increase_version	mfsmaster/chunks.c	/^void chunk_emergency_increase_version(chunk *c) {$/;"	f
chunk_emptycrc	mfschunkserver/hddspacemgr.c	/^static inline void chunk_emptycrc(chunk *c) {$/;"	f	file:
chunk_find	mfsmaster/chunks.c	/^chunk* chunk_find(uint64_t chunkid) {$/;"	f
chunk_free	mfsmaster/chunks.c	/^static inline void chunk_free(chunk *p) {$/;"	f	file:
chunk_free	mfsmaster/chunks.c	/^static inline void chunk_free(chunk* p) {$/;"	f	file:
chunk_freecrc	mfschunkserver/hddspacemgr.c	/^static inline void chunk_freecrc(chunk *c) {$/;"	f	file:
chunk_get_missing_count	mfsmaster/chunks.c	/^uint32_t chunk_get_missing_count(void) {$/;"	f
chunk_get_validcopies	mfsmaster/chunks.c	/^int chunk_get_validcopies(uint64_t chunkid,uint8_t *vcopies) {$/;"	f
chunk_getversionandlocations	mfsmaster/chunks.c	/^int chunk_getversionandlocations(uint64_t chunkid,uint32_t cuip,uint32_t *version,uint8_t *count,uint8_t loc[100*6]) {$/;"	f
chunk_got_chunkop_status	mfsmaster/chunks.c	/^void chunk_got_chunkop_status(void *ptr,uint64_t chunkid,uint8_t status) {$/;"	f
chunk_got_create_status	mfsmaster/chunks.c	/^void chunk_got_create_status(void *ptr,uint64_t chunkid,uint8_t status) {$/;"	f
chunk_got_delete_status	mfsmaster/chunks.c	/^void chunk_got_delete_status(void *ptr,uint64_t chunkid,uint8_t status) {$/;"	f
chunk_got_duplicate_status	mfsmaster/chunks.c	/^void chunk_got_duplicate_status(void *ptr,uint64_t chunkid,uint8_t status) {$/;"	f
chunk_got_duptrunc_status	mfsmaster/chunks.c	/^void chunk_got_duptrunc_status(void *ptr,uint64_t chunkid,uint8_t status) {$/;"	f
chunk_got_replicate_status	mfsmaster/chunks.c	/^void chunk_got_replicate_status(void *ptr,uint64_t chunkid,uint32_t version,uint8_t status) {$/;"	f
chunk_got_setversion_status	mfsmaster/chunks.c	/^void chunk_got_setversion_status(void *ptr,uint64_t chunkid,uint8_t status) {$/;"	f
chunk_got_truncate_status	mfsmaster/chunks.c	/^void chunk_got_truncate_status(void *ptr,uint64_t chunkid,uint8_t status) {$/;"	f
chunk_increase_version	mfsmaster/chunks.c	/^int chunk_increase_version(uint64_t chunkid) {$/;"	f
chunk_info	mfsmaster/chunks.c	/^void chunk_info(uint32_t *allchunks,uint32_t *allcopies,uint32_t *regularvalidcopies) {$/;"	f
chunk_jobs_main	mfsmaster/chunks.c	/^void chunk_jobs_main(void) {$/;"	f
chunk_load	mfsmaster/chunks.c	/^int chunk_load(FILE *fd) {$/;"	f
chunk_load	mfsmetadump/mfsmetadump.c	/^int chunk_load(FILE *fd) {$/;"	f
chunk_locsort_cmp	mfsmaster/chunks.c	/^int chunk_locsort_cmp(const void *aa,const void *bb) {$/;"	f
chunk_lost	mfsmaster/chunks.c	/^void chunk_lost(void *ptr,uint64_t chunkid) {$/;"	f
chunk_malloc	mfsmaster/chunks.c	/^static inline chunk* chunk_malloc() {$/;"	f	file:
chunk_multi_modify	mfsmaster/chunks.c	/^int chunk_multi_modify(uint64_t *nchunkid,uint64_t ochunkid,uint32_t inode,uint16_t indx,uint8_t goal,uint8_t *opflag) {$/;"	f
chunk_multi_truncate	mfsmaster/chunks.c	/^int chunk_multi_truncate(uint64_t *nchunkid,uint64_t ochunkid,uint32_t length,uint32_t inode,uint16_t indx,uint8_t goal) {$/;"	f
chunk_new	mfsmaster/chunks.c	/^chunk* chunk_new(uint64_t chunkid) {$/;"	f
chunk_newfs	mfsmaster/chunks.c	/^void chunk_newfs(void) {$/;"	f
chunk_oc_args	mfschunkserver/bgjobs.c	/^} chunk_oc_args;$/;"	t	typeref:struct:_chunk_oc_args	file:
chunk_op_args	mfschunkserver/bgjobs.c	/^} chunk_op_args;$/;"	t	typeref:struct:_chunk_op_args	file:
chunk_operation_status	mfsmaster/chunks.c	/^void chunk_operation_status(chunk *c,uint8_t status,void *ptr) {$/;"	f
chunk_rd_args	mfschunkserver/bgjobs.c	/^} chunk_rd_args;$/;"	t	typeref:struct:_chunk_rd_args	file:
chunk_readcrc	mfschunkserver/hddspacemgr.c	/^static inline int chunk_readcrc(chunk *c) {$/;"	f	file:
chunk_refresh_goal	mfsmaster/chunks.c	/^void chunk_refresh_goal(chunk* c) {$/;"	f
chunk_repair	mfsmaster/chunks.c	/^int chunk_repair(uint32_t inode,uint16_t indx,uint64_t ochunkid,uint32_t *nversion) {$/;"	f
chunk_rp_args	mfschunkserver/bgjobs.c	/^} chunk_rp_args;$/;"	t	typeref:struct:_chunk_rp_args	file:
chunk_server_disconnected	mfsmaster/chunks.c	/^void chunk_server_disconnected(void *ptr) {$/;"	f
chunk_server_has_chunk	mfsmaster/chunks.c	/^void chunk_server_has_chunk(void *ptr,uint64_t chunkid,uint32_t version) {$/;"	f
chunk_set_file_goal	mfsmaster/chunks.c	/^int chunk_set_file_goal(uint64_t chunkid,uint32_t inode,uint16_t indx,uint8_t goal) {$/;"	f
chunk_set_version	mfsmaster/chunks.c	/^int chunk_set_version(uint64_t chunkid,uint32_t version) {$/;"	f
chunk_state_change	mfsmaster/chunks.c	/^static inline void chunk_state_change(uint8_t oldgoal,uint8_t newgoal,uint8_t oldavc,uint8_t newavc,uint8_t oldrvc,uint8_t newrvc) {$/;"	f	file:
chunk_stats	mfsmaster/chunks.c	/^void chunk_stats(uint32_t *del,uint32_t *repl) {$/;"	f
chunk_store	mfsmaster/chunks.c	/^void chunk_store(FILE *fd) {$/;"	f
chunk_store_chunkcounters	mfsmaster/chunks.c	/^void chunk_store_chunkcounters(uint8_t *buff,uint8_t matrixid) {$/;"	f
chunk_store_info	mfsmaster/chunks.c	/^void chunk_store_info(uint8_t *buff) {$/;"	f
chunk_strinit	mfsmaster/chunks.c	/^int chunk_strinit(void) {$/;"	f
chunk_term	mfsmaster/chunks.c	/^void chunk_term(void) {$/;"	f
chunk_unlock	mfsmaster/chunks.c	/^int chunk_unlock(uint64_t chunkid) {$/;"	f
chunk_wr_args	mfschunkserver/bgjobs.c	/^} chunk_wr_args;$/;"	t	typeref:struct:_chunk_wr_args	file:
chunk_writecrc	mfschunkserver/hddspacemgr.c	/^static inline int chunk_writecrc(chunk *c) {$/;"	f	file:
chunkcount	mfschunkserver/hddspacemgr.c	/^	uint32_t chunkcount;$/;"	m	struct:folder	file:
chunkdelayedops	mfsmaster/matoclserv.c	/^	chunklist *chunkdelayedops;$/;"	m	struct:matoclserventry	file:
chunkhash	mfsmaster/chunks.c	/^static chunk *chunkhash[HASHSIZE];$/;"	v	file:
chunkid	mfschunkserver/bgjobs.c	/^	uint64_t chunkid,copychunkid;$/;"	m	struct:_chunk_op_args	file:
chunkid	mfschunkserver/bgjobs.c	/^	uint64_t chunkid;$/;"	m	struct:_chunk_oc_args	file:
chunkid	mfschunkserver/bgjobs.c	/^	uint64_t chunkid;$/;"	m	struct:_chunk_rd_args	file:
chunkid	mfschunkserver/bgjobs.c	/^	uint64_t chunkid;$/;"	m	struct:_chunk_rp_args	file:
chunkid	mfschunkserver/bgjobs.c	/^	uint64_t chunkid;$/;"	m	struct:_chunk_wr_args	file:
chunkid	mfschunkserver/csserv.c	/^	uint64_t chunkid;		\/\/ R+W$/;"	m	struct:csserventry	file:
chunkid	mfschunkserver/hddspacemgr.c	/^	uint64_t chunkid;$/;"	m	struct:chunk	file:
chunkid	mfschunkserver/hddspacemgr.c	/^	uint64_t chunkid;$/;"	m	struct:damagedchunk	file:
chunkid	mfschunkserver/hddspacemgr.c	/^	uint64_t chunkid;$/;"	m	struct:dopchunk	file:
chunkid	mfschunkserver/hddspacemgr.c	/^	uint64_t chunkid;$/;"	m	struct:ioerror	file:
chunkid	mfschunkserver/replicator.c	/^	uint64_t chunkid;$/;"	m	struct:_replication	file:
chunkid	mfschunkserver/replicator.c	/^	uint64_t chunkid;$/;"	m	struct:_repsrc	file:
chunkid	mfsmaster/chunks.c	/^	uint64_t chunkid;$/;"	m	struct:chunk	file:
chunkid	mfsmaster/matoclserv.c	/^	uint64_t chunkid;$/;"	m	struct:chunklist	file:
chunkid	mfsmaster/matocsserv.c	/^	uint64_t chunkid;$/;"	m	struct:_repdst	file:
chunkid	mfsmount/chunkloccache.c	/^	uint64_t chunkid[HASH_BUCKET_SIZE];$/;"	m	struct:_hashbucket	file:
chunkid	mfsmount/readdata.c	/^	uint64_t chunkid;		\/\/ this->locked$/;"	m	struct:_readrec	file:
chunkidblock	mfschunkserver/hddspacemgr.c	/^	uint64_t chunkidblock[LOSTCHUNKSBLOCKSIZE];$/;"	m	struct:lostchunk	file:
chunkisopen	mfschunkserver/csserv.c	/^	uint8_t chunkisopen;$/;"	m	struct:csserventry	file:
chunklist	mfsmaster/matoclserv.c	/^typedef struct chunklist {$/;"	s	file:
chunklist	mfsmaster/matoclserv.c	/^} chunklist;$/;"	t	typeref:struct:chunklist	file:
chunkloc_cache_init	mfsmount/chunkloccache.c	/^void chunkloc_cache_init(void) {$/;"	f
chunkloc_cache_insert	mfsmount/chunkloccache.c	/^void chunkloc_cache_insert(uint32_t inode,uint32_t pos,uint64_t chunkid,uint32_t chunkversion,uint8_t csdatasize,const uint8_t *csdata) {$/;"	f
chunkloc_cache_search	mfsmount/chunkloccache.c	/^int chunkloc_cache_search(uint32_t inode,uint32_t pos,uint64_t *chunkid,uint32_t *chunkversion,uint8_t *csdatasize,const uint8_t **csdata) {$/;"	f
chunkloc_cache_stats_inc	mfsmount/chunkloccache.c	/^static inline void chunkloc_cache_stats_inc(uint8_t id) {$/;"	f	file:
chunkloc_cache_statsptr_init	mfsmount/chunkloccache.c	/^static inline void chunkloc_cache_statsptr_init(void) {$/;"	f	file:
chunkloc_cache_term	mfsmount/chunkloccache.c	/^void chunkloc_cache_term(void) {$/;"	f
chunkloc_compare	mfsmount/chunkloccache.c	/^static inline int chunkloc_compare(const uint8_t *l1,const uint8_t *l2,uint8_t s) {$/;"	f	file:
chunklochash	mfsmount/chunkloccache.c	/^static hashbucket *chunklochash = NULL;$/;"	v	file:
chunks	mfsmaster/chunks.c	/^static uint32_t chunks;$/;"	v	file:
chunks	mfsmaster/filesystem.c	/^			uint32_t chunks;$/;"	m	struct:_fsnode::_data::_fdata	file:
chunks	mfsmaster/filesystem.c	/^	uint32_t chunks;$/;"	m	struct:_statsrecord	file:
chunkscount	mfsmaster/matocsserv.c	/^	uint32_t chunkscount;$/;"	m	struct:matocsserventry	file:
chunksinblock	mfschunkserver/hddspacemgr.c	/^	uint32_t chunksinblock;$/;"	m	struct:lostchunk	file:
chunksinfo	mfsmaster/chunks.c	/^static loop_info chunksinfo = {{0,0,0,0,0},{0,0,0,0,0},0};$/;"	v	file:
chunksinfo_loopend	mfsmaster/chunks.c	/^static uint32_t chunksinfo_loopstart=0,chunksinfo_loopend=0;$/;"	v	file:
chunksinfo_loopstart	mfsmaster/chunks.c	/^static uint32_t chunksinfo_loopstart=0,chunksinfo_loopend=0;$/;"	v	file:
chunktab	mfsmaster/filesystem.c	/^			uint64_t *chunktab;$/;"	m	struct:_fsnode::_data::_fdata	file:
chunkversion	mfsmount/chunkloccache.c	/^	uint32_t chunkversion[HASH_BUCKET_SIZE];$/;"	m	struct:_hashbucket	file:
cl	mfscgi/mfs.cgi.in	/^								cl="ENDANGERED"$/;"	v
cl	mfscgi/mfs.cgi.in	/^								cl="UNDERGOAL"$/;"	v
cl	mfscgi/mfs.cgi.in	/^							cl="IGNORE"$/;"	v
cl	mfscgi/mfs.cgi.in	/^							cl="MISSING"$/;"	v
cl	mfscgi/mfs.cgi.in	/^							cl="NORMAL"$/;"	v
cl	mfscgi/mfs.cgi.in	/^							cl="OVERGOAL"$/;"	v
cl	mfscgi/mfs.cgi.in	/^						cl="EXCEEDED"$/;"	v
cl	mfscgi/mfs.cgi.in	/^						cl="NOTEXCEEDED"$/;"	v
cl	mfscgi/mfs.cgi.in	/^						cl="SEXCEEDED"$/;"	v
cl	mfscgi/mfs.cgi.in	/^					cl="REL"$/;"	v
cl	mfscgi/mfs.cgi.in	/^				cl="PR"$/;"	v
cl	mfscgi/mfs.cgi.in	/^				cl="REL"$/;"	v
cl	mfscgi/mfs.cgi.in	/^			cl="PR"$/;"	v
classsum	mfscgi/mfs.cgi.in	/^				classsum = 6*[0]$/;"	v
clcachelock	mfsmount/chunkloccache.c	/^static pthread_mutex_t clcachelock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
clidx	mfscgi/mfs.cgi.in	/^								clidx = 1$/;"	v
clidx	mfscgi/mfs.cgi.in	/^								clidx = 2$/;"	v
clidx	mfscgi/mfs.cgi.in	/^							clidx = 0$/;"	v
clidx	mfscgi/mfs.cgi.in	/^							clidx = 3$/;"	v
clidx	mfscgi/mfs.cgi.in	/^							clidx = 4$/;"	v
clidx	mfscgi/mfs.cgi.in	/^							clidx = 5$/;"	v
client_handlers	mfscgi/cgiserv.py.in	/^client_handlers = {}$/;"	v
close	mfscgi/cgiserv.py.in	/^	def close(self):$/;"	m	class:ClientHandler
close_master_conn	mfsmount/mfstools.c	/^void close_master_conn(int err) {$/;"	f
close_msg_channel	mfscommon/main.c	/^void close_msg_channel() {$/;"	f
cnt	mfsmount/mastercomm.c	/^	uint32_t cnt;$/;"	m	struct:_acquired_file	file:
cntcond	mfschunkserver/hddspacemgr.c	/^} cntcond;$/;"	t	typeref:struct:_cntcond	file:
compbuff	mfscommon/charts.c	/^static uint8_t compbuff[CBUFFSIZE];$/;"	v	file:
compsize	mfscommon/charts.c	/^static uint32_t compsize=0;$/;"	v	file:
cond	mfschunkserver/hddspacemgr.c	/^	pthread_cond_t cond;$/;"	m	struct:_cntcond	file:
cond	mfsmount/mastercomm.c	/^	pthread_cond_t cond;$/;"	m	struct:_threc	file:
cond	mfsmount/readdata.c	/^	pthread_cond_t cond;		\/\/ glock$/;"	m	struct:_readrec	file:
connect_args	mfsmount/mastercomm.c	/^static struct connect_args_t connect_args;$/;"	v	typeref:struct:connect_args_t	file:
connect_args_t	mfsmount/mastercomm.c	/^struct connect_args_t {$/;"	s	file:
connretrycnt	mfschunkserver/csserv.c	/^	uint8_t connretrycnt;		\/\/ 'connect' retry counter$/;"	m	struct:csserventry	file:
connstart	mfschunkserver/csserv.c	/^	uint64_t connstart;		\/\/ 'connect' start time in usec (for timeout and retry)$/;"	m	struct:csserventry	file:
convtm	mfsmount/oplog.c	/^static struct tm convtm;$/;"	v	typeref:struct:tm	file:
convts	mfsmount/oplog.c	/^static time_t convts=0;$/;"	v	file:
copy_rebalance	mfsmaster/chunks.c	/^	uint32_t copy_rebalance;$/;"	m	struct:_loop_info	file:
copy_undergoal	mfsmaster/chunks.c	/^	uint32_t copy_undergoal;$/;"	m	struct:_job_info	file:
copychunkid	mfschunkserver/bgjobs.c	/^	uint64_t chunkid,copychunkid;$/;"	m	struct:_chunk_op_args	file:
copyversion	mfschunkserver/bgjobs.c	/^	uint32_t version,newversion,copyversion;$/;"	m	struct:_chunk_op_args	file:
count	mfscommon/md5.h	/^	uint32_t count[2];$/;"	m	struct:_md5ctx
count	mfsmaster/filesystem.c	/^	uint32_t val,count;$/;"	m	struct:_bstnode	file:
counter	mfsmount/stats.c	/^	uint64_t counter;$/;"	m	struct:_statsnode	file:
crbhead	mfsmaster/filesystem.c	/^static sessionidrec_bucket *crbhead = NULL;$/;"	v	file:
crc	mfschunkserver/hddspacemgr.c	/^	uint8_t *crc;$/;"	m	struct:chunk	file:
crc_combine_table	mfscommon/crc.c	/^static uint32_t crc_combine_table[32][4][256];$/;"	v	file:
crc_generate_combine_tables	mfscommon/crc.c	/^static void crc_generate_combine_tables(void) {$/;"	f	file:
crc_generate_main_tables	mfscommon/crc.c	/^void crc_generate_main_tables(void) {$/;"	f
crc_matrix_square	mfscommon/crc.c	/^static void crc_matrix_square(uint32_t sqr[32], uint32_t m[32]) {$/;"	f	file:
crc_table	mfscommon/crc.c	/^static uint32_t crc_table[256];$/;"	v	file:
crc_table	mfscommon/crc.c	/^static uint32_t crc_table[4][256];$/;"	v	file:
crcbuff	mfschunkserver/bgjobs.c	/^	const uint8_t *crcbuff;$/;"	m	struct:_chunk_wr_args	file:
crcbuff	mfschunkserver/bgjobs.c	/^	uint8_t *crcbuff;$/;"	m	struct:_chunk_rd_args	file:
crcchanged	mfschunkserver/hddspacemgr.c	/^	uint8_t crcchanged;$/;"	m	struct:chunk	file:
crcrefcount	mfschunkserver/hddspacemgr.c	/^	uint16_t crcrefcount;$/;"	m	struct:chunk	file:
crcsteps	mfschunkserver/hddspacemgr.c	/^	uint8_t crcsteps;$/;"	m	struct:chunk	file:
created	mfschunkserver/replicator.c	/^	uint8_t created,opened;$/;"	m	struct:_replication	file:
createlink	mfscgi/mfs.cgi.in	/^def createlink(update):$/;"	f
createpath	mfscommon/main.c	/^void createpath(const char *filename) {$/;"	f
crfreehead	mfsmaster/filesystem.c	/^static sessionidrec *crfreehead = NULL;$/;"	v	file:
cs_readblock	mfsmount/cscomm.c	/^int cs_readblock(int fd,uint64_t chunkid,uint32_t version,uint32_t offset,uint32_t size,uint8_t *buff) {$/;"	f
cs_writeblock	mfsmount/cscomm.c	/^int cs_writeblock(int fd,uint64_t chunkid,uint32_t writeid,uint16_t blockno,uint16_t offset,uint32_t size,uint8_t *buff) {$/;"	f
cs_writeinit	mfsmount/cscomm.c	/^int cs_writeinit(int fd,const uint8_t *chain,uint32_t chainsize,uint64_t chunkid,uint32_t version) {$/;"	f
cs_writestatus	mfsmount/cscomm.c	/^int cs_writestatus(int fd,uint64_t chunkid,uint32_t writeid) {$/;"	f
csdata	mfsmount/chunkloccache.c	/^	uint8_t *csdata[HASH_BUCKET_SIZE];$/;"	m	struct:_hashbucket	file:
csdatasize	mfsmount/chunkloccache.c	/^	uint8_t csdatasize[HASH_BUCKET_SIZE];$/;"	m	struct:_hashbucket	file:
csdb_getopcnt	mfsmount/csdb.c	/^uint32_t csdb_getopcnt(uint32_t ip,uint16_t port) {$/;"	f
csdb_getreadcnt	mfsmount/csdb.c	/^uint32_t csdb_getreadcnt(uint32_t ip,uint16_t port) {$/;"	f
csdb_getwritecnt	mfsmount/csdb.c	/^uint32_t csdb_getwritecnt(uint32_t ip,uint16_t port) {$/;"	f
csdb_init	mfsmount/csdb.c	/^void csdb_init(void) {$/;"	f
csdb_readdec	mfsmount/csdb.c	/^void csdb_readdec(uint32_t ip,uint16_t port) {$/;"	f
csdb_readinc	mfsmount/csdb.c	/^void csdb_readinc(uint32_t ip,uint16_t port) {$/;"	f
csdb_term	mfsmount/csdb.c	/^void csdb_term(void) {$/;"	f
csdb_writedec	mfsmount/csdb.c	/^void csdb_writedec(uint32_t ip,uint16_t port) {$/;"	f
csdb_writeinc	mfsmount/csdb.c	/^void csdb_writeinc(uint32_t ip,uint16_t port) {$/;"	f
csdbentry	mfsmount/csdb.c	/^} csdbentry;$/;"	t	typeref:struct:_csdbentry	file:
csdbhtab	mfsmount/csdb.c	/^static csdbentry *csdbhtab[CSDB_HASHSIZE];$/;"	v	file:
csdblock	mfsmount/csdb.c	/^static pthread_mutex_t *csdblock;$/;"	v	file:
cshost	mfscgi/mfs.cgi.in	/^			cshost = cchtmp[0]$/;"	v
csport	mfscgi/mfs.cgi.in	/^			csport = cchtmp[1]$/;"	v
csserv_attach_packet	mfschunkserver/csserv.c	/^void csserv_attach_packet(csserventry *eptr,void *packet) {$/;"	f
csserv_chart	mfschunkserver/csserv.c	/^void csserv_chart(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserv_chart_data	mfschunkserver/csserv.c	/^void csserv_chart_data(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserv_check_nextpacket	mfschunkserver/csserv.c	/^void csserv_check_nextpacket(csserventry *eptr) {$/;"	f
csserv_chunk_checksum	mfschunkserver/csserv.c	/^void csserv_chunk_checksum(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserv_chunk_checksum_tab	mfschunkserver/csserv.c	/^void csserv_chunk_checksum_tab(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserv_close	mfschunkserver/csserv.c	/^void csserv_close(csserventry *eptr) {$/;"	f
csserv_create_attached_packet	mfschunkserver/csserv.c	/^uint8_t* csserv_create_attached_packet(csserventry *eptr,uint32_t type,uint32_t size) {$/;"	f
csserv_create_detached_packet	mfschunkserver/csserv.c	/^void* csserv_create_detached_packet(uint32_t type,uint32_t size) {$/;"	f
csserv_delayed_close	mfschunkserver/csserv.c	/^void csserv_delayed_close(uint8_t status,void *e) {$/;"	f
csserv_delete_packet	mfschunkserver/csserv.c	/^void csserv_delete_packet(void *packet) {$/;"	f
csserv_delete_preserved	mfschunkserver/csserv.c	/^void csserv_delete_preserved(void *p) {$/;"	f
csserv_desc	mfschunkserver/csserv.c	/^void csserv_desc(struct pollfd *pdesc,uint32_t *ndesc) {$/;"	f
csserv_forward	mfschunkserver/csserv.c	/^void csserv_forward(csserventry *eptr) {$/;"	f
csserv_fwdconnected	mfschunkserver/csserv.c	/^void csserv_fwdconnected(csserventry *eptr) {$/;"	f
csserv_fwderror	mfschunkserver/csserv.c	/^void csserv_fwderror(csserventry *eptr) {$/;"	f
csserv_fwdread	mfschunkserver/csserv.c	/^void csserv_fwdread(csserventry *eptr) {$/;"	f
csserv_fwdwrite	mfschunkserver/csserv.c	/^void csserv_fwdwrite(csserventry *eptr) {$/;"	f
csserv_get_chunk_blocks	mfschunkserver/csserv.c	/^void csserv_get_chunk_blocks(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserv_get_packet_data	mfschunkserver/csserv.c	/^uint8_t* csserv_get_packet_data(void *packet) {$/;"	f
csserv_getlistenip	mfschunkserver/csserv.c	/^uint32_t csserv_getlistenip() {$/;"	f
csserv_getlistenport	mfschunkserver/csserv.c	/^uint16_t csserv_getlistenport() {$/;"	f
csserv_gotpacket	mfschunkserver/csserv.c	/^void csserv_gotpacket(csserventry *eptr,uint32_t type,const uint8_t *data,uint32_t length) {$/;"	f
csserv_hdd_list_v1	mfschunkserver/csserv.c	/^void csserv_hdd_list_v1(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserv_hdd_list_v2	mfschunkserver/csserv.c	/^void csserv_hdd_list_v2(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserv_init	mfschunkserver/csserv.c	/^int csserv_init(void) {$/;"	f
csserv_initconnect	mfschunkserver/csserv.c	/^int csserv_initconnect(csserventry *eptr) {$/;"	f
csserv_makefwdpacket	mfschunkserver/csserv.c	/^int csserv_makefwdpacket(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserv_outputcheck	mfschunkserver/csserv.c	/^void csserv_outputcheck(csserventry *eptr) {$/;"	f
csserv_preserve_inputpacket	mfschunkserver/csserv.c	/^void* csserv_preserve_inputpacket(csserventry *eptr) {$/;"	f
csserv_read	mfschunkserver/csserv.c	/^void csserv_read(csserventry *eptr) {$/;"	f
csserv_read_continue	mfschunkserver/csserv.c	/^void csserv_read_continue(csserventry *eptr) {$/;"	f
csserv_read_finished	mfschunkserver/csserv.c	/^void csserv_read_finished(uint8_t status,void *e) {$/;"	f
csserv_read_init	mfschunkserver/csserv.c	/^void csserv_read_init(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserv_retryconnect	mfschunkserver/csserv.c	/^void csserv_retryconnect(csserventry *eptr) {$/;"	f
csserv_send_finished	mfschunkserver/csserv.c	/^void csserv_send_finished(csserventry *eptr) {$/;"	f
csserv_serve	mfschunkserver/csserv.c	/^void csserv_serve(struct pollfd *pdesc) {$/;"	f
csserv_stats	mfschunkserver/csserv.c	/^void csserv_stats(uint32_t *bin,uint32_t *bout,uint32_t *hlopr,uint32_t *hlopw,uint32_t *maxjobscnt) {$/;"	f
csserv_term	mfschunkserver/csserv.c	/^void csserv_term(void) {$/;"	f
csserv_write	mfschunkserver/csserv.c	/^void csserv_write(csserventry *eptr) {$/;"	f
csserv_write_data	mfschunkserver/csserv.c	/^void csserv_write_data(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserv_write_finished	mfschunkserver/csserv.c	/^void csserv_write_finished(uint8_t status,void *e) {$/;"	f
csserv_write_init	mfschunkserver/csserv.c	/^void csserv_write_init(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserv_write_status	mfschunkserver/csserv.c	/^void csserv_write_status(csserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
csserventry	mfschunkserver/csserv.c	/^typedef struct csserventry {$/;"	s	file:
csserventry	mfschunkserver/csserv.c	/^} csserventry;$/;"	t	typeref:struct:csserventry	file:
csservhead	mfschunkserver/csserv.c	/^static csserventry *csservhead=NULL;$/;"	v	file:
cstat	mfschunkserver/hddspacemgr.c	/^	hddstats cstat;$/;"	m	struct:folder	file:
ctime	mfsmaster/filesystem.c	/^	uint32_t ctime,mtime,atime;$/;"	m	struct:_fsnode	file:
ctx	mfsmount/dirattrcache.c	/^	struct fuse_ctx ctx;$/;"	m	struct:_dircache	typeref:struct:_dircache::fuse_ctx	file:
current_device	mfsmount/mfstools.c	/^static dev_t current_device = 0;$/;"	v	file:
current_master	mfsmount/mfstools.c	/^static int current_master = -1;$/;"	v	file:
currentopstats	mfsmaster/matoclserv.c	/^	uint32_t currentopstats[SESSION_STATS];$/;"	m	struct:session	file:
custom_cfg	mfsmount/main.c	/^static int custom_cfg;$/;"	v	file:
d	mfscgi/mfs.cgi.in	/^					d = data[i*8:(i+1)*8]$/;"	v
d	mfscgi/mfs.cgi.in	/^				d = data[i*136:(i+1)*136]$/;"	v
d	mfscgi/mfs.cgi.in	/^				d = data[i*50:(i+1)*50]$/;"	v
d	mfscgi/mfs.cgi.in	/^				d = data[i*54:(i+1)*54]$/;"	v
daemonignoresignal	mfscommon/main.c	/^static int daemonignoresignal[]={$/;"	v	file:
daemonize	mfscgi/cgiserv.py.in	/^			daemonize = 0$/;"	v
daemonize	mfscgi/cgiserv.py.in	/^	daemonize = 1$/;"	v
damaged	mfschunkserver/hddspacemgr.c	/^	unsigned int damaged:1;$/;"	m	struct:folder	file:
damagedchunk	mfschunkserver/hddspacemgr.c	/^typedef struct damagedchunk {$/;"	s	file:
damagedchunk	mfschunkserver/hddspacemgr.c	/^} damagedchunk;$/;"	t	typeref:struct:damagedchunk	file:
damagedchunks	mfschunkserver/hddspacemgr.c	/^static damagedchunk *damagedchunks=NULL;$/;"	v	file:
data	mfscgi/chart.cgi.in	/^			data = myrecv(s,length)$/;"	v
data	mfscgi/mfs.cgi.in	/^							data = data[2+entrysize:]$/;"	v
data	mfscgi/mfs.cgi.in	/^							data = data[plen+34:]$/;"	v
data	mfscgi/mfs.cgi.in	/^						data = myrecv(s,length)$/;"	v
data	mfscgi/mfs.cgi.in	/^					data = myrecv(s,44)$/;"	v
data	mfscgi/mfs.cgi.in	/^				data = myrecv(s,length)$/;"	v
data	mfscgi/mfs.cgi.in	/^			data = myrecv(s,length)$/;"	v
data	mfscgi/mfs.cgi.in	/^	data = myrecv(s,length)$/;"	v
data	mfscommon/pcqueue.c	/^	uint8_t *data;$/;"	m	struct:_qentry	file:
data	mfsmaster/filesystem.c	/^	} data;$/;"	m	struct:_fsnode	typeref:union:_fsnode::_data	file:
data	mfsmount/mfs_fuse.c	/^	void *data;$/;"	m	struct:_finfo	file:
data	mfsmount/writedata.c	/^	uint8_t data[MFSBLOCKSIZE];	\/\/ modified only when writeid==0$/;"	m	struct:cblock_s	file:
datacache_entry	mfsmaster/datacachemgr.c	/^} datacache_entry;$/;"	t	typeref:struct:_datacache_entry	file:
datachainhead	mfsmount/writedata.c	/^	cblock *datachainhead,*datachaintail;$/;"	m	struct:inodedata_s	file:
datachaintail	mfsmount/writedata.c	/^	cblock *datachainhead,*datachaintail;$/;"	m	struct:inodedata_s	file:
dataformat	mfsmount/mfs_fuse.c	/^	int dataformat;$/;"	m	struct:_dirbuf	file:
datapath	mfscgi/cgiserv.py.in	/^	datapath="@DATAPATH@"$/;"	v
dbuff	mfsmount/dirattrcache.c	/^	const uint8_t *dbuff;$/;"	m	struct:_dircache	file:
dcache	mfsmount/mfs_fuse.c	/^	void *dcache;$/;"	m	struct:_dirbuf	file:
dcache_calchashsize	mfsmount/dirattrcache.c	/^static inline void dcache_calchashsize(dircache *d) {$/;"	f	file:
dcache_elemcount	mfsmount/dirattrcache.c	/^uint32_t dcache_elemcount(const uint8_t *dbuff,uint32_t dsize) {$/;"	f
dcache_getattr	mfsmount/dirattrcache.c	/^uint8_t dcache_getattr(const struct fuse_ctx *ctx,uint32_t inode,uint8_t attr[35]) {$/;"	f
dcache_hash	mfsmount/dirattrcache.c	/^static inline uint32_t dcache_hash(const uint8_t *name,uint8_t nleng) {$/;"	f	file:
dcache_inodehashsearch	mfsmount/dirattrcache.c	/^static inline uint8_t dcache_inodehashsearch(dircache *d,uint32_t inode,uint8_t attr[35]) {$/;"	f	file:
dcache_lookup	mfsmount/dirattrcache.c	/^uint8_t dcache_lookup(const struct fuse_ctx *ctx,uint32_t parent,uint8_t nleng,const uint8_t *name,uint32_t *inode,uint8_t attr[35]) {$/;"	f
dcache_makeinodehash	mfsmount/dirattrcache.c	/^void dcache_makeinodehash(dircache *d) {$/;"	f
dcache_makenamehash	mfsmount/dirattrcache.c	/^void dcache_makenamehash(dircache *d) {$/;"	f
dcache_namehashsearch	mfsmount/dirattrcache.c	/^static inline uint8_t dcache_namehashsearch(dircache *d,uint8_t nleng,const uint8_t *name,uint32_t *inode,uint8_t attr[35]) {$/;"	f	file:
dcache_new	mfsmount/dirattrcache.c	/^void* dcache_new(const struct fuse_ctx *ctx,uint32_t parent,const uint8_t *dbuff,uint32_t dsize) {$/;"	f
dcache_release	mfsmount/dirattrcache.c	/^void dcache_release(void *r) {$/;"	f
dclock	mfschunkserver/hddspacemgr.c	/^static pthread_mutex_t dclock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
dcm_init	mfsmaster/datacachemgr.c	/^int dcm_init(void) {$/;"	f
dcm_inodehash	mfsmaster/datacachemgr.c	/^static uint32_t dcm_inodehash[DCM_INODEHASH_LENG];$/;"	v	file:
dcm_lru_first	mfsmaster/datacachemgr.c	/^static uint32_t dcm_lru_first,dcm_lru_last;$/;"	v	file:
dcm_lru_last	mfsmaster/datacachemgr.c	/^static uint32_t dcm_lru_first,dcm_lru_last;$/;"	v	file:
dcm_modify	mfsmaster/datacachemgr.c	/^void dcm_modify(uint32_t inode,uint32_t sessionid) {$/;"	f
dcm_open	mfsmaster/datacachemgr.c	/^int dcm_open(uint32_t inode,uint32_t sessionid) {$/;"	f
dcm_tab	mfsmaster/datacachemgr.c	/^static datacache_entry dcm_tab[DCM_TAB_LENG];$/;"	v	file:
ddata	mfsmaster/filesystem.c	/^		} ddata;$/;"	m	union:_fsnode::_data	typeref:struct:_fsnode::_data::_ddata	file:
debug	mfsmount/main.c	/^	int debug;$/;"	m	struct:mfsopts	file:
debug_mode	mfsmount/mfs_fuse.c	/^static int debug_mode = 0;$/;"	v	file:
debug_mode	mfsmount/mfs_meta_fuse.c	/^static int debug_mode = 0;$/;"	v	file:
decimal_number	mfscgi/mfs.cgi.in	/^def decimal_number(number,sep=' '):$/;"	f
deentry	mfscommon/main.c	/^typedef struct deentry {$/;"	s	file:
deentry	mfscommon/main.c	/^} deentry;$/;"	t	typeref:struct:deentry	file:
defaultmountpoint	mfsmount/main.c	/^static char *defaultmountpoint = NULL;$/;"	v	file:
dehead	mfscommon/main.c	/^static deentry *dehead=NULL;$/;"	v	file:
del_diskclean	mfsmaster/chunks.c	/^	uint32_t del_diskclean;$/;"	m	struct:_job_info	file:
del_invalid	mfsmaster/chunks.c	/^	uint32_t del_invalid;$/;"	m	struct:_job_info	file:
del_overgoal	mfsmaster/chunks.c	/^	uint32_t del_overgoal;$/;"	m	struct:_job_info	file:
del_unused	mfsmaster/chunks.c	/^	uint32_t del_unused;$/;"	m	struct:_job_info	file:
delayedthread	mfschunkserver/hddspacemgr.c	/^static pthread_t foldersthread,delayedthread,testerthread;$/;"	v	file:
delcounter	mfsmaster/matocsserv.c	/^	uint16_t delcounter;$/;"	m	struct:matocsserventry	file:
desc	mfscommon/main.c	/^	void (*desc)(struct pollfd *,uint32_t *);$/;"	m	struct:pollentry	file:
destruct	mfscommon/main.c	/^void destruct() {$/;"	f
devdata	mfsmaster/filesystem.c	/^		} devdata;$/;"	m	union:_fsnode::_data	typeref:struct:_fsnode::_data::_devdata	file:
devid	mfschunkserver/hddspacemgr.c	/^	dev_t devid;$/;"	m	struct:folder	file:
dir_dataentries_convert	mfsmount/mfs_meta_fuse.c	/^static void dir_dataentries_convert(uint8_t *buff,const uint8_t *dbuff,uint32_t dsize,uint32_t inodemask) {$/;"	f	file:
dir_dataentries_size	mfsmount/mfs_meta_fuse.c	/^static uint32_t dir_dataentries_size(const uint8_t *dbuff,uint32_t dsize) {$/;"	f	file:
dir_info	mfsmount/mfstools.c	/^int dir_info(const char *fname) {$/;"	f
dir_metaentries_fill	mfsmount/mfs_meta_fuse.c	/^static void dir_metaentries_fill(uint8_t *buff,uint32_t ino) {$/;"	f	file:
dir_metaentries_size	mfsmount/mfs_meta_fuse.c	/^static uint32_t dir_metaentries_size(uint32_t ino) {$/;"	f	file:
dirbuf	mfsmount/mfs_fuse.c	/^} dirbuf;$/;"	t	typeref:struct:_dirbuf	file:
dirbuf	mfsmount/mfs_meta_fuse.c	/^} dirbuf;$/;"	t	typeref:struct:_dirbuf	file:
dirbuf_meta_fill	mfsmount/mfs_meta_fuse.c	/^static void dirbuf_meta_fill(dirbuf *b, uint32_t ino) {$/;"	f	file:
dircache	mfsmount/dirattrcache.c	/^} dircache;$/;"	t	typeref:struct:_dircache	file:
direntry_cache_timeout	mfsmount/mfs_fuse.c	/^static double direntry_cache_timeout = 0.1;$/;"	v	file:
direntrycacheto	mfsmount/main.c	/^	double direntrycacheto;$/;"	m	struct:mfsopts	file:
dirnodes	mfsmaster/filesystem.c	/^static uint32_t dirnodes;$/;"	v	file:
dirs	mfsmaster/filesystem.c	/^	uint32_t dirs;$/;"	m	struct:_statsrecord	file:
disconnect	mfsmount/mastercomm.c	/^static int disconnect;$/;"	v	file:
disconnected	mfsmaster/matoclserv.c	/^	uint32_t disconnected;	\/\/ 0 = connected ; other = disconnection timestamp$/;"	m	struct:session	file:
dispchar	mfsmetadump/mfsmetadump.c	/^static inline char dispchar(uint8_t c) {$/;"	f	file:
dist	mfsmaster/chunks.c	/^	uint32_t dist;$/;"	m	struct:locsort	file:
divisor	mfscommon/charts.h	/^	uint16_t divisor;$/;"	m	struct:_estatdef
divisor	mfscommon/charts.h	/^	uint16_t divisor;$/;"	m	struct:_statdef
dloffset	mfsmetalogger/masterconn.c	/^	uint64_t dloffset;$/;"	m	struct:masterconn	file:
dlstartuts	mfsmetalogger/masterconn.c	/^	uint64_t dlstartuts;$/;"	m	struct:masterconn	file:
do_access	mfsmetarestore/restore.c	/^int do_access(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_acquire	mfsmetarestore/restore.c	/^int do_acquire(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_append	mfsmetarestore/restore.c	/^int do_append(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_attr	mfsmetarestore/restore.c	/^int do_attr(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_create	mfsmetarestore/restore.c	/^int do_create(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_emptyreserved	mfsmetarestore/restore.c	/^int do_emptyreserved(const char *filename,uint64_t lv,uint32_t ts,char* ptr) {$/;"	f
do_emptytrash	mfsmetarestore/restore.c	/^int do_emptytrash(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_freeinodes	mfsmetarestore/restore.c	/^int do_freeinodes(const char *filename,uint64_t lv,uint32_t ts,char* ptr) {$/;"	f
do_incversion	mfsmetarestore/restore.c	/^int do_incversion(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_length	mfsmetarestore/restore.c	/^int do_length(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_link	mfsmetarestore/restore.c	/^int do_link(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_move	mfsmetarestore/restore.c	/^int do_move(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_purge	mfsmetarestore/restore.c	/^int do_purge(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_quota	mfsmetarestore/restore.c	/^int do_quota(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_release	mfsmetarestore/restore.c	/^int do_release(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_repair	mfsmetarestore/restore.c	/^int do_repair(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_session	mfsmetarestore/restore.c	/^int do_session(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_seteattr	mfsmetarestore/restore.c	/^int do_seteattr(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_setgoal	mfsmetarestore/restore.c	/^int do_setgoal(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_setpath	mfsmetarestore/restore.c	/^int do_setpath(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_settrashtime	mfsmetarestore/restore.c	/^int do_settrashtime(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_snapshot	mfsmetarestore/restore.c	/^int do_snapshot(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_symlink	mfsmetarestore/restore.c	/^int do_symlink(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_trunc	mfsmetarestore/restore.c	/^int do_trunc(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_undel	mfsmetarestore/restore.c	/^int do_undel(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_unlink	mfsmetarestore/restore.c	/^int do_unlink(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_unlock	mfsmetarestore/restore.c	/^int do_unlock(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
do_write	mfsmetarestore/restore.c	/^int do_write(const char *filename,uint64_t lv,uint32_t ts,char *ptr) {$/;"	f
done	mfsmaster/chunks.c	/^	job_info done,notdone;$/;"	m	struct:_loop_info	file:
donotrememberpassword	mfsmount/main.c	/^	int donotrememberpassword;$/;"	m	struct:mfsopts	file:
dopchunk	mfschunkserver/hddspacemgr.c	/^typedef struct dopchunk {$/;"	s	file:
dopchunk	mfschunkserver/hddspacemgr.c	/^} dopchunk;$/;"	t	typeref:struct:dopchunk	file:
dophashtab	mfschunkserver/hddspacemgr.c	/^static dopchunk *dophashtab[DHASHSIZE];$/;"	v	file:
doplock	mfschunkserver/hddspacemgr.c	/^static pthread_mutex_t doplock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
downloading	mfsmetalogger/masterconn.c	/^	uint8_t downloading;$/;"	m	struct:masterconn	file:
downloadretrycnt	mfsmetalogger/masterconn.c	/^	uint8_t downloadretrycnt;$/;"	m	struct:masterconn	file:
dqueue	mfsmount/writedata.c	/^static void *jqueue,*dqueue;$/;"	v	file:
dqueue_worker_th	mfsmount/writedata.c	/^static pthread_t dqueue_worker_th;$/;"	v	file:
dsize	mfsmount/dirattrcache.c	/^	uint32_t dsize;$/;"	m	struct:_dircache	file:
dst	mfsmaster/matocsserv.c	/^	void *dst;$/;"	m	struct:_repdst	file:
eassert	mfscommon/massert.h	31;"	d
eattrdesc	mfsmount/mfstools.c	/^static const char* eattrdesc[EATTR_BITS]={EATTR_DESCRIPTIONS};$/;"	v	file:
eattrtab	mfsmount/mfstools.c	/^static const char* eattrtab[EATTR_BITS]={EATTR_STRINGS};$/;"	v	file:
edgehash	mfsmaster/filesystem.c	/^static fsedge* edgehash[EDGEHASHSIZE];$/;"	v	file:
elements	mfscommon/pcqueue.c	/^	uint32_t elements;$/;"	m	struct:_queue	file:
elements	mfsmaster/filesystem.c	/^			uint32_t elements;$/;"	m	struct:_fsnode::_data::_ddata	file:
eloopentry	mfscommon/main.c	/^typedef struct eloopentry {$/;"	s	file:
eloopentry	mfscommon/main.c	/^} eloopentry;$/;"	t	typeref:struct:eloopentry	file:
eloophead	mfscommon/main.c	/^static eloopentry *eloophead=NULL;$/;"	v	file:
emptyblockcrc	mfschunkserver/hddspacemgr.c	/^static uint32_t emptyblockcrc;$/;"	v	file:
entry	mfscgi/mfs.cgi.in	/^							entry = data[2:2+entrysize]$/;"	v
entry_cache_timeout	mfsmount/mfs_fuse.c	/^static double entry_cache_timeout = 0.0;$/;"	v	file:
entry_cache_timeout	mfsmount/mfs_meta_fuse.c	/^static double entry_cache_timeout = 0.0;$/;"	v	file:
entrycacheto	mfsmount/main.c	/^	double entrycacheto;$/;"	m	struct:mfsopts	file:
entrydesc	mfscgi/mfs.cgi.in	/^			entrydesc = {}$/;"	v
entrysize	mfscgi/mfs.cgi.in	/^							entrysize = struct.unpack(">H",data[:2])[0]$/;"	v
entrystr	mfscgi/mfs.cgi.in	/^			entrystr = []$/;"	v
err_resp	mfscgi/cgiserv.py.in	/^	def err_resp(self,code,msg):$/;"	m	class:HTTP
errent	mfscommon/strerr.c	/^typedef struct errent {$/;"	s	file:
errent	mfscommon/strerr.c	/^} errent;$/;"	t	typeref:struct:errent	file:
errhash	mfscommon/strerr.c	/^static errent *errhash = NULL;$/;"	v	file:
errhsize	mfscommon/strerr.c	/^static uint32_t errhsize = 0;$/;"	v	file:
errorcounter	mfschunkserver/hddspacemgr.c	/^static uint32_t errorcounter=0;$/;"	v	file:
errorcounter	mfsmaster/matocsserv.c	/^	uint32_t errorcounter;$/;"	m	struct:matocsserventry	file:
errornumber	mfschunkserver/hddspacemgr.c	/^	int errornumber;$/;"	m	struct:ioerror	file:
errtab	mfscommon/strerr.c	/^static errent errtab[] = {$/;"	v	file:
errtab	mfsmount/mastercomm.c	/^const char* errtab[]={ERROR_STRINGS};$/;"	v
errtimetuple	mfscgi/mfs.cgi.in	/^					errtimetuple = time.localtime(errtime)$/;"	v
estatdef	mfscommon/charts.h	/^} estatdef;$/;"	t	typeref:struct:_estatdef
estatdefs	mfscommon/charts.c	/^static estatdef *estatdefs;$/;"	v	file:
estatdefscount	mfscommon/charts.c	/^static uint32_t estatdefscount;$/;"	v	file:
exceeded	mfsmaster/filesystem.c	/^	uint8_t exceeded;	\/\/ hard quota exceeded or soft quota reached time limit$/;"	m	struct:_quotanode	file:
exiting	mfsmaster/matoclserv.c	/^static int exiting,starting;$/;"	v	file:
exports	mfsmaster/exports.c	/^} exports;$/;"	t	typeref:struct:_exports	file:
exports_check	mfsmaster/exports.c	/^uint8_t exports_check(uint32_t ip,uint32_t version,uint8_t meta,const uint8_t *path,const uint8_t rndcode[32],const uint8_t passcode[16],uint8_t *sesflags,uint32_t *rootuid,uint32_t *rootgid,uint32_t *mapalluid,uint32_t *mapallgid) {$/;"	f
exports_freelist	mfsmaster/exports.c	/^void exports_freelist(exports *arec) {$/;"	f
exports_info_data	mfsmaster/exports.c	/^void exports_info_data(uint8_t *buff) {$/;"	f
exports_info_size	mfsmaster/exports.c	/^uint32_t exports_info_size(void) {$/;"	f
exports_init	mfsmaster/exports.c	/^int exports_init(void) {$/;"	f
exports_loadexports	mfsmaster/exports.c	/^void exports_loadexports(void) {$/;"	f
exports_parseline	mfsmaster/exports.c	/^int exports_parseline(char *line,uint32_t lineno,exports *arec) {$/;"	f
exports_parsenet	mfsmaster/exports.c	/^int exports_parsenet(char *net,uint32_t *fromip,uint32_t *toip) {$/;"	f
exports_parseoptions	mfsmaster/exports.c	/^int exports_parseoptions(char *opts,uint32_t lineno,exports *arec) {$/;"	f
exports_parseuidgid	mfsmaster/exports.c	/^int exports_parseuidgid(char *maproot,uint32_t lineno,uint32_t *ruid,uint32_t *rgid) {$/;"	f
exports_parseversion	mfsmaster/exports.c	/^int exports_parseversion(char *verstr,uint32_t *version) {$/;"	f
exports_records	mfsmaster/exports.c	/^static exports *exports_records;$/;"	v	file:
exports_reloadexports	mfsmaster/exports.c	/^void exports_reloadexports(void) {$/;"	f
exports_strsep	mfsmaster/exports.c	/^char* exports_strsep(char **stringp, const char *delim) {$/;"	f
exports_term	mfsmaster/exports.c	/^void exports_term(void) {$/;"	f
extra	mfschunkserver/bgjobs.c	/^	void *extra;$/;"	m	struct:_job	file:
f	mfscgi/chart.cgi.in	/^				f = open('err.gif')$/;"	v
f	mfscgi/chart.cgi.in	/^			f = open('err.gif')$/;"	v
f	mfscgi/chart.cgi.in	/^		f = open('err.gif')$/;"	v
f	mfscgi/chart.cgi.in	/^	f = open('err.gif')$/;"	v
fbhead	mfsmaster/chunks.c	/^static flist_bucket *fbhead = NULL;$/;"	v	file:
fcbcond	mfsmount/writedata.c	/^static pthread_cond_t fcbcond;$/;"	v	file:
fcbwaiting	mfsmount/writedata.c	/^static uint8_t fcbwaiting;$/;"	v	file:
fd	mfschunkserver/hddspacemgr.c	/^	int fd;$/;"	m	struct:chunk	file:
fd	mfsmaster/changelog.c	/^static FILE *fd;$/;"	v	file:
fd	mfsmetarestore/merger.c	/^	FILE *fd;$/;"	m	struct:_hentry	file:
fd	mfsmount/mastercomm.c	/^static int fd;$/;"	v	file:
fd	mfsmount/readdata.c	/^	int fd;				\/\/ this->locked$/;"	m	struct:_readrec	file:
fdata	mfsmaster/filesystem.c	/^		} fdata;$/;"	m	union:_fsnode::_data	typeref:struct:_fsnode::_data::_fdata	file:
fdlock	mfsmount/mastercomm.c	/^static pthread_mutex_t fdlock,reclock,aflock;$/;"	v	file:
fds	mfschunkserver/replicator.c	/^	struct pollfd *fds;$/;"	m	struct:_replication	typeref:struct:_replication::pollfd	file:
fh	mfsmount/oplog.c	/^	unsigned long fh;$/;"	m	struct:_fhentry	file:
fhentry	mfsmount/oplog.c	/^} fhentry;$/;"	t	typeref:struct:_fhentry	file:
fhhead	mfsmount/oplog.c	/^static fhentry *fhhead=NULL;$/;"	v	file:
fields	mfscgi/chart.cgi.in	/^fields = cgi.FieldStorage()$/;"	v
fields	mfscgi/mfs.cgi.in	/^fields = cgi.FieldStorage()$/;"	v
file_info	mfsmount/mfstools.c	/^int file_info(const char *fname) {$/;"	f
file_repair	mfsmount/mfstools.c	/^int file_repair(const char *fname) {$/;"	f
filelist	mfsmaster/matoclserv.c	/^typedef struct filelist {$/;"	s	file:
filelist	mfsmaster/matoclserv.c	/^} filelist;$/;"	t	typeref:struct:filelist	file:
filename	mfschunkserver/hddspacemgr.c	/^	char *filename;$/;"	m	struct:chunk	file:
filename	mfsmetarestore/merger.c	/^	const char *filename;$/;"	m	struct:_hentry	file:
filenodes	mfsmaster/filesystem.c	/^static uint32_t filenodes;$/;"	v	file:
files	mfsmaster/filesystem.c	/^	uint32_t files;$/;"	m	struct:_statsrecord	file:
filesize	mfsmetalogger/masterconn.c	/^	uint64_t filesize;$/;"	m	struct:masterconn	file:
finfo	mfsmount/mfs_fuse.c	/^} finfo;$/;"	t	typeref:struct:_finfo	file:
firstchild	mfsmount/stats.c	/^	struct _statsnode *firstchild;$/;"	m	struct:_statsnode	typeref:struct:_statsnode::_statsnode	file:
firstfree	mfsmaster/chunks.c	/^	uint32_t firstfree;$/;"	m	struct:_chunk_bucket	file:
firstfree	mfsmaster/chunks.c	/^	uint32_t firstfree;$/;"	m	struct:_flist_bucket	file:
firstfree	mfsmaster/chunks.c	/^	uint32_t firstfree;$/;"	m	struct:_slist_bucket	file:
firstfree	mfsmaster/filesystem.c	/^	uint32_t firstfree;$/;"	m	struct:_freenode_bucket	file:
firstfree	mfsmaster/filesystem.c	/^	uint32_t firstfree;$/;"	m	struct:_sessionidrec_bucket	file:
firstnode	mfsmount/stats.c	/^static statsnode *firstnode = NULL;$/;"	v	file:
flags	mfsmaster/filesystem.c	/^	uint8_t flags;$/;"	m	struct:_quotanode	file:
fleng	mfsmaster/matoclserv.c	/^	uint64_t fleng;		\/\/ file length$/;"	m	struct:chunklist	file:
fleng	mfsmount/readdata.c	/^	uint64_t fleng;			\/\/ this->locked$/;"	m	struct:_readrec	file:
flfreehead	mfsmaster/chunks.c	/^static flist *flfreehead = NULL;$/;"	v	file:
flist	mfsmaster/chunks.c	/^} flist;$/;"	t	typeref:struct:_flist	file:
flist_bucket	mfsmaster/chunks.c	/^} flist_bucket;$/;"	t	typeref:struct:_flist_bucket	file:
flist_free	mfsmaster/chunks.c	/^static inline void flist_free(flist *p) {$/;"	f	file:
flist_free	mfsmaster/chunks.c	/^static inline void flist_free(flist* p) {$/;"	f	file:
flist_malloc	mfsmaster/chunks.c	/^static inline flist* flist_malloc() {$/;"	f	file:
flisthead	mfsmaster/chunks.c	/^	flist *flisthead;$/;"	m	struct:chunk	file:
flushcond	mfsmount/writedata.c	/^	pthread_cond_t flushcond;	\/\/ wait for inqueue==0 (flush)$/;"	m	struct:inodedata_s	file:
flushwaiting	mfsmount/writedata.c	/^	uint16_t flushwaiting;$/;"	m	struct:inodedata_s	file:
fn	mfschunkserver/init.h	/^	runfn fn;$/;"	m	struct:__anon24
fn	mfsmaster/init.h	/^	runfn fn;$/;"	m	struct:__anon14
fn	mfsmetalogger/init.h	/^	runfn fn;$/;"	m	struct:__anon8
fnbhead	mfsmaster/filesystem.c	/^static freenode_bucket *fnbhead = NULL;$/;"	v	file:
fnfreehead	mfsmaster/filesystem.c	/^static freenode *fnfreehead = NULL;$/;"	v	file:
fnleng	mfsmount/stats.c	/^	uint32_t fnleng; \/\/ : strlen(fullname)$/;"	m	struct:_statsnode	file:
folder	mfschunkserver/hddspacemgr.c	/^typedef struct folder {$/;"	s	file:
folder	mfschunkserver/hddspacemgr.c	/^} folder;$/;"	t	typeref:struct:folder	file:
folderhead	mfschunkserver/hddspacemgr.c	/^static folder *folderhead=NULL;$/;"	v	file:
folderlock	mfschunkserver/hddspacemgr.c	/^static pthread_mutex_t folderlock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
foldersthread	mfschunkserver/hddspacemgr.c	/^static pthread_t foldersthread,delayedthread,testerthread;$/;"	v	file:
font	mfscommon/charts.c	/^static uint8_t font[25][9]={$/;"	v	file:
free_all_registered_entries	mfscommon/main.c	/^void free_all_registered_entries(void) {$/;"	f
freebitmask	mfsmaster/filesystem.c	/^static uint32_t *freebitmask;$/;"	v	file:
freecacheblocks	mfsmount/writedata.c	/^static uint32_t freecacheblocks;$/;"	v	file:
freecblockshead	mfsmount/writedata.c	/^static cblock *cacheblocks,*freecblockshead;$/;"	v	file:
freelist	mfsmaster/filesystem.c	/^static freenode *freelist,**freetail;$/;"	v	file:
freenode	mfsmaster/filesystem.c	/^} freenode;$/;"	t	typeref:struct:_freenode	file:
freenode_bucket	mfsmaster/filesystem.c	/^} freenode_bucket;$/;"	t	typeref:struct:_freenode_bucket	file:
freenode_free	mfsmaster/filesystem.c	/^static inline void freenode_free(freenode *p) {$/;"	f	file:
freenode_free	mfsmaster/filesystem.c	/^static inline void freenode_free(freenode* p) {$/;"	f	file:
freenode_malloc	mfsmaster/filesystem.c	/^static inline freenode* freenode_malloc() {$/;"	f	file:
freetail	mfsmaster/filesystem.c	/^static freenode *freelist,**freetail;$/;"	v	file:
freewaiting	mfscommon/pcqueue.c	/^	uint32_t freewaiting;$/;"	m	struct:_queue	file:
from	mfsmaster/itree.c	/^	uint32_t from,to;$/;"	m	struct:_itnode	file:
from	mfsmount/writedata.c	/^	uint32_t from;		\/\/ first filled byte in data (modified only when writeid==0)$/;"	m	struct:cblock_s	file:
fromip	mfsmaster/exports.c	/^	uint32_t fromip,toip;$/;"	m	struct:_exports	file:
fs_access	mfsmaster/filesystem.c	/^uint8_t fs_access(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t uid,uint32_t gid,int modemask) {$/;"	f
fs_access	mfsmaster/filesystem.c	/^uint8_t fs_access(uint32_t ts,uint32_t inode) {$/;"	f
fs_access	mfsmount/mastercomm.c	/^uint8_t fs_access(uint32_t inode,uint32_t uid,uint32_t gid,uint8_t modemask) {$/;"	f
fs_acquire	mfsmaster/filesystem.c	/^uint8_t fs_acquire(uint32_t inode,uint32_t sessionid) {$/;"	f
fs_add_files_to_chunks	mfsmaster/filesystem.c	/^void fs_add_files_to_chunks() {$/;"	f
fs_append	mfsmaster/filesystem.c	/^uint8_t fs_append(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t inode_src,uint32_t uid,uint32_t gid) {$/;"	f
fs_attr	mfsmaster/filesystem.c	/^uint8_t fs_attr(uint32_t ts,uint32_t inode,uint32_t mode,uint32_t uid,uint32_t gid,uint32_t atime,uint32_t mtime) {$/;"	f
fs_checkfile	mfsmaster/filesystem.c	/^uint8_t fs_checkfile(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t chunkcount[11]) {$/;"	f
fs_checknodes	mfsmaster/filesystem.c	/^int fs_checknodes(int ignoreflag) {$/;"	f
fs_close_session	mfsmount/mastercomm.c	/^void fs_close_session(void) {$/;"	f
fs_connect	mfsmount/mastercomm.c	/^int fs_connect(uint8_t oninit,const char *bindhostname,const char *masterhostname,const char *masterportname,uint8_t meta,const char *info,const char *subfolder,const uint8_t passworddigest[16],uint8_t *sesflags,uint32_t *rootuid,uint32_t *rootgid,uint32_t *mapalluid,uint32_t *mapallgid) {$/;"	f
fs_create	mfsmaster/filesystem.c	/^uint8_t fs_create(uint32_t ts,uint32_t parent,uint32_t nleng,const uint8_t *name,uint8_t type,uint32_t mode,uint32_t uid,uint32_t gid,uint32_t rdev,uint32_t inode) {$/;"	f
fs_createpacket	mfsmount/mastercomm.c	/^uint8_t* fs_createpacket(threc *rec,uint32_t cmd,uint32_t size) {$/;"	f
fs_cs_disconnected	mfsmaster/filesystem.c	/^void fs_cs_disconnected(void) {$/;"	f
fs_custom	mfsmount/mastercomm.c	/^uint8_t fs_custom(uint32_t qcmd,const uint8_t *query,uint32_t queryleng,uint32_t *acmd,uint8_t *answer,uint32_t *answerleng) {$/;"	f
fs_dec_acnt	mfsmount/mastercomm.c	/^void fs_dec_acnt(uint32_t inode) {$/;"	f
fs_do_setlength	mfsmaster/filesystem.c	/^uint8_t fs_do_setlength(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint64_t length,uint8_t attr[35]) {$/;"	f
fs_dostoreall	mfsmaster/filesystem.c	/^void fs_dostoreall(void) {$/;"	f
fs_dump	mfsmaster/filesystem.c	/^void fs_dump(void) {$/;"	f
fs_dumpedge	mfsmaster/filesystem.c	/^void fs_dumpedge(fsedge *e) {$/;"	f
fs_dumpedgelist	mfsmaster/filesystem.c	/^void fs_dumpedgelist(fsedge *e) {$/;"	f
fs_dumpedges	mfsmaster/filesystem.c	/^void fs_dumpedges(fsnode *f) {$/;"	f
fs_dumpfree	mfsmaster/filesystem.c	/^void fs_dumpfree() {$/;"	f
fs_dumpnode	mfsmaster/filesystem.c	/^void fs_dumpnode(fsnode *f) {$/;"	f
fs_dumpnodes	mfsmaster/filesystem.c	/^void fs_dumpnodes() {$/;"	f
fs_emergency_saves	mfsmaster/filesystem.c	/^int fs_emergency_saves() {$/;"	f
fs_emergency_storeall	mfsmaster/filesystem.c	/^int fs_emergency_storeall(const char *fname) {$/;"	f
fs_emptyreserved	mfsmaster/filesystem.c	/^void fs_emptyreserved(void) {$/;"	f
fs_emptytrash	mfsmaster/filesystem.c	/^void fs_emptytrash(void) {$/;"	f
fs_end_setlength	mfsmaster/filesystem.c	/^uint8_t fs_end_setlength(uint64_t chunkid) {$/;"	f
fs_get_dir_stats	mfsmaster/filesystem.c	/^uint8_t fs_get_dir_stats(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t *inodes,uint32_t *dirs,uint32_t *files,uint32_t *chunks,uint64_t *length,uint64_t *size,uint64_t *rsize) {$/;"	f
fs_get_my_threc	mfsmount/mastercomm.c	/^threc* fs_get_my_threc() {$/;"	f
fs_get_threc_by_id	mfsmount/mastercomm.c	/^threc* fs_get_threc_by_id(uint32_t packetid) {$/;"	f
fs_getattr	mfsmaster/filesystem.c	/^uint8_t fs_getattr(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint8_t attr[35]) {$/;"	f
fs_getattr	mfsmount/mastercomm.c	/^uint8_t fs_getattr(uint32_t inode,uint32_t uid,uint32_t gid,uint8_t attr[35]) {$/;"	f
fs_getdetachedattr	mfsmaster/filesystem.c	/^uint8_t fs_getdetachedattr(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint8_t attr[35],uint8_t dtype) {$/;"	f
fs_getdetachedattr	mfsmount/mastercomm.c	/^uint8_t fs_getdetachedattr(uint32_t inode,uint8_t attr[35]) {$/;"	f
fs_getdir	mfsmount/mastercomm.c	/^uint8_t fs_getdir(uint32_t inode,uint32_t uid,uint32_t gid,const uint8_t **dbuff,uint32_t *dbuffsize) {$/;"	f
fs_getdir_plus	mfsmount/mastercomm.c	/^uint8_t fs_getdir_plus(uint32_t inode,uint32_t uid,uint32_t gid,uint8_t addtocache,const uint8_t **dbuff,uint32_t *dbuffsize) {$/;"	f
fs_getdirpath_data	mfsmaster/filesystem.c	/^void fs_getdirpath_data(uint32_t inode,uint8_t *buff,uint32_t size) {$/;"	f
fs_getdirpath_size	mfsmaster/filesystem.c	/^uint32_t fs_getdirpath_size(uint32_t inode) {$/;"	f
fs_geteattr	mfsmaster/filesystem.c	/^uint8_t fs_geteattr(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint8_t gmode,uint32_t feattrtab[16],uint32_t deattrtab[16]) {$/;"	f
fs_getgoal	mfsmaster/filesystem.c	/^uint8_t fs_getgoal(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint8_t gmode,uint32_t fgtab[10],uint32_t dgtab[10]) {$/;"	f
fs_getmasterlocation	mfsmount/mastercomm.c	/^void fs_getmasterlocation(uint8_t loc[14]) {$/;"	f
fs_getquotainfo_data	mfsmaster/filesystem.c	/^void fs_getquotainfo_data(uint8_t * buff) {$/;"	f
fs_getquotainfo_size	mfsmaster/filesystem.c	/^uint32_t fs_getquotainfo_size() {$/;"	f
fs_getreserved	mfsmount/mastercomm.c	/^uint8_t fs_getreserved(const uint8_t **dbuff,uint32_t *dbuffsize) {$/;"	f
fs_getrootinode	mfsmaster/filesystem.c	/^uint8_t fs_getrootinode(uint32_t *rootinode,const uint8_t *path) {$/;"	f
fs_getsrcip	mfsmount/mastercomm.c	/^uint32_t fs_getsrcip() {$/;"	f
fs_gettrash	mfsmount/mastercomm.c	/^uint8_t fs_gettrash(const uint8_t **dbuff,uint32_t *dbuffsize) {$/;"	f
fs_gettrashpath	mfsmaster/filesystem.c	/^uint8_t fs_gettrashpath(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t *pleng,uint8_t **path) {$/;"	f
fs_gettrashpath	mfsmount/mastercomm.c	/^uint8_t fs_gettrashpath(uint32_t inode,const uint8_t **path) {$/;"	f
fs_gettrashtime_prepare	mfsmaster/filesystem.c	/^uint8_t fs_gettrashtime_prepare(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint8_t gmode,void **fptr,void **dptr,uint32_t *fnodes,uint32_t *dnodes) {$/;"	f
fs_gettrashtime_store	mfsmaster/filesystem.c	/^void fs_gettrashtime_store(void *fptr,void *dptr,uint8_t *buff) {$/;"	f
fs_getversion	mfsmaster/filesystem.c	/^uint64_t fs_getversion() {$/;"	f
fs_inc_acnt	mfsmount/mastercomm.c	/^void fs_inc_acnt(uint32_t inode) {$/;"	f
fs_incversion	mfsmaster/filesystem.c	/^uint8_t fs_incversion(uint64_t chunkid) {$/;"	f
fs_incversion	mfsmaster/filesystem.c	/^void fs_incversion(uint64_t chunkid) {$/;"	f
fs_info	mfsmaster/filesystem.c	/^void fs_info(uint64_t *totalspace,uint64_t *availspace,uint64_t *trspace,uint32_t *trnodes,uint64_t *respace,uint32_t *renodes,uint32_t *inodes,uint32_t *dnodes,uint32_t *fnodes) {$/;"	f
fs_init	mfsmaster/filesystem.c	/^int fs_init(const char *fname,int ignoreflag) {$/;"	f
fs_init	mfsmaster/filesystem.c	/^int fs_init(void) {$/;"	f
fs_init_master_connection	mfsmount/mastercomm.c	/^int fs_init_master_connection(const char *bindhostname,const char *masterhostname,const char *masterportname,uint8_t meta,const char *info,const char *subfolder,const uint8_t passworddigest[16],uint8_t donotrememberpassword,uint8_t *flags,uint32_t *rootuid,uint32_t *rootgid,uint32_t *mapalluid,uint32_t *mapallgid) {$/;"	f
fs_init_threads	mfsmount/mastercomm.c	/^void fs_init_threads(uint32_t retries) {$/;"	f
fs_input_buffer_init	mfsmount/mastercomm.c	/^void fs_input_buffer_init(threc *rec,uint32_t size) {$/;"	f
fs_length	mfsmaster/filesystem.c	/^uint8_t fs_length(uint32_t ts,uint32_t inode,uint64_t length) {$/;"	f
fs_link	mfsmaster/filesystem.c	/^uint8_t fs_link(uint32_t rootinode,uint8_t sesflags,uint32_t inode_src,uint32_t parent_dst,uint16_t nleng_dst,const uint8_t *name_dst,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_link	mfsmount/mastercomm.c	/^uint8_t fs_link(uint32_t inode_src,uint32_t parent_dst,uint8_t nleng_dst,const uint8_t *name_dst,uint32_t uid,uint32_t gid,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_load	mfsmaster/filesystem.c	/^int fs_load(FILE *fd,int ignoreflag,uint8_t fver) {$/;"	f
fs_load	mfsmetadump/mfsmetadump.c	/^int fs_load(FILE *fd) {$/;"	f
fs_load_17	mfsmetadump/mfsmetadump.c	/^int fs_load_17(FILE *fd) {$/;"	f
fs_loadall	mfsmaster/filesystem.c	/^int fs_loadall(void) {$/;"	f
fs_loadall	mfsmetadump/mfsmetadump.c	/^int fs_loadall(const char *fname) {$/;"	f
fs_loadedge	mfsmaster/filesystem.c	/^int fs_loadedge(FILE *fd,int ignoreflag) {$/;"	f
fs_loadedge	mfsmetadump/mfsmetadump.c	/^int fs_loadedge(FILE *fd) {$/;"	f
fs_loadedges	mfsmaster/filesystem.c	/^int fs_loadedges(FILE *fd,int ignoreflag) {$/;"	f
fs_loadedges	mfsmetadump/mfsmetadump.c	/^int fs_loadedges(FILE *fd) {$/;"	f
fs_loadfree	mfsmaster/filesystem.c	/^int fs_loadfree(FILE *fd) {$/;"	f
fs_loadfree	mfsmetadump/mfsmetadump.c	/^int fs_loadfree(FILE *fd) {$/;"	f
fs_loadnode	mfsmaster/filesystem.c	/^int fs_loadnode(FILE *fd) {$/;"	f
fs_loadnode	mfsmetadump/mfsmetadump.c	/^int fs_loadnode(FILE *fd) {$/;"	f
fs_loadnodes	mfsmaster/filesystem.c	/^int fs_loadnodes(FILE *fd) {$/;"	f
fs_loadnodes	mfsmetadump/mfsmetadump.c	/^int fs_loadnodes(FILE *fd) {$/;"	f
fs_loadquota	mfsmaster/filesystem.c	/^int fs_loadquota(FILE *fd,int ignoreflag) {$/;"	f
fs_loadquota	mfsmetadump/mfsmetadump.c	/^int fs_loadquota(FILE *fd) {$/;"	f
fs_loadversion	mfsmaster/filesystem.c	/^uint64_t fs_loadversion(FILE *fd) {$/;"	f
fs_lookup	mfsmaster/filesystem.c	/^uint8_t fs_lookup(uint32_t rootinode,uint8_t sesflags,uint32_t parent,uint16_t nleng,const uint8_t *name,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_lookup	mfsmount/mastercomm.c	/^uint8_t fs_lookup(uint32_t parent,uint8_t nleng,const uint8_t *name,uint32_t uid,uint32_t gid,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_lostnode	mfsmaster/filesystem.c	/^int fs_lostnode(fsnode *p) {$/;"	f
fs_mkdir	mfsmaster/filesystem.c	/^uint8_t fs_mkdir(uint32_t rootinode,uint8_t sesflags,uint32_t parent,uint16_t nleng,const uint8_t *name,uint16_t mode,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint8_t copysgid,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_mkdir	mfsmount/mastercomm.c	/^uint8_t fs_mkdir(uint32_t parent,uint8_t nleng,const uint8_t *name,uint16_t mode,uint32_t uid,uint32_t gid,uint8_t copysgid,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_mknod	mfsmaster/filesystem.c	/^uint8_t fs_mknod(uint32_t rootinode,uint8_t sesflags,uint32_t parent,uint16_t nleng,const uint8_t *name,uint8_t type,uint16_t mode,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint32_t rdev,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_mknod	mfsmount/mastercomm.c	/^uint8_t fs_mknod(uint32_t parent,uint8_t nleng,const uint8_t *name,uint8_t type,uint16_t mode,uint32_t uid,uint32_t gid,uint32_t rdev,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_new	mfsmaster/filesystem.c	/^void fs_new(void) {$/;"	f
fs_newsessionid	mfsmaster/filesystem.c	/^uint32_t fs_newsessionid(void) {$/;"	f
fs_nop_thread	mfsmount/mastercomm.c	/^void* fs_nop_thread(void *arg) {$/;"	f
fs_opencheck	mfsmaster/filesystem.c	/^uint8_t fs_opencheck(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint8_t flags,uint8_t attr[35]) {$/;"	f
fs_opencheck	mfsmount/mastercomm.c	/^uint8_t fs_opencheck(uint32_t inode,uint32_t uid,uint32_t gid,uint8_t flags,uint8_t attr[35]) {$/;"	f
fs_output_buffer_init	mfsmount/mastercomm.c	/^void fs_output_buffer_init(threc *rec,uint32_t size) {$/;"	f
fs_purge	mfsmaster/filesystem.c	/^uint8_t fs_purge(uint32_t rootinode,uint8_t sesflags,uint32_t inode) {$/;"	f
fs_purge	mfsmount/mastercomm.c	/^uint8_t fs_purge(uint32_t inode) {$/;"	f
fs_quota	mfsmaster/filesystem.c	/^uint8_t fs_quota(uint32_t ts,uint32_t inode,uint8_t exceeded,uint8_t flags,uint32_t stimestamp,uint32_t sinodes,uint32_t hinodes,uint64_t slength,uint64_t hlength,uint64_t ssize,uint64_t hsize,uint64_t srealsize,uint64_t hrealsize) {$/;"	f
fs_quotacontrol	mfsmaster/filesystem.c	/^uint8_t fs_quotacontrol(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint8_t delflag,uint8_t *flags,uint32_t *sinodes,uint64_t *slength,uint64_t *ssize,uint64_t *srealsize,uint32_t *hinodes,uint64_t *hlength,uint64_t *hsize,uint64_t *hrealsize,uint32_t *curinodes,uint64_t *curlength,uint64_t *cursize,uint64_t *currealsize) {$/;"	f
fs_readchunk	mfsmaster/filesystem.c	/^uint8_t fs_readchunk(uint32_t inode,uint32_t indx,uint64_t *chunkid,uint64_t *length) {$/;"	f
fs_readchunk	mfsmount/mastercomm.c	/^uint8_t fs_readchunk(uint32_t inode,uint32_t indx,uint64_t *length,uint64_t *chunkid,uint32_t *version,const uint8_t **csdata,uint32_t *csdatasize) {$/;"	f
fs_readdir_data	mfsmaster/filesystem.c	/^void fs_readdir_data(uint32_t rootinode,uint8_t sesflags,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint8_t flags,void *dnode,uint8_t *dbuff) {$/;"	f
fs_readdir_size	mfsmaster/filesystem.c	/^uint8_t fs_readdir_size(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t uid,uint32_t gid,uint8_t flags,void **dnode,uint32_t *dbuffsize) {$/;"	f
fs_readlink	mfsmaster/filesystem.c	/^uint8_t fs_readlink(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t *pleng,uint8_t **path) {$/;"	f
fs_readlink	mfsmount/mastercomm.c	/^uint8_t fs_readlink(uint32_t inode,const uint8_t **path) {$/;"	f
fs_readreserved_data	mfsmaster/filesystem.c	/^void fs_readreserved_data(uint32_t rootinode,uint8_t sesflags,uint8_t *dbuff) {$/;"	f
fs_readreserved_size	mfsmaster/filesystem.c	/^uint8_t fs_readreserved_size(uint32_t rootinode,uint8_t sesflags,uint32_t *dbuffsize) {$/;"	f
fs_readtrash_data	mfsmaster/filesystem.c	/^void fs_readtrash_data(uint32_t rootinode,uint8_t sesflags,uint8_t *dbuff) {$/;"	f
fs_readtrash_size	mfsmaster/filesystem.c	/^uint8_t fs_readtrash_size(uint32_t rootinode,uint8_t sesflags,uint32_t *dbuffsize) {$/;"	f
fs_receive_thread	mfsmount/mastercomm.c	/^void* fs_receive_thread(void *arg) {$/;"	f
fs_reconnect	mfsmount/mastercomm.c	/^void fs_reconnect() {$/;"	f
fs_release	mfsmaster/filesystem.c	/^uint8_t fs_release(uint32_t inode,uint32_t sessionid) {$/;"	f
fs_release	mfsmount/mastercomm.c	/^void fs_release(uint32_t inode) {$/;"	f
fs_rename	mfsmaster/filesystem.c	/^uint8_t fs_rename(uint32_t rootinode,uint8_t sesflags,uint32_t parent_src,uint16_t nleng_src,const uint8_t *name_src,uint32_t parent_dst,uint16_t nleng_dst,const uint8_t *name_dst,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_rename	mfsmount/mastercomm.c	/^uint8_t fs_rename(uint32_t parent_src,uint8_t nleng_src,const uint8_t *name_src,uint32_t parent_dst,uint8_t nleng_dst,const uint8_t *name_dst,uint32_t uid,uint32_t gid,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_repair	mfsmaster/filesystem.c	/^uint8_t fs_repair(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t uid,uint32_t gid,uint32_t *notchanged,uint32_t *erased,uint32_t *repaired) {$/;"	f
fs_repair	mfsmaster/filesystem.c	/^uint8_t fs_repair(uint32_t ts,uint32_t inode,uint32_t indx,uint32_t nversion) {$/;"	f
fs_resolve	mfsmount/mastercomm.c	/^int fs_resolve(uint8_t oninit,const char *bindhostname,const char *masterhostname,const char *masterportname) {$/;"	f
fs_rmdir	mfsmaster/filesystem.c	/^uint8_t fs_rmdir(uint32_t rootinode,uint8_t sesflags,uint32_t parent,uint16_t nleng,const uint8_t *name,uint32_t uid,uint32_t gid) {$/;"	f
fs_rmdir	mfsmount/mastercomm.c	/^uint8_t fs_rmdir(uint32_t parent,uint8_t nleng,const uint8_t *name,uint32_t uid,uint32_t gid) {$/;"	f
fs_sendandreceive	mfsmount/mastercomm.c	/^const uint8_t* fs_sendandreceive(threc *rec,uint32_t expected_cmd,uint32_t *answer_leng) {$/;"	f
fs_sendandreceive_any	mfsmount/mastercomm.c	/^const uint8_t* fs_sendandreceive_any(threc *rec,uint32_t *received_cmd,uint32_t *answer_leng) {$/;"	f
fs_session	mfsmaster/filesystem.c	/^uint8_t fs_session(uint32_t sessionid) {$/;"	f
fs_setattr	mfsmaster/filesystem.c	/^uint8_t fs_setattr(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint8_t setmask,uint16_t attrmode,uint32_t attruid,uint32_t attrgid,uint32_t attratime,uint32_t attrmtime,uint8_t sugidclearmode,uint8_t attr[35]) {$/;"	f
fs_setattr	mfsmount/mastercomm.c	/^uint8_t fs_setattr(uint32_t inode,uint32_t uid,uint32_t gid,uint8_t setmask,uint16_t attrmode,uint32_t attruid,uint32_t attrgid,uint32_t attratime,uint32_t attrmtime,uint8_t sugidclearmode,uint8_t attr[35]) {$/;"	f
fs_seteattr	mfsmaster/filesystem.c	/^uint8_t fs_seteattr(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t uid,uint8_t eattr,uint8_t smode,uint32_t *sinodes,uint32_t *ncinodes,uint32_t *nsinodes) {$/;"	f
fs_setgoal	mfsmaster/filesystem.c	/^uint8_t fs_setgoal(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t uid,uint8_t goal,uint8_t smode,uint32_t *sinodes,uint32_t *ncinodes,uint32_t *nsinodes,uint32_t *qeinodes) {$/;"	f
fs_settrashpath	mfsmaster/filesystem.c	/^uint8_t fs_settrashpath(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t pleng,const uint8_t *path) {$/;"	f
fs_settrashpath	mfsmount/mastercomm.c	/^uint8_t fs_settrashpath(uint32_t inode,const uint8_t *path) {$/;"	f
fs_settrashtime	mfsmaster/filesystem.c	/^uint8_t fs_settrashtime(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint32_t uid,uint32_t trashtime,uint8_t smode,uint32_t *sinodes,uint32_t *ncinodes,uint32_t *nsinodes) {$/;"	f
fs_snapshot	mfsmaster/filesystem.c	/^uint8_t fs_snapshot(uint32_t rootinode,uint8_t sesflags,uint32_t inode_src,uint32_t parent_dst,uint16_t nleng_dst,const uint8_t *name_dst,uint32_t uid,uint32_t gid,uint8_t canoverwrite) {$/;"	f
fs_statfs	mfsmaster/filesystem.c	/^void fs_statfs(uint32_t rootinode,uint8_t sesflags,uint64_t *totalspace,uint64_t *availspace,uint64_t *trspace,uint64_t *respace,uint32_t *inodes) {$/;"	f
fs_statfs	mfsmount/mastercomm.c	/^void fs_statfs(uint64_t *totalspace,uint64_t *availspace,uint64_t *trashspace,uint64_t *reservedspace,uint32_t *inodes) {$/;"	f
fs_stats	mfsmaster/filesystem.c	/^void fs_stats(uint32_t stats[16]) {$/;"	f
fs_store	mfsmaster/filesystem.c	/^void fs_store(FILE *fd,uint8_t fver) {$/;"	f
fs_storeall	mfsmaster/filesystem.c	/^int fs_storeall(int bg) {$/;"	f
fs_storeall	mfsmaster/filesystem.c	/^void fs_storeall(const char *fname) {$/;"	f
fs_storeedge	mfsmaster/filesystem.c	/^void fs_storeedge(fsedge *e,FILE *fd) {$/;"	f
fs_storeedgelist	mfsmaster/filesystem.c	/^void fs_storeedgelist(fsedge *e,FILE *fd) {$/;"	f
fs_storeedges	mfsmaster/filesystem.c	/^void fs_storeedges(FILE *fd) {$/;"	f
fs_storeedges_rec	mfsmaster/filesystem.c	/^void fs_storeedges_rec(fsnode *f,FILE *fd) {$/;"	f
fs_storefree	mfsmaster/filesystem.c	/^void fs_storefree(FILE *fd) {$/;"	f
fs_storenode	mfsmaster/filesystem.c	/^void fs_storenode(fsnode *f,FILE *fd) {$/;"	f
fs_storenodes	mfsmaster/filesystem.c	/^void fs_storenodes(FILE *fd) {$/;"	f
fs_storequota	mfsmaster/filesystem.c	/^void fs_storequota(FILE *fd) {$/;"	f
fs_strinit	mfsmaster/filesystem.c	/^void fs_strinit(void) {$/;"	f
fs_symlink	mfsmaster/filesystem.c	/^uint8_t fs_symlink(uint32_t rootinode,uint8_t sesflags,uint32_t parent,uint16_t nleng,const uint8_t *name,uint32_t pleng,const uint8_t *path,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_symlink	mfsmount/mastercomm.c	/^uint8_t fs_symlink(uint32_t parent,uint8_t nleng,const uint8_t *name,const uint8_t *path,uint32_t uid,uint32_t gid,uint32_t *inode,uint8_t attr[35]) {$/;"	f
fs_term	mfsmaster/filesystem.c	/^void fs_term(const char *fname) {$/;"	f
fs_term	mfsmaster/filesystem.c	/^void fs_term(void) {$/;"	f
fs_term	mfsmount/mastercomm.c	/^void fs_term(void) {$/;"	f
fs_test_files	mfsmaster/filesystem.c	/^void fs_test_files() {$/;"	f
fs_test_getdata	mfsmaster/filesystem.c	/^void fs_test_getdata(uint32_t *loopstart,uint32_t *loopend,uint32_t *files,uint32_t *ugfiles,uint32_t *mfiles,uint32_t *chunks,uint32_t *ugchunks,uint32_t *mchunks,char **msgbuff,uint32_t *msgbuffleng) {$/;"	f
fs_test_log_inconsistency	mfsmaster/filesystem.c	/^uint32_t fs_test_log_inconsistency(fsedge *e,const char *iname,char *buff,uint32_t size) {$/;"	f
fs_trunc	mfsmaster/filesystem.c	/^uint8_t fs_trunc(uint32_t ts,uint32_t inode,uint32_t indx,uint64_t chunkid) {$/;"	f
fs_truncate	mfsmount/mastercomm.c	/^uint8_t fs_truncate(uint32_t inode,uint8_t opened,uint32_t uid,uint32_t gid,uint64_t attrlength,uint8_t attr[35]) {$/;"	f
fs_try_setlength	mfsmaster/filesystem.c	/^uint8_t fs_try_setlength(uint32_t rootinode,uint8_t sesflags,uint32_t inode,uint8_t opened,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint64_t length,uint8_t attr[35],uint64_t *chunkid) {$/;"	f
fs_undel	mfsmaster/filesystem.c	/^uint8_t fs_undel(uint32_t rootinode,uint8_t sesflags,uint32_t inode) {$/;"	f
fs_undel	mfsmount/mastercomm.c	/^uint8_t fs_undel(uint32_t inode) {$/;"	f
fs_unlink	mfsmaster/filesystem.c	/^uint8_t fs_unlink(uint32_t rootinode,uint8_t sesflags,uint32_t parent,uint16_t nleng,const uint8_t *name,uint32_t uid,uint32_t gid) {$/;"	f
fs_unlink	mfsmaster/filesystem.c	/^uint8_t fs_unlink(uint32_t ts,uint32_t parent,uint32_t nleng,const uint8_t *name,uint32_t inode) {$/;"	f
fs_unlink	mfsmount/mastercomm.c	/^uint8_t fs_unlink(uint32_t parent,uint8_t nleng,const uint8_t *name,uint32_t uid,uint32_t gid) {$/;"	f
fs_unlock	mfsmaster/filesystem.c	/^uint8_t fs_unlock(uint64_t chunkid) {$/;"	f
fs_write	mfsmaster/filesystem.c	/^uint8_t fs_write(uint32_t ts,uint32_t inode,uint32_t indx,uint8_t opflag,uint64_t chunkid) {$/;"	f
fs_writechunk	mfsmaster/filesystem.c	/^uint8_t fs_writechunk(uint32_t inode,uint32_t indx,uint64_t *chunkid,uint64_t *length,uint8_t *opflag) {$/;"	f
fs_writechunk	mfsmount/mastercomm.c	/^uint8_t fs_writechunk(uint32_t inode,uint32_t indx,uint64_t *length,uint64_t *chunkid,uint32_t *version,const uint8_t **csdata,uint32_t *csdatasize) {$/;"	f
fs_writeend	mfsmaster/filesystem.c	/^uint8_t fs_writeend(uint32_t inode,uint64_t length,uint64_t chunkid) {$/;"	f
fs_writeend	mfsmount/mastercomm.c	/^uint8_t fs_writeend(uint64_t chunkid, uint32_t inode, uint64_t length) {$/;"	f
fsedge	mfsmaster/filesystem.c	/^} fsedge;$/;"	t	typeref:struct:_fsedge	file:
fsinfo_chunks	mfsmaster/filesystem.c	/^static uint32_t fsinfo_chunks=0;$/;"	v	file:
fsinfo_files	mfsmaster/filesystem.c	/^static uint32_t fsinfo_files=0;$/;"	v	file:
fsinfo_loopend	mfsmaster/filesystem.c	/^static uint32_t fsinfo_loopend=0;$/;"	v	file:
fsinfo_loopstart	mfsmaster/filesystem.c	/^static uint32_t fsinfo_loopstart=0;$/;"	v	file:
fsinfo_mchunks	mfsmaster/filesystem.c	/^static uint32_t fsinfo_mchunks=0;$/;"	v	file:
fsinfo_mfiles	mfsmaster/filesystem.c	/^static uint32_t fsinfo_mfiles=0;$/;"	v	file:
fsinfo_msgbuff	mfsmaster/filesystem.c	/^static char *fsinfo_msgbuff=NULL;$/;"	v	file:
fsinfo_msgbuffleng	mfsmaster/filesystem.c	/^static uint32_t fsinfo_msgbuffleng=0;$/;"	v	file:
fsinfo_ugchunks	mfsmaster/filesystem.c	/^static uint32_t fsinfo_ugchunks=0;$/;"	v	file:
fsinfo_ugfiles	mfsmaster/filesystem.c	/^static uint32_t fsinfo_ugfiles=0;$/;"	v	file:
fsnode	mfsmaster/filesystem.c	/^} fsnode;$/;"	t	typeref:struct:_fsnode	file:
fsnodes_access	mfsmaster/filesystem.c	/^static inline int fsnodes_access(fsnode *node,uint32_t uid,uint32_t gid,uint8_t modemask,uint8_t sesflags) {$/;"	f	file:
fsnodes_add_stats	mfsmaster/filesystem.c	/^static inline void fsnodes_add_stats(fsnode *parent,statsrecord *sr) {$/;"	f	file:
fsnodes_add_sub_stats	mfsmaster/filesystem.c	/^static inline void fsnodes_add_sub_stats(fsnode *parent,statsrecord *newsr,statsrecord *prevsr) {$/;"	f	file:
fsnodes_appendchunks	mfsmaster/filesystem.c	/^static inline uint8_t fsnodes_appendchunks(uint32_t ts,fsnode *dstobj,fsnode *srcobj) {$/;"	f	file:
fsnodes_bst_add	mfsmaster/filesystem.c	/^static inline void fsnodes_bst_add(bstnode **n,uint32_t val) {$/;"	f	file:
fsnodes_bst_free	mfsmaster/filesystem.c	/^static inline void fsnodes_bst_free(bstnode *n) {$/;"	f	file:
fsnodes_bst_nodes	mfsmaster/filesystem.c	/^static inline uint32_t fsnodes_bst_nodes(bstnode *n) {$/;"	f	file:
fsnodes_bst_storedata	mfsmaster/filesystem.c	/^static inline void fsnodes_bst_storedata(bstnode *n,uint8_t **ptr) {$/;"	f	file:
fsnodes_changefilegoal	mfsmaster/filesystem.c	/^static inline void fsnodes_changefilegoal(fsnode *obj,uint8_t goal) {$/;"	f	file:
fsnodes_check_all_quotas	mfsmaster/filesystem.c	/^void fsnodes_check_all_quotas(void) {$/;"	f
fsnodes_check_quotanode	mfsmaster/filesystem.c	/^static inline void fsnodes_check_quotanode(quotanode *qn,uint32_t ts) {$/;"	f	file:
fsnodes_checkfile	mfsmaster/filesystem.c	/^static inline void fsnodes_checkfile(fsnode *p,uint32_t chunkcount[11]) {$/;"	f	file:
fsnodes_create_node	mfsmaster/filesystem.c	/^static inline fsnode* fsnodes_create_node(uint32_t ts,fsnode* node,uint16_t nleng,const uint8_t *name,uint8_t type,uint16_t mode,uint32_t uid,uint32_t gid,uint8_t copysgid) {$/;"	f	file:
fsnodes_delete_quotanode	mfsmaster/filesystem.c	/^static inline void fsnodes_delete_quotanode(fsnode *p) {$/;"	f	file:
fsnodes_escape_name	mfsmaster/filesystem.c	/^static char* fsnodes_escape_name(uint16_t nleng,const uint8_t *name) {$/;"	f	file:
fsnodes_fill_attr	mfsmaster/filesystem.c	/^static inline void fsnodes_fill_attr(fsnode *node,fsnode *parent,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint8_t sesflags,uint8_t attr[35]) {$/;"	f	file:
fsnodes_free_id	mfsmaster/filesystem.c	/^void fsnodes_free_id(uint32_t id,uint32_t ts) {$/;"	f
fsnodes_freeinodes	mfsmaster/filesystem.c	/^void fsnodes_freeinodes(void) {$/;"	f
fsnodes_get_next_id	mfsmaster/filesystem.c	/^uint32_t fsnodes_get_next_id() {$/;"	f
fsnodes_get_stats	mfsmaster/filesystem.c	/^static inline void fsnodes_get_stats(fsnode *node,statsrecord *sr) {$/;"	f	file:
fsnodes_getdetacheddata	mfsmaster/filesystem.c	/^static inline void fsnodes_getdetacheddata(fsedge *start,uint8_t *dbuff) {$/;"	f	file:
fsnodes_getdetachedsize	mfsmaster/filesystem.c	/^static inline uint32_t fsnodes_getdetachedsize(fsedge *start) {$/;"	f	file:
fsnodes_getdirdata	mfsmaster/filesystem.c	/^static inline void fsnodes_getdirdata(uint32_t rootinode,uint32_t uid,uint32_t gid,uint32_t auid,uint32_t agid,uint8_t sesflags,fsnode *p,uint8_t *dbuff,uint8_t withattr) {$/;"	f	file:
fsnodes_getdirsize	mfsmaster/filesystem.c	/^static inline uint32_t fsnodes_getdirsize(fsnode *p,uint8_t withattr) {$/;"	f	file:
fsnodes_geteattr_recursive	mfsmaster/filesystem.c	/^static inline void fsnodes_geteattr_recursive(fsnode *node,uint8_t gmode,uint32_t feattrtab[16],uint32_t deattrtab[16]) {$/;"	f	file:
fsnodes_getgoal_recursive	mfsmaster/filesystem.c	/^static inline void fsnodes_getgoal_recursive(fsnode *node,uint8_t gmode,uint32_t fgtab[10],uint32_t dgtab[10]) {$/;"	f	file:
fsnodes_getpath	mfsmaster/filesystem.c	/^static inline void fsnodes_getpath(fsedge *e,uint16_t *pleng,uint8_t **path) {$/;"	f	file:
fsnodes_getpath_data	mfsmaster/filesystem.c	/^static inline void fsnodes_getpath_data(fsedge *e,uint8_t *path,uint32_t size) {$/;"	f	file:
fsnodes_getpath_size	mfsmaster/filesystem.c	/^static inline uint32_t fsnodes_getpath_size(fsedge *e) {$/;"	f	file:
fsnodes_gettrashtime_recursive	mfsmaster/filesystem.c	/^static inline void fsnodes_gettrashtime_recursive(fsnode *node,uint8_t gmode,bstnode **bstrootfiles,bstnode **bstrootdirs) {$/;"	f	file:
fsnodes_hash	mfsmaster/filesystem.c	/^static inline uint32_t fsnodes_hash(uint32_t parentid,uint16_t nleng,const uint8_t *name) {$/;"	f	file:
fsnodes_id_to_node	mfsmaster/filesystem.c	/^static inline fsnode* fsnodes_id_to_node(uint32_t id) {$/;"	f	file:
fsnodes_init_freebitmask	mfsmaster/filesystem.c	/^void fsnodes_init_freebitmask (void) {$/;"	f
fsnodes_isancestor	mfsmaster/filesystem.c	/^static inline int fsnodes_isancestor(fsnode *f,fsnode *p) {$/;"	f	file:
fsnodes_link	mfsmaster/filesystem.c	/^static inline void fsnodes_link(uint32_t ts,fsnode *parent,fsnode *child,uint16_t nleng,const uint8_t *name) {$/;"	f	file:
fsnodes_lookup	mfsmaster/filesystem.c	/^static inline fsedge* fsnodes_lookup(fsnode *node,uint16_t nleng,const uint8_t *name) {$/;"	f	file:
fsnodes_namecheck	mfsmaster/filesystem.c	/^static inline int fsnodes_namecheck(uint32_t nleng,const uint8_t *name) {$/;"	f	file:
fsnodes_nameisused	mfsmaster/filesystem.c	/^static inline int fsnodes_nameisused(fsnode *node,uint16_t nleng,const uint8_t *name) {$/;"	f	file:
fsnodes_new_quotanode	mfsmaster/filesystem.c	/^static inline quotanode* fsnodes_new_quotanode(fsnode *p) {$/;"	f	file:
fsnodes_purge	mfsmaster/filesystem.c	/^static inline int fsnodes_purge(uint32_t ts,fsnode *p) {$/;"	f	file:
fsnodes_remove_edge	mfsmaster/filesystem.c	/^static inline void fsnodes_remove_edge(uint32_t ts,fsedge *e) {$/;"	f	file:
fsnodes_remove_node	mfsmaster/filesystem.c	/^static inline void fsnodes_remove_node(uint32_t ts,fsnode *toremove) {$/;"	f	file:
fsnodes_seteattr_recursive	mfsmaster/filesystem.c	/^static inline void fsnodes_seteattr_recursive(fsnode *node,uint32_t ts,uint32_t uid,uint8_t eattr,uint8_t smode,uint32_t *sinodes,uint32_t *ncinodes,uint32_t *nsinodes) {$/;"	f	file:
fsnodes_setgoal_recursive	mfsmaster/filesystem.c	/^static inline void fsnodes_setgoal_recursive(fsnode *node,uint32_t ts,uint32_t uid,uint8_t quota,uint8_t goal,uint8_t smode,uint32_t *sinodes,uint32_t *ncinodes,uint32_t *nsinodes,uint32_t *qeinodes) {$/;"	f	file:
fsnodes_setlength	mfsmaster/filesystem.c	/^static inline void fsnodes_setlength(fsnode *obj,uint64_t length) {$/;"	f	file:
fsnodes_settrashtime_recursive	mfsmaster/filesystem.c	/^static inline void fsnodes_settrashtime_recursive(fsnode *node,uint32_t ts,uint32_t uid,uint32_t trashtime,uint8_t smode,uint32_t *sinodes,uint32_t *ncinodes,uint32_t *nsinodes) {$/;"	f	file:
fsnodes_snapshot	mfsmaster/filesystem.c	/^static inline void fsnodes_snapshot(uint32_t ts,fsnode *srcnode,fsnode *parentnode,uint32_t nleng,const uint8_t *name) {$/;"	f	file:
fsnodes_snapshot_test	mfsmaster/filesystem.c	/^static inline uint8_t fsnodes_snapshot_test(fsnode *origsrcnode,fsnode *srcnode,fsnode *parentnode,uint32_t nleng,const uint8_t *name,uint8_t canoverwrite) {$/;"	f	file:
fsnodes_sticky_access	mfsmaster/filesystem.c	/^static inline int fsnodes_sticky_access(fsnode *parent,fsnode *node,uint32_t uid) {$/;"	f	file:
fsnodes_sub_stats	mfsmaster/filesystem.c	/^static inline void fsnodes_sub_stats(fsnode *parent,statsrecord *sr) {$/;"	f	file:
fsnodes_test_quota	mfsmaster/filesystem.c	/^static inline uint8_t fsnodes_test_quota(fsnode *node) {$/;"	f	file:
fsnodes_undel	mfsmaster/filesystem.c	/^static inline uint8_t fsnodes_undel(uint32_t ts,fsnode *node) {$/;"	f	file:
fsnodes_unlink	mfsmaster/filesystem.c	/^static inline void fsnodes_unlink(uint32_t ts,fsedge *e) {$/;"	f	file:
fsnodes_used_inode	mfsmaster/filesystem.c	/^void fsnodes_used_inode (uint32_t id) {$/;"	f
fsyncops	mfschunkserver/hddspacemgr.c	/^	uint32_t fsyncops;$/;"	m	struct:hddstats	file:
fsynctime	mfscgi/mfs.cgi.in	/^									fsynctime = 0$/;"	v
fsynctime	mfscgi/mfs.cgi.in	/^									fsynctime = usecfsyncsum\/fsyncops$/;"	v
fsynctime	mfscgi/mfs.cgi.in	/^								fsynctime = usecfsyncmax$/;"	v
fterm	mfsmount/mastercomm.c	/^static uint8_t fterm;$/;"	v	file:
ftime	mfsmaster/filesystem.c	/^	uint32_t ftime;$/;"	m	struct:_freenode	file:
fullname	mfsmount/stats.c	/^	char *fullname;$/;"	m	struct:_statsnode	file:
fullwaiting	mfscommon/pcqueue.c	/^	uint32_t fullwaiting;$/;"	m	struct:_queue	file:
fun	mfscommon/main.c	/^	int (*fun)(void);$/;"	m	struct:ceentry	file:
fun	mfscommon/main.c	/^	void (*fun)(void);$/;"	m	struct:deentry	file:
fun	mfscommon/main.c	/^	void (*fun)(void);$/;"	m	struct:eloopentry	file:
fun	mfscommon/main.c	/^	void (*fun)(void);$/;"	m	struct:rlentry	file:
fun	mfscommon/main.c	/^	void (*fun)(void);$/;"	m	struct:timeentry	file:
fun	mfscommon/main.c	/^	void (*fun)(void);$/;"	m	struct:weentry	file:
func_append	configure	/^func_append ()\\$/;"	f
func_append	ltmain.sh	/^func_append ()$/;"	f
func_append_quoted	configure	/^func_append_quoted ()\\$/;"	f
func_append_quoted	ltmain.sh	/^func_append_quoted ()$/;"	f
func_arith	configure	/^func_arith ()\\$/;"	f
func_arith	ltmain.sh	/^func_arith ()$/;"	f
func_basename	configure	/^func_basename ()\\$/;"	f
func_basename	ltmain.sh	/^func_basename ()$/;"	f
func_check_version_match	ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	ltmain.sh	/^func_cygpath ()$/;"	f
func_dirname	configure	/^func_dirname ()\\$/;"	f
func_dirname	ltmain.sh	/^func_dirname ()$/;"	f
func_dirname_and_basename	configure	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_echo	ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	configure	/^func_echo_all ()$/;"	f
func_echo_all	ltmain.sh	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	ltmain.sh	/^func_error ()$/;"	f
func_exec_program	ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	ltmain.sh	/^func_exec_program_core ()$/;"	f
func_execute_cmds	ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	ltmain.sh	/^func_features ()$/;"	f
func_generate_dlsyms	ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	ltmain.sh	/^func_grep ()$/;"	f
func_help	ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	configure	/^func_len ()\\$/;"	f
func_len	ltmain.sh	/^func_len ()$/;"	f
func_lo2o	configure	/^func_lo2o ()\\$/;"	f
func_lo2o	ltmain.sh	/^func_lo2o ()$/;"	f
func_lt_dump_args	ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	ltmain.sh	/^func_normal_abspath ()$/;"	f
func_parse_lt_options	ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	ltmain.sh	/^func_relative_path ()$/;"	f
func_replace_sysroot	ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_show_eval	ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	ltmain.sh	/^func_source ()$/;"	f
func_split_long_opt	configure	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	ltmain.sh	/^func_split_long_opt ()$/;"	f
func_split_short_opt	configure	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	ltmain.sh	/^func_split_short_opt ()$/;"	f
func_stripname	configure	/^func_stripname ()\\$/;"	f
func_stripname	ltmain.sh	/^func_stripname ()$/;"	f
func_stripname_cnf	configure	/^func_stripname_cnf ()$/;"	f
func_to_host_file	ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	ltmain.sh	/^func_usage ()$/;"	f
func_verbose	ltmain.sh	/^func_verbose ()$/;"	f
func_version	ltmain.sh	/^func_version ()$/;"	f
func_warning	ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	configure	/^func_xform ()\\$/;"	f
func_xform	ltmain.sh	/^func_xform ()$/;"	f
fuse_opt_insert_arg	mfsmount/main.c	/^static int fuse_opt_insert_arg(struct fuse_args *args, int pos, const char *arg) {$/;"	f	file:
fwdbytesleft	mfschunkserver/csserv.c	/^	uint32_t fwdbytesleft;		\/\/ used for forwarding inputpacket data$/;"	m	struct:csserventry	file:
fwdhdrbuff	mfschunkserver/csserv.c	/^	uint8_t fwdhdrbuff[8];$/;"	m	struct:csserventry	file:
fwdinitpacket	mfschunkserver/csserv.c	/^	uint8_t *fwdinitpacket;		\/\/ used only for write initialization$/;"	m	struct:csserventry	file:
fwdinputpacket	mfschunkserver/csserv.c	/^	packetstruct fwdinputpacket;	\/\/ used for receiving status from fwdsocket$/;"	m	struct:csserventry	file:
fwdip	mfschunkserver/csserv.c	/^	uint32_t fwdip;			\/\/ 'connect' IP$/;"	m	struct:csserventry	file:
fwdmode	mfschunkserver/csserv.c	/^	uint8_t fwdmode;$/;"	m	struct:csserventry	file:
fwdpdescpos	mfschunkserver/csserv.c	/^	int32_t fwdpdescpos;$/;"	m	struct:csserventry	file:
fwdport	mfschunkserver/csserv.c	/^	uint16_t fwdport;		\/\/ 'connect' port number$/;"	m	struct:csserventry	file:
fwdsock	mfschunkserver/csserv.c	/^	int fwdsock;			\/\/ forwarding socket for writing$/;"	m	struct:csserventry	file:
fwdstartptr	mfschunkserver/csserv.c	/^	uint8_t *fwdstartptr;		\/\/ used for forwarding inputpacket data$/;"	m	struct:csserventry	file:
get16bit	mfscommon/datapack.h	/^static inline uint16_t get16bit(const uint8_t **ptr) {$/;"	f
get32bit	mfscommon/datapack.h	/^static inline uint32_t get32bit(const uint8_t **ptr) {$/;"	f
get64bit	mfscommon/datapack.h	/^static inline uint64_t get64bit(const uint8_t **ptr) {$/;"	f
get8bit	mfscommon/datapack.h	/^static inline uint8_t get8bit(const uint8_t **ptr) {$/;"	f
get_eattr	mfsmount/mfstools.c	/^int get_eattr(const char *fname,uint8_t mode) {$/;"	f
get_goal	mfsmount/mfstools.c	/^int get_goal(const char *fname,uint8_t mode) {$/;"	f
get_trashtime	mfsmount/mfstools.c	/^int get_trashtime(const char *fname,uint8_t mode) {$/;"	f
get_usectime	mfschunkserver/hddspacemgr.c	/^static inline uint64_t get_usectime() {$/;"	f	file:
getmonleng	mfscommon/charts.c	/^uint32_t getmonleng(uint32_t year,uint32_t month) {$/;"	f
gid	mfsmaster/filesystem.c	/^	uint32_t gid;$/;"	m	struct:_fsnode	file:
gid	mfsmaster/matoclserv.c	/^	uint32_t gid;$/;"	m	struct:chunklist	file:
gid	mfsmount/mfs_fuse.c	/^	gid_t gid;$/;"	m	struct:_dirbuf	file:
glock	mfsmount/dirattrcache.c	/^static pthread_mutex_t glock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
glock	mfsmount/readdata.c	/^static pthread_mutex_t glock;$/;"	v	file:
glock	mfsmount/stats.c	/^static pthread_mutex_t glock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
glock	mfsmount/writedata.c	/^static pthread_mutex_t glock;$/;"	v	file:
goal	mfsmaster/chunks.c	/^	uint8_t goal;$/;"	m	struct:_flist	file:
goal	mfsmaster/chunks.c	/^	uint8_t goal;$/;"	m	struct:chunk	file:
goal	mfsmaster/filesystem.c	/^	uint8_t goal;$/;"	m	struct:_fsnode	file:
handle_error	mfscgi/cgiserv.py.in	/^	def handle_error(self):$/;"	m	class:ClientHandler
handle_read	mfscgi/cgiserv.py.in	/^	def handle_read(self):$/;"	m	class:ClientHandler
handle_write	mfscgi/cgiserv.py.in	/^	def handle_write(self):$/;"	m	class:ClientHandler
hashbucket	mfsmount/chunkloccache.c	/^} hashbucket;$/;"	t	typeref:struct:_hashbucket	file:
hashbucket	mfsmount/symlinkcache.c	/^} hashbucket;$/;"	t	typeref:struct:_hashbucket	file:
hashlock	mfschunkserver/hddspacemgr.c	/^static pthread_mutex_t hashlock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
hashsize	mfsmount/dirattrcache.c	/^	uint32_t hashsize;$/;"	m	struct:_dircache	file:
hashtab	mfschunkserver/hddspacemgr.c	/^static chunk* hashtab[HASHSIZE];$/;"	v	file:
hdd	mfscgi/mfs.cgi.in	/^		hdd = []$/;"	v
hdd_add_chunk	mfschunkserver/hddspacemgr.c	/^static inline void hdd_add_chunk(folder *f,const char *fullname,uint64_t chunkid,uint32_t version) {$/;"	f	file:
hdd_blockbuffer_free	mfschunkserver/hddspacemgr.c	/^void hdd_blockbuffer_free(void *addr) {$/;"	f
hdd_check_filename	mfschunkserver/hddspacemgr.c	/^static inline int hdd_check_filename(const char *fname,uint64_t *chunkid,uint32_t *version) {$/;"	f	file:
hdd_check_folders	mfschunkserver/hddspacemgr.c	/^void hdd_check_folders() {$/;"	f
hdd_check_version	mfschunkserver/hddspacemgr.c	/^int hdd_check_version(uint64_t chunkid,uint32_t version) {$/;"	f
hdd_chunk_create	mfschunkserver/hddspacemgr.c	/^static chunk* hdd_chunk_create(folder *f,uint64_t chunkid,uint32_t version) {$/;"	f	file:
hdd_chunk_delete	mfschunkserver/hddspacemgr.c	/^static void hdd_chunk_delete(chunk *c) {$/;"	f	file:
hdd_chunk_find	mfschunkserver/hddspacemgr.c	967;"	d	file:
hdd_chunk_get	mfschunkserver/hddspacemgr.c	/^static chunk* hdd_chunk_get(uint64_t chunkid,uint8_t cflag) {$/;"	f	file:
hdd_chunk_getattr	mfschunkserver/hddspacemgr.c	/^static int hdd_chunk_getattr(chunk *c) {$/;"	f	file:
hdd_chunk_release	mfschunkserver/hddspacemgr.c	/^static void hdd_chunk_release(chunk *c) {$/;"	f	file:
hdd_chunk_remove	mfschunkserver/hddspacemgr.c	/^static inline void hdd_chunk_remove(chunk *c) {$/;"	f	file:
hdd_chunk_testmove	mfschunkserver/hddspacemgr.c	/^static void hdd_chunk_testmove(chunk *c) {$/;"	f	file:
hdd_chunk_tryfind	mfschunkserver/hddspacemgr.c	/^static chunk* hdd_chunk_tryfind(uint64_t chunkid) {$/;"	f	file:
hdd_chunkop	mfschunkserver/hddspacemgr.c	/^int hdd_chunkop(uint64_t chunkid,uint32_t version,uint32_t newversion,uint64_t copychunkid,uint32_t copyversion,uint32_t length) {$/;"	f
hdd_close	mfschunkserver/hddspacemgr.c	/^int hdd_close(uint64_t chunkid) {$/;"	f
hdd_create	mfschunkserver/hddspacemgr.h	79;"	d
hdd_delayed_ops	mfschunkserver/hddspacemgr.c	/^void hdd_delayed_ops() {$/;"	f
hdd_delayed_thread	mfschunkserver/hddspacemgr.c	/^void* hdd_delayed_thread(void *arg) {$/;"	f
hdd_delete	mfschunkserver/hddspacemgr.h	78;"	d
hdd_diskinfo_movestats	mfschunkserver/hddspacemgr.c	/^void hdd_diskinfo_movestats(void) {$/;"	f
hdd_diskinfo_v1_data	mfschunkserver/hddspacemgr.c	/^void hdd_diskinfo_v1_data(uint8_t *buff) {$/;"	f
hdd_diskinfo_v1_size	mfschunkserver/hddspacemgr.c	/^uint32_t hdd_diskinfo_v1_size() {$/;"	f
hdd_diskinfo_v2_data	mfschunkserver/hddspacemgr.c	/^void hdd_diskinfo_v2_data(uint8_t *buff) {$/;"	f
hdd_diskinfo_v2_size	mfschunkserver/hddspacemgr.c	/^uint32_t hdd_diskinfo_v2_size() {$/;"	f
hdd_duplicate	mfschunkserver/hddspacemgr.h	83;"	d
hdd_duptrunc	mfschunkserver/hddspacemgr.h	84;"	d
hdd_error_occured	mfschunkserver/hddspacemgr.c	/^static inline void hdd_error_occured(chunk *c) {$/;"	f	file:
hdd_errorcounter	mfschunkserver/hddspacemgr.c	/^uint32_t hdd_errorcounter(void) {$/;"	f
hdd_folder_scan	mfschunkserver/hddspacemgr.c	/^void* hdd_folder_scan(void *arg) {$/;"	f
hdd_folders_thread	mfschunkserver/hddspacemgr.c	/^void* hdd_folders_thread(void *arg) {$/;"	f
hdd_get_blocks	mfschunkserver/hddspacemgr.c	/^int hdd_get_blocks(uint64_t chunkid,uint32_t version,uint16_t *blocks) {$/;"	f
hdd_get_checksum	mfschunkserver/hddspacemgr.c	/^int hdd_get_checksum(uint64_t chunkid,uint32_t version,uint32_t *checksum) {$/;"	f
hdd_get_checksum_tab	mfschunkserver/hddspacemgr.c	/^int hdd_get_checksum_tab(uint64_t chunkid,uint32_t version,uint8_t *checksum_tab) {$/;"	f
hdd_get_chunks_begin	mfschunkserver/hddspacemgr.c	/^void hdd_get_chunks_begin() {$/;"	f
hdd_get_chunks_end	mfschunkserver/hddspacemgr.c	/^void hdd_get_chunks_end() {$/;"	f
hdd_get_chunks_next_list_count	mfschunkserver/hddspacemgr.c	/^uint32_t hdd_get_chunks_next_list_count() {$/;"	f
hdd_get_chunks_next_list_data	mfschunkserver/hddspacemgr.c	/^void hdd_get_chunks_next_list_data(uint8_t *buff) {$/;"	f
hdd_get_chunks_pos	mfschunkserver/hddspacemgr.c	/^static uint32_t hdd_get_chunks_pos;$/;"	v	file:
hdd_get_damaged_chunk_count	mfschunkserver/hddspacemgr.c	/^uint32_t hdd_get_damaged_chunk_count(void) {$/;"	f
hdd_get_damaged_chunk_data	mfschunkserver/hddspacemgr.c	/^void hdd_get_damaged_chunk_data(uint8_t *buff) {$/;"	f
hdd_get_lost_chunk_count	mfschunkserver/hddspacemgr.c	/^uint32_t hdd_get_lost_chunk_count(void) {$/;"	f
hdd_get_lost_chunk_data	mfschunkserver/hddspacemgr.c	/^void hdd_get_lost_chunk_data(uint8_t *buff) {$/;"	f
hdd_get_space	mfschunkserver/hddspacemgr.c	/^void hdd_get_space(uint64_t *usedspace,uint64_t *totalspace,uint32_t *chunkcount,uint64_t *tdusedspace,uint64_t *tdtotalspace,uint32_t *tdchunkcount) {$/;"	f
hdd_getfolder	mfschunkserver/hddspacemgr.c	/^static inline folder* hdd_getfolder() {$/;"	f	file:
hdd_init	mfschunkserver/hddspacemgr.c	/^int hdd_init(void) {$/;"	f
hdd_int_create	mfschunkserver/hddspacemgr.c	/^static int hdd_int_create(uint64_t chunkid,uint32_t version) {$/;"	f	file:
hdd_int_delete	mfschunkserver/hddspacemgr.c	/^static int hdd_int_delete(uint64_t chunkid,uint32_t version) {$/;"	f	file:
hdd_int_duplicate	mfschunkserver/hddspacemgr.c	/^static int hdd_int_duplicate(uint64_t chunkid,uint32_t version,uint32_t newversion,uint64_t copychunkid,uint32_t copyversion) {$/;"	f	file:
hdd_int_duptrunc	mfschunkserver/hddspacemgr.c	/^static int hdd_int_duptrunc(uint64_t chunkid,uint32_t version,uint32_t newversion,uint64_t copychunkid,uint32_t copyversion,uint32_t length) {$/;"	f	file:
hdd_int_test	mfschunkserver/hddspacemgr.c	/^static int hdd_int_test(uint64_t chunkid,uint32_t version) {$/;"	f	file:
hdd_int_truncate	mfschunkserver/hddspacemgr.c	/^static int hdd_int_truncate(uint64_t chunkid,uint32_t version,uint32_t newversion,uint32_t length) {$/;"	f	file:
hdd_int_version	mfschunkserver/hddspacemgr.c	/^static int hdd_int_version(uint64_t chunkid,uint32_t version,uint32_t newversion) {$/;"	f	file:
hdd_io_begin	mfschunkserver/hddspacemgr.c	/^static int hdd_io_begin(chunk *c,int newflag) {$/;"	f	file:
hdd_io_end	mfschunkserver/hddspacemgr.c	/^static int hdd_io_end(chunk *c) {$/;"	f	file:
hdd_op_stats	mfschunkserver/hddspacemgr.c	/^void hdd_op_stats(uint32_t *op_create,uint32_t *op_delete,uint32_t *op_version,uint32_t *op_duplicate,uint32_t *op_truncate,uint32_t *op_duptrunc,uint32_t *op_test) {$/;"	f
hdd_open	mfschunkserver/hddspacemgr.c	/^int hdd_open(uint64_t chunkid) {$/;"	f
hdd_read	mfschunkserver/hddspacemgr.c	/^int hdd_read(uint64_t chunkid,uint32_t version,uint16_t blocknum,uint8_t *buffer,uint32_t offset,uint32_t size,uint8_t *crcbuff) {$/;"	f
hdd_refresh_usage	mfschunkserver/hddspacemgr.c	/^static inline void hdd_refresh_usage(folder *f) {$/;"	f	file:
hdd_report_damaged_chunk	mfschunkserver/hddspacemgr.c	/^void hdd_report_damaged_chunk(uint64_t chunkid) {$/;"	f
hdd_report_lost_chunk	mfschunkserver/hddspacemgr.c	/^void hdd_report_lost_chunk(uint64_t chunkid) {$/;"	f
hdd_spacechanged	mfschunkserver/hddspacemgr.c	/^int hdd_spacechanged(void) {$/;"	f
hdd_stats	mfschunkserver/hddspacemgr.c	/^void hdd_stats(uint32_t *br,uint32_t *bw,uint32_t *opr,uint32_t *opw,uint32_t *dbr,uint32_t *dbw,uint32_t *dopr,uint32_t *dopw,uint64_t *rtime,uint64_t *wtime) {$/;"	f
hdd_stats_add	mfschunkserver/hddspacemgr.c	/^static inline void hdd_stats_add(hddstats *dst,hddstats *src) {$/;"	f	file:
hdd_stats_binary_pack	mfschunkserver/hddspacemgr.c	/^static inline void hdd_stats_binary_pack(uint8_t **buff,hddstats *r) {$/;"	f	file:
hdd_stats_clear	mfschunkserver/hddspacemgr.c	/^static inline void hdd_stats_clear(hddstats *r) {$/;"	f	file:
hdd_stats_datafsync	mfschunkserver/hddspacemgr.c	/^static inline void hdd_stats_datafsync(folder *f,int64_t fsynctime) {$/;"	f	file:
hdd_stats_dataread	mfschunkserver/hddspacemgr.c	/^static inline void hdd_stats_dataread(folder *f,uint32_t size,int64_t rtime) {$/;"	f	file:
hdd_stats_datawrite	mfschunkserver/hddspacemgr.c	/^static inline void hdd_stats_datawrite(folder *f,uint32_t size,int64_t wtime) {$/;"	f	file:
hdd_stats_read	mfschunkserver/hddspacemgr.c	/^static inline void hdd_stats_read(uint32_t size) {$/;"	f	file:
hdd_stats_write	mfschunkserver/hddspacemgr.c	/^static inline void hdd_stats_write(uint32_t size) {$/;"	f	file:
hdd_term	mfschunkserver/hddspacemgr.c	/^void hdd_term(void) {$/;"	f
hdd_test	mfschunkserver/hddspacemgr.h	80;"	d
hdd_test_show_chunks	mfschunkserver/hddspacemgr.c	/^void hdd_test_show_chunks(void) {$/;"	f
hdd_test_show_openedchunks	mfschunkserver/hddspacemgr.c	/^void hdd_test_show_openedchunks(void) {$/;"	f
hdd_tester_thread	mfschunkserver/hddspacemgr.c	/^void* hdd_tester_thread(void* arg) {$/;"	f
hdd_testshuffle	mfschunkserver/hddspacemgr.c	/^void hdd_testshuffle(folder *f) {$/;"	f
hdd_truncate	mfschunkserver/hddspacemgr.h	82;"	d
hdd_version	mfschunkserver/hddspacemgr.h	81;"	d
hdd_write	mfschunkserver/hddspacemgr.c	/^int hdd_write(uint64_t chunkid,uint32_t version,uint16_t blocknum,const uint8_t *buffer,uint32_t offset,uint32_t size,const uint8_t *crcbuff) {$/;"	f
hddspacechanged	mfschunkserver/hddspacemgr.c	/^static int hddspacechanged=0;$/;"	v	file:
hddstats	mfschunkserver/hddspacemgr.c	/^typedef struct hddstats {$/;"	s	file:
hddstats	mfschunkserver/hddspacemgr.c	/^} hddstats;$/;"	t	typeref:struct:hddstats	file:
hdrbuff	mfschunkserver/csserv.c	/^	uint8_t hdrbuff[8];$/;"	m	struct:csserventry	file:
hdrbuff	mfschunkserver/masterconn.c	/^	uint8_t hdrbuff[8];$/;"	m	struct:masterconn	file:
hdrbuff	mfschunkserver/replicator.c	/^	uint8_t hdrbuff[8];$/;"	m	struct:_repsrc	file:
hdrbuff	mfsmaster/matoclserv.c	/^	uint8_t hdrbuff[8];$/;"	m	struct:matoclserventry	file:
hdrbuff	mfsmaster/matocsserv.c	/^	uint8_t hdrbuff[8];$/;"	m	struct:matocsserventry	file:
hdrbuff	mfsmaster/matomlserv.c	/^	uint8_t hdrbuff[8];$/;"	m	struct:matomlserventry	file:
hdrbuff	mfsmetalogger/masterconn.c	/^	uint8_t hdrbuff[8];$/;"	m	struct:masterconn	file:
hdrbufferkey	mfschunkserver/hddspacemgr.c	/^static pthread_key_t hdrbufferkey;$/;"	v	file:
head	mfscommon/pcqueue.c	/^	qentry *head,**tail;$/;"	m	struct:_queue	file:
head	mfsmount/dirattrcache.c	/^static dircache *head;$/;"	v	file:
header	mfscgi/chart.cgi.in	/^		header = myrecv(s,8)$/;"	v
header	mfscgi/mfs.cgi.in	/^					header = myrecv(s,8)$/;"	v
header	mfscgi/mfs.cgi.in	/^			header = myrecv(s,8)$/;"	v
header	mfscgi/mfs.cgi.in	/^		header = myrecv(s,8)$/;"	v
header	mfscgi/mfs.cgi.in	/^	header = myrecv(s,8)$/;"	v
heap	mfsmetarestore/merger.c	/^static hentry *heap;$/;"	v	file:
heapsize	mfsmetarestore/merger.c	/^static uint32_t heapsize;$/;"	v	file:
hentry	mfsmetarestore/merger.c	/^} hentry;$/;"	t	typeref:struct:_hentry	file:
hexdump	mfsmetadump/mfsmetadump.c	/^int hexdump(FILE *fd,uint64_t sleng) {$/;"	f
hinodes	mfsmaster/filesystem.c	/^	uint32_t sinodes,hinodes;$/;"	m	struct:_quotanode	file:
hlength	mfsmaster/filesystem.c	/^	uint64_t slength,hlength;$/;"	m	struct:_quotanode	file:
host	mfscgi/cgiserv.py.in	/^			host = val$/;"	v
host	mfscgi/cgiserv.py.in	/^	host = 'any'$/;"	v
host	mfscgi/chart.cgi.in	/^	host = ''$/;"	v
host	mfscgi/chart.cgi.in	/^	host = fields.getvalue("host")$/;"	v
host	mfscgi/mfs.cgi.in	/^						host = "(unresolved)"$/;"	v
host	mfscgi/mfs.cgi.in	/^						host = (socket.gethostbyaddr("%u.%u.%u.%u" % (ip1,ip2,ip3,ip4)))[0]$/;"	v
host	mfscgi/mfs.cgi.in	/^					host = " \/ "+(socket.gethostbyaddr(strip))[0]$/;"	v
host	mfscgi/mfs.cgi.in	/^					host = ""$/;"	v
host	mfscgi/mfs.cgi.in	/^					host = "(unresolved)"$/;"	v
host	mfscgi/mfs.cgi.in	/^					host = (socket.gethostbyaddr("%u.%u.%u.%u" % (ip1,ip2,ip3,ip4)))[0]$/;"	v
host	mfscgi/mfs.cgi.in	/^					host = (socket.gethostbyaddr(ipnum))[0]$/;"	v
hostip	mfscgi/mfs.cgi.in	/^			hostip = "%u.%u.%u.%u" % (ip1,ip2,ip3,ip4)$/;"	v
hostlist	mfscgi/mfs.cgi.in	/^		hostlist = []$/;"	v
hoststr	mfscgi/mfs.cgi.in	/^				hoststr = "(unresolved)"$/;"	v
hoststr	mfscgi/mfs.cgi.in	/^				hoststr = (socket.gethostbyaddr(hostip))[0]$/;"	v
hrealsize	mfsmaster/filesystem.c	/^	uint64_t srealsize,hrealsize;$/;"	m	struct:_quotanode	file:
hsize	mfsmaster/filesystem.c	/^	uint64_t ssize,hsize;$/;"	m	struct:_quotanode	file:
html_thsep	mfscgi/mfs.cgi.in	/^html_thsep = ''$/;"	v
htmlentities	mfscgi/mfs.cgi.in	/^def htmlentities(str):$/;"	f
humanize_number	mfscgi/mfs.cgi.in	/^def humanize_number(number,sep=''):$/;"	f
humode	mfsmount/mfstools.c	/^static uint8_t humode=0;$/;"	v	file:
i	mfscgi/mfs.cgi.in	/^				i = 1$/;"	v
i	mfscgi/mfs.cgi.in	/^			i = 1$/;"	v
i	mfscommon/random.c	/^static uint8_t i,j;$/;"	v	file:
ibuff	mfsmount/mastercomm.c	/^	uint8_t *ibuff;$/;"	m	struct:_threc	file:
ibuffsize	mfsmount/mastercomm.c	/^	uint32_t ibuffsize;$/;"	m	struct:_threc	file:
id	mfschunkserver/init.h	/^const char id[]="@(#) version: " STR(VERSMAJ) "." STR(VERSMID) "." STR(VERSMIN) ", written by Jakub Kruszona-Zawadzki";$/;"	v
id	mfscommon/pcqueue.c	/^	uint32_t id;$/;"	m	struct:_qentry	file:
id	mfsmaster/filesystem.c	/^	uint32_t id;$/;"	m	struct:_freenode	file:
id	mfsmaster/filesystem.c	/^	uint32_t id;$/;"	m	struct:_fsnode	file:
id	mfsmaster/init.h	/^const char id[]="@(#) version: " STR(VERSMAJ) "." STR(VERSMID) "." STR(VERSMIN) ", written by Jakub Kruszona-Zawadzki";$/;"	v
id	mfsmaster/itree.c	/^	uint32_t id;$/;"	m	struct:_itnode	file:
id	mfsmetadump/mfsmetadump.c	/^const char id[]="@(#) version: " STR(VERSMAJ) "." STR(VERSMID) "." STR(VERSMIN) ", written by Jakub Kruszona-Zawadzki";$/;"	v
id	mfsmetalogger/init.h	/^const char id[]="@(#) version: " STR(VERSMAJ) "." STR(VERSMID) "." STR(VERSMIN) ", written by Jakub Kruszona-Zawadzki";$/;"	v
id	mfsmetarestore/main.c	/^const char id[]="@(#) version: " STR(VERSMAJ) "." STR(VERSMID) "." STR(VERSMIN) ", written by Jakub Kruszona-Zawadzki";$/;"	v
id	mfsmount/main.c	/^const char id[]="@(#) version: " STR(VERSMAJ) "." STR(VERSMID) "." STR(VERSMIN) ", written by Jakub Kruszona-Zawadzki";$/;"	v
id	mfsmount/mfstools.c	/^const char id[]="@(#) version: " STR(VERSMAJ) "." STR(VERSMID) "." STR(VERSMIN) ", written by Jakub Kruszona-Zawadzki";$/;"	v
idataleng	mfsmount/mastercomm.c	/^	uint32_t idataleng;$/;"	m	struct:_threc	file:
idhash	mfsmount/writedata.c	/^static inodedata **idhash;$/;"	v	file:
ignoresignal	mfscommon/main.c	/^static int ignoresignal[]={$/;"	v	file:
index_files	mfscgi/cgiserv.py.in	/^	index_files = ['index.cgi','index.html']	# index files for directories$/;"	v	class:HTTP
indx	mfsmaster/chunks.c	/^	uint16_t indx;$/;"	m	struct:_flist	file:
indx	mfsmount/readdata.c	/^	uint32_t indx;			\/\/ this->locked$/;"	m	struct:_readrec	file:
inext	mfsmaster/datacachemgr.c	/^	uint32_t iprev,inext;$/;"	m	struct:_datacache_entry	file:
info	mfscgi/mfs.cgi.in	/^				info = data[pos:pos+ileng]$/;"	v
info	mfsmaster/matoclserv.c	/^	char *info;$/;"	m	struct:session	file:
info	mfsmount/mastercomm.c	/^	char *info;$/;"	m	struct:connect_args_t	file:
info_worker_th	mfsmount/writedata.c	/^static pthread_t info_worker_th;$/;"	v	file:
initialize	mfscommon/main.c	/^int initialize(void) {$/;"	f
inode	mfsmaster/chunks.c	/^	uint32_t inode;$/;"	m	struct:_flist	file:
inode	mfsmaster/datacachemgr.c	/^	uint32_t inode;$/;"	m	struct:_datacache_entry	file:
inode	mfsmaster/matoclserv.c	/^	uint32_t inode;		\/\/ inode$/;"	m	struct:chunklist	file:
inode	mfsmaster/matoclserv.c	/^	uint32_t inode;$/;"	m	struct:filelist	file:
inode	mfsmount/chunkloccache.c	/^	uint32_t inode[HASH_BUCKET_SIZE];$/;"	m	struct:_hashbucket	file:
inode	mfsmount/mastercomm.c	/^	uint32_t inode;$/;"	m	struct:_acquired_file	file:
inode	mfsmount/readdata.c	/^	uint32_t inode;			\/\/ this->locked$/;"	m	struct:_readrec	file:
inode	mfsmount/symlinkcache.c	/^	uint32_t inode[HASH_BUCKET_SIZE];$/;"	m	struct:_hashbucket	file:
inode	mfsmount/writedata.c	/^	uint32_t inode;$/;"	m	struct:inodedata_s	file:
inodedata	mfsmount/writedata.c	/^} inodedata;$/;"	t	typeref:struct:inodedata_s	file:
inodedata_s	mfsmount/writedata.c	/^typedef struct inodedata_s {$/;"	s	file:
inodehashtab	mfsmount/dirattrcache.c	/^	const uint8_t **inodehashtab;$/;"	m	struct:_dircache	file:
inodes	mfsmaster/filesystem.c	/^	uint32_t inodes;$/;"	m	struct:_statsrecord	file:
inputpacket	mfschunkserver/csserv.c	/^	packetstruct inputpacket;$/;"	m	struct:csserventry	file:
inputpacket	mfschunkserver/masterconn.c	/^	packetstruct inputpacket;$/;"	m	struct:masterconn	file:
inputpacket	mfsmaster/matoclserv.c	/^	packetstruct inputpacket;$/;"	m	struct:matoclserventry	file:
inputpacket	mfsmaster/matocsserv.c	/^	packetstruct inputpacket;$/;"	m	struct:matocsserventry	file:
inputpacket	mfsmaster/matomlserv.c	/^	packetstruct inputpacket;$/;"	m	struct:matomlserventry	file:
inputpacket	mfsmetalogger/masterconn.c	/^	packetstruct inputpacket;$/;"	m	struct:masterconn	file:
inqueue	mfsmount/writedata.c	/^	uint8_t inqueue;$/;"	m	struct:inodedata_s	file:
interrupted	mfsmaster/chunks.c	/^	unsigned interrupted:1;$/;"	m	struct:chunk	file:
ioerror	mfschunkserver/hddspacemgr.c	/^typedef struct ioerror {$/;"	s	file:
ioerror	mfschunkserver/hddspacemgr.c	/^} ioerror;$/;"	t	typeref:struct:ioerror	file:
ioretries	mfsmount/main.c	/^	unsigned ioretries;$/;"	m	struct:mfsopts	file:
ip	mfschunkserver/replicator.c	/^	uint32_t ip;$/;"	m	struct:_repsrc	file:
ip	mfsmaster/chunks.c	/^	uint32_t ip;$/;"	m	struct:locsort	file:
ip	mfsmount/csdb.c	/^	uint32_t ip;$/;"	m	struct:_csdbentry	file:
ip	mfsmount/readdata.c	/^	uint32_t ip;			\/\/ this->locked$/;"	m	struct:_readrec	file:
ip_port_cmp	mfsmount/mfstools.c	/^int ip_port_cmp(const void*a,const void*b) {$/;"	f
ipfrom	mfscgi/mfs.cgi.in	/^				ipfrom = "%d.%d.%d.%d" % (fip1,fip2,fip3,fip4)$/;"	v
ipnum	mfscgi/mfs.cgi.in	/^				ipnum = "%d.%d.%d.%d" % (ip1,ip2,ip3,ip4)$/;"	v
iprev	mfsmaster/datacachemgr.c	/^	uint32_t iprev,inext;$/;"	m	struct:_datacache_entry	file:
ipto	mfscgi/mfs.cgi.in	/^				ipto = "%d.%d.%d.%d" % (tip1,tip2,tip3,tip4)$/;"	v
is_cgi	mfscgi/cgiserv.py.in	/^	def is_cgi(self):$/;"	m	class:HTTP
itnode	mfsmaster/itree.c	/^} itnode;$/;"	t	typeref:struct:_itnode	file:
itree_add	mfsmaster/itree.c	/^static inline void itree_add(itnode **p,uint32_t f,uint32_t t,uint32_t id) {$/;"	f	file:
itree_add_interval	mfsmaster/itree.c	/^void* itree_add_interval(void *o,uint32_t f,uint32_t t,uint32_t id) {$/;"	f
itree_delete	mfsmaster/itree.c	/^static inline void itree_delete(itnode **p,uint32_t f,uint32_t t) {$/;"	f	file:
itree_find	mfsmaster/itree.c	/^uint32_t itree_find(void *o,uint32_t v) {$/;"	f
itree_free	mfsmaster/itree.c	/^static inline void itree_free(itnode *n) {$/;"	f	file:
itree_freeall	mfsmaster/itree.c	/^void itree_freeall(void *o) {$/;"	f
itree_rebalance	mfsmaster/itree.c	/^void* itree_rebalance(void *o) {$/;"	f
itree_remove	mfsmaster/itree.c	/^static inline void itree_remove(itnode **p) {$/;"	f	file:
itree_simplify	mfsmaster/itree.c	/^void itree_simplify(itnode *n) {$/;"	f
itree_tolist	mfsmaster/itree.c	/^itnode** itree_tolist(itnode *n,itnode **tail) {$/;"	f
itree_totree	mfsmaster/itree.c	/^void itree_totree(itnode *l,itnode **p) {$/;"	f
j	mfscommon/random.c	/^static uint8_t i,j;$/;"	v	file:
job	mfschunkserver/bgjobs.c	/^} job;$/;"	t	typeref:struct:_job	file:
job_chunkop	mfschunkserver/bgjobs.c	/^uint32_t job_chunkop(void *jpool,void (*callback)(uint8_t status,void *extra),void *extra,uint64_t chunkid,uint32_t version,uint32_t newversion,uint64_t copychunkid,uint32_t copyversion,uint32_t length) {$/;"	f
job_close	mfschunkserver/bgjobs.c	/^uint32_t job_close(void *jpool,void (*callback)(uint8_t status,void *extra),void *extra,uint64_t chunkid) {$/;"	f
job_create	mfschunkserver/bgjobs.h	37;"	d
job_delete	mfschunkserver/bgjobs.h	36;"	d
job_duplicate	mfschunkserver/bgjobs.h	41;"	d
job_duptrunc	mfschunkserver/bgjobs.h	42;"	d
job_info	mfsmaster/chunks.c	/^} job_info;$/;"	t	typeref:struct:_job_info	file:
job_inval	mfschunkserver/bgjobs.c	/^uint32_t job_inval(void *jpool,void (*callback)(uint8_t status,void *extra),void *extra) {$/;"	f
job_new	mfschunkserver/bgjobs.c	/^static inline uint32_t job_new(jobpool *jp,uint32_t op,void *args,void (*callback)(uint8_t status,void *extra),void *extra) {$/;"	f	file:
job_open	mfschunkserver/bgjobs.c	/^uint32_t job_open(void *jpool,void (*callback)(uint8_t status,void *extra),void *extra,uint64_t chunkid) {$/;"	f
job_pool_change_callback	mfschunkserver/bgjobs.c	/^void job_pool_change_callback(void *jpool,uint32_t jobid,void (*callback)(uint8_t status,void *extra),void *extra) {$/;"	f
job_pool_check_jobs	mfschunkserver/bgjobs.c	/^void job_pool_check_jobs(void *jpool) {$/;"	f
job_pool_delete	mfschunkserver/bgjobs.c	/^void job_pool_delete(void *jpool) {$/;"	f
job_pool_disable_and_change_callback_all	mfschunkserver/bgjobs.c	/^void job_pool_disable_and_change_callback_all(void *jpool,void (*callback)(uint8_t status,void *extra)) {$/;"	f
job_pool_disable_job	mfschunkserver/bgjobs.c	/^void job_pool_disable_job(void *jpool,uint32_t jobid) {$/;"	f
job_pool_jobs_count	mfschunkserver/bgjobs.c	/^uint32_t job_pool_jobs_count(void *jpool) {$/;"	f
job_pool_new	mfschunkserver/bgjobs.c	/^void* job_pool_new(uint8_t workers,uint32_t jobs,int *wakeupdesc) {$/;"	f
job_read	mfschunkserver/bgjobs.c	/^uint32_t job_read(void *jpool,void (*callback)(uint8_t status,void *extra),void *extra,uint64_t chunkid,uint32_t version,uint16_t blocknum,uint8_t *buffer,uint32_t offset,uint32_t size,uint8_t *crcbuff) {$/;"	f
job_receive_status	mfschunkserver/bgjobs.c	/^static inline int job_receive_status(jobpool *jp,uint32_t *jobid,uint8_t *status) {$/;"	f	file:
job_replicate	mfschunkserver/bgjobs.c	/^uint32_t job_replicate(void *jpool,void (*callback)(uint8_t status,void *extra),void *extra,uint64_t chunkid,uint32_t version,uint8_t srccnt,const uint8_t *srcs) {$/;"	f
job_replicate_simple	mfschunkserver/bgjobs.c	/^uint32_t job_replicate_simple(void *jpool,void (*callback)(uint8_t status,void *extra),void *extra,uint64_t chunkid,uint32_t version,uint32_t ip,uint16_t port) {$/;"	f
job_send_status	mfschunkserver/bgjobs.c	/^static inline void job_send_status(jobpool *jp,uint32_t jobid,uint8_t status) {$/;"	f	file:
job_test	mfschunkserver/bgjobs.h	38;"	d
job_truncate	mfschunkserver/bgjobs.h	40;"	d
job_version	mfschunkserver/bgjobs.h	39;"	d
job_worker	mfschunkserver/bgjobs.c	/^void* job_worker(void *th_arg) {$/;"	f
job_write	mfschunkserver/bgjobs.c	/^uint32_t job_write(void *jpool,void (*callback)(uint8_t status,void *extra),void *extra,uint64_t chunkid,uint32_t version,uint16_t blocknum,const uint8_t *buffer,uint32_t offset,uint32_t size,const uint8_t *crcbuff) {$/;"	f
jobfd	mfschunkserver/csserv.c	/^static int jobfd;$/;"	v	file:
jobfd	mfschunkserver/masterconn.c	/^static int jobfd;$/;"	v	file:
jobfdpdescpos	mfschunkserver/csserv.c	/^static int32_t jobfdpdescpos;$/;"	v	file:
jobfdpdescpos	mfschunkserver/masterconn.c	/^static int32_t jobfdpdescpos;$/;"	v	file:
jobhash	mfschunkserver/bgjobs.c	/^	job* jobhash[JHASHSIZE];$/;"	m	struct:_jobpool	file:
jobid	mfschunkserver/bgjobs.c	/^	uint32_t jobid;$/;"	m	struct:_job	file:
jobpool	mfschunkserver/bgjobs.c	/^} jobpool;$/;"	t	typeref:struct:_jobpool	file:
jobqueue	mfschunkserver/bgjobs.c	/^	void *jobqueue;$/;"	m	struct:_jobpool	file:
jobshpos	mfsmaster/chunks.c	/^static uint32_t jobshpos;$/;"	v	file:
jobslock	mfschunkserver/bgjobs.c	/^	pthread_mutex_t jobslock;$/;"	m	struct:_jobpool	file:
jobsnorepbefore	mfsmaster/chunks.c	/^static uint32_t jobsnorepbefore;$/;"	v	file:
jobsrebalancecount	mfsmaster/chunks.c	/^static uint32_t jobsrebalancecount;$/;"	v	file:
jpool	mfschunkserver/csserv.c	/^static void *jpool;$/;"	v	file:
jpool	mfschunkserver/masterconn.c	/^static void *jpool;$/;"	v	file:
jqueue	mfsmount/writedata.c	/^static void *jqueue,*dqueue;$/;"	v	file:
jstate	mfschunkserver/bgjobs.c	/^	uint8_t jstate;$/;"	m	struct:_job	file:
keep_cache	mfsmount/mfs_fuse.c	/^static int keep_cache = 0;$/;"	v	file:
keepcache	mfsmount/main.c	/^	int keepcache;$/;"	m	struct:mfsopts	file:
last	mfscgi/mfs.cgi.in	/^		last = "L%s" % last$/;"	v
last	mfscgi/mfs.cgi.in	/^		last="S"$/;"	v
last	mfscgi/mfs.cgi.in	/^		last="U"$/;"	v
last	mfscgi/mfs.cgi.in	/^last="U"$/;"	v
lastchunkid	mfsmaster/chunks.c	/^static uint64_t lastchunkid=0;$/;"	v	file:
lastchunkptr	mfsmaster/chunks.c	/^static chunk* lastchunkptr=NULL;$/;"	v	file:
lasterrindx	mfschunkserver/hddspacemgr.c	/^	uint32_t lasterrindx;$/;"	m	struct:folder	file:
lasterrtab	mfschunkserver/hddspacemgr.c	/^	ioerror lasterrtab[LASTERRSIZE];$/;"	m	struct:folder	file:
lastfn	mfsmetarestore/restore.c	/^static const char *lastfn;$/;"	v	file:
lasthouropstats	mfsmaster/matoclserv.c	/^	uint32_t lasthouropstats[SESSION_STATS];$/;"	m	struct:session	file:
lastread	mfschunkserver/masterconn.c	/^	uint32_t lastread,lastwrite;$/;"	m	struct:masterconn	file:
lastread	mfsmaster/matoclserv.c	/^	uint32_t lastread,lastwrite;		\/\/time of last activity$/;"	m	struct:matoclserventry	file:
lastread	mfsmaster/matocsserv.c	/^	uint32_t lastread,lastwrite;$/;"	m	struct:matocsserventry	file:
lastread	mfsmaster/matomlserv.c	/^	uint32_t lastread,lastwrite;$/;"	m	struct:matomlserventry	file:
lastread	mfsmetalogger/masterconn.c	/^	uint32_t lastread,lastwrite;$/;"	m	struct:masterconn	file:
lastrefresh	mfschunkserver/hddspacemgr.c	/^	uint32_t lastrefresh;$/;"	m	struct:folder	file:
lastv	mfsmetarestore/restore.c	/^static uint64_t v=0,lastv=0;$/;"	v	file:
lastwrite	mfschunkserver/masterconn.c	/^	uint32_t lastread,lastwrite;$/;"	m	struct:masterconn	file:
lastwrite	mfsmaster/matoclserv.c	/^	uint32_t lastread,lastwrite;		\/\/time of last activity$/;"	m	struct:matoclserventry	file:
lastwrite	mfsmaster/matocsserv.c	/^	uint32_t lastread,lastwrite;$/;"	m	struct:matocsserventry	file:
lastwrite	mfsmaster/matomlserv.c	/^	uint32_t lastread,lastwrite;$/;"	m	struct:matomlserventry	file:
lastwrite	mfsmetalogger/masterconn.c	/^	uint32_t lastread,lastwrite;$/;"	m	struct:masterconn	file:
lastwrite	mfsmount/mastercomm.c	/^static time_t lastwrite;$/;"	v	file:
lcnt	mfsmount/writedata.c	/^	uint16_t lcnt;$/;"	m	struct:inodedata_s	file:
leavefree	mfschunkserver/hddspacemgr.c	/^	uint64_t leavefree;$/;"	m	struct:folder	file:
left	mfsmaster/filesystem.c	/^	struct _bstnode *left,*right;$/;"	m	struct:_bstnode	typeref:struct:_bstnode::_bstnode	file:
left	mfsmaster/itree.c	/^	struct _itnode *left,*right;$/;"	m	struct:_itnode	typeref:struct:_itnode::_itnode	file:
leng	mfscommon/pcqueue.c	/^	uint32_t leng;$/;"	m	struct:_qentry	file:
leng	mfsmount/mfs_fuse.c	/^	uint32_t leng;$/;"	m	struct:_sinfo	file:
length	mfschunkserver/bgjobs.c	/^	uint32_t length;$/;"	m	struct:_chunk_op_args	file:
length	mfsmaster/filesystem.c	/^			uint64_t length;$/;"	m	struct:_fsnode::_data::_fdata	file:
length	mfsmaster/filesystem.c	/^	uint64_t length;$/;"	m	struct:_statsrecord	file:
lerror	mfscgi/mfs.cgi.in	/^					lerror = 'no errors'$/;"	v
lnghalfhour	mfscommon/charts.c	/^static uint32_t lnghalfhour,lngmday,lngmonth,lngyear;$/;"	v	file:
lngmday	mfscommon/charts.c	/^static uint32_t lnghalfhour,lngmday,lngmonth,lngyear;$/;"	v	file:
lngmonth	mfscommon/charts.c	/^static uint32_t lnghalfhour,lngmday,lngmonth,lngyear;$/;"	v	file:
lngyear	mfscommon/charts.c	/^static uint32_t lnghalfhour,lngmday,lngmonth,lngyear;$/;"	v	file:
lock	mfscommon/pcqueue.c	/^	pthread_mutex_t lock;$/;"	m	struct:_queue	file:
lock	mfsmount/mfs_fuse.c	/^	pthread_mutex_t lock;$/;"	m	struct:_dirbuf	file:
lock	mfsmount/mfs_fuse.c	/^	pthread_mutex_t lock;$/;"	m	struct:_finfo	file:
lock	mfsmount/mfs_fuse.c	/^	pthread_mutex_t lock;$/;"	m	struct:_sinfo	file:
lock	mfsmount/mfs_meta_fuse.c	/^	pthread_mutex_t lock;$/;"	m	struct:_dirbuf	file:
lock	mfsmount/mfs_meta_fuse.c	/^	pthread_mutex_t lock;$/;"	m	struct:_pathbuf	file:
locked	mfsmount/readdata.c	/^	uint8_t locked;			\/\/ glock$/;"	m	struct:_readrec	file:
lockedto	mfsmaster/chunks.c	/^	uint32_t lockedto;$/;"	m	struct:chunk	file:
lockfname	mfscgi/cgiserv.py.in	/^	lockfname = datapath + os.path.sep + '.mfscgiserv.lock'$/;"	v
lockinode	mfschunkserver/hddspacemgr.c	/^	ino_t lockinode;$/;"	m	struct:folder	file:
locktimeout	mfscgi/cgiserv.py.in	/^			locktimeout = int(val)$/;"	v
locktimeout	mfscgi/cgiserv.py.in	/^	locktimeout = 60$/;"	v
locsort	mfsmaster/chunks.c	/^typedef struct locsort {$/;"	s	file:
locsort	mfsmaster/chunks.c	/^} locsort;$/;"	t	typeref:struct:locsort	file:
log	mfscgi/cgiserv.py.in	/^	def log(self,code):$/;"	m	class:HTTP
logfd	mfschunkserver/masterconn.c	/^static FILE *logfd;$/;"	v	file:
logfd	mfsmetalogger/masterconn.c	/^	FILE *logfd;	\/\/ using stdio because this is text file$/;"	m	struct:masterconn	file:
logging	mfscgi/cgiserv.py.in	/^	logging = True					# print logging info for each request ?$/;"	v	class:HTTP
logundefined	mfscommon/cfg.c	/^static int logundefined=0;$/;"	v	file:
loop	mfscgi/cgiserv.py.in	/^def loop(server,handler,timeout=30):$/;"	f
loop_info	mfsmaster/chunks.c	/^} loop_info;$/;"	t	typeref:struct:_loop_info	file:
lostchunk	mfschunkserver/hddspacemgr.c	/^typedef struct lostchunk {$/;"	s	file:
lostchunk	mfschunkserver/hddspacemgr.c	/^} lostchunk;$/;"	t	typeref:struct:lostchunk	file:
lostchunks	mfschunkserver/hddspacemgr.c	/^static lostchunk *lostchunks=NULL;$/;"	v	file:
lrunext	mfsmaster/datacachemgr.c	/^	uint32_t lruprev,lrunext;$/;"	m	struct:_datacache_entry	file:
lruprev	mfsmaster/datacachemgr.c	/^	uint32_t lruprev,lrunext;$/;"	m	struct:_datacache_entry	file:
lsock	mfschunkserver/csserv.c	/^static int lsock;$/;"	v	file:
lsock	mfsmaster/matoclserv.c	/^static int lsock;$/;"	v	file:
lsock	mfsmaster/matocsserv.c	/^static int lsock;$/;"	v	file:
lsock	mfsmaster/matomlserv.c	/^static int lsock;$/;"	v	file:
lsock	mfsmount/masterproxy.c	/^static int lsock = -1;$/;"	v	file:
lsockpdescpos	mfschunkserver/csserv.c	/^static int32_t lsockpdescpos;$/;"	v	file:
lsockpdescpos	mfsmaster/matoclserv.c	/^static int32_t lsockpdescpos;$/;"	v	file:
lsockpdescpos	mfsmaster/matocsserv.c	/^static int32_t lsockpdescpos;$/;"	v	file:
lsockpdescpos	mfsmaster/matomlserv.c	/^static int32_t lsockpdescpos;$/;"	v	file:
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	config.guess	/^main ()$/;"	f
main	mfscommon/main.c	/^int main(int argc,char **argv) {$/;"	f
main	mfsmetadump/mfsmetadump.c	/^int main(int argc,char **argv) {$/;"	f
main	mfsmetarestore/main.c	/^int main(int argc,char **argv) {$/;"	f
main	mfsmount/main.c	/^int main(int argc, char *argv[]) {$/;"	f
main	mfsmount/mfstools.c	/^int main(int argc,char **argv) {$/;"	f
main_canexitregister	mfscommon/main.c	/^void main_canexitregister (int (*fun)(void)) {$/;"	f
main_destructregister	mfscommon/main.c	/^void main_destructregister (void (*fun)(void)) {$/;"	f
main_eachloopregister	mfscommon/main.c	/^void main_eachloopregister (void (*fun)(void)) {$/;"	f
main_pollregister	mfscommon/main.c	/^void main_pollregister (void (*desc)(struct pollfd *,uint32_t *),void (*serve)(struct pollfd *)) {$/;"	f
main_reloadregister	mfscommon/main.c	/^void main_reloadregister (void (*fun)(void)) {$/;"	f
main_time	mfscommon/main.c	/^uint32_t main_time() {$/;"	f
main_timeregister	mfscommon/main.c	/^void main_timeregister (int mode,uint32_t seconds,uint32_t offset,void (*fun)(void)) {$/;"	f
main_utime	mfscommon/main.c	/^uint64_t main_utime() {$/;"	f
main_wantexitregister	mfscommon/main.c	/^void main_wantexitregister (void (*fun)(void)) {$/;"	f
mainloop	mfscommon/main.c	/^void mainloop() {$/;"	f
mainloop	mfsmount/main.c	/^int mainloop(struct fuse_args *args,const char* mp,int mt,int fg) {$/;"	f
make_cgi_env	mfscgi/cgiserv.py.in	/^	def make_cgi_env(self):$/;"	m	class:HTTP
make_fsname	mfsmount/main.c	/^void make_fsname(struct fuse_args *args) {$/;"	f
make_response	mfscgi/cgiserv.py.in	/^	def make_response(self):$/;"	m	class:ClientHandler
make_response	mfscgi/cgiserv.py.in	/^	def make_response(self):$/;"	m	class:HTTP
make_snapshot	mfsmount/mfstools.c	/^int make_snapshot(const char *dstdir,const char *dstbase,const char *srcname,uint32_t srcinode,uint8_t canoverwrite) {$/;"	f
makedaemon	mfscommon/main.c	/^void makedaemon() {$/;"	f
managed	mfscgi/cgiserv.py.in	/^	def managed(self):$/;"	m	class:HTTP
mapallgid	mfscgi/mfs.cgi.in	/^					mapallgid = 0$/;"	v
mapallgid	mfsmaster/exports.c	/^	uint32_t mapallgid;$/;"	m	struct:_exports	file:
mapallgid	mfsmaster/matoclserv.c	/^	uint32_t mapallgid;$/;"	m	struct:session	file:
mapalluid	mfscgi/mfs.cgi.in	/^					mapalluid = 0$/;"	v
mapalluid	mfsmaster/exports.c	/^	uint32_t mapalluid;$/;"	m	struct:_exports	file:
mapalluid	mfsmaster/matoclserv.c	/^	uint32_t mapalluid;$/;"	m	struct:session	file:
mapnext	mfsmount/readdata.c	/^	struct _readrec *mapnext;	\/\/ glock$/;"	m	struct:_readrec	typeref:struct:_readrec::_readrec	file:
massert	mfscommon/massert.h	28;"	d
master_register	mfsmount/mfstools.c	/^int master_register(int rfd,uint32_t cuid) {$/;"	f
master_register_old	mfsmount/mfstools.c	/^int master_register_old(int rfd) {$/;"	f
master_stats_add	mfsmount/mastercomm.c	/^void master_stats_add(uint8_t id,uint64_t s) {$/;"	f
master_stats_inc	mfsmount/mastercomm.c	/^void master_stats_inc(uint8_t id) {$/;"	f
master_statsptr_init	mfsmount/mastercomm.c	/^void master_statsptr_init(void) {$/;"	f
masteraddrvalid	mfschunkserver/masterconn.c	/^	uint8_t masteraddrvalid;$/;"	m	struct:masterconn	file:
masteraddrvalid	mfsmetalogger/masterconn.c	/^	uint8_t masteraddrvalid;$/;"	m	struct:masterconn	file:
masterconn	mfschunkserver/masterconn.c	/^typedef struct masterconn {$/;"	s	file:
masterconn	mfschunkserver/masterconn.c	/^} masterconn;$/;"	t	typeref:struct:masterconn	file:
masterconn	mfsmetalogger/masterconn.c	/^typedef struct masterconn {$/;"	s	file:
masterconn	mfsmetalogger/masterconn.c	/^} masterconn;$/;"	t	typeref:struct:masterconn	file:
masterconn_attach_packet	mfschunkserver/masterconn.c	/^void masterconn_attach_packet(masterconn *eptr,void *packet) {$/;"	f
masterconn_beforeclose	mfsmetalogger/masterconn.c	/^void masterconn_beforeclose(masterconn *eptr) {$/;"	f
masterconn_check_hdd_reports	mfschunkserver/masterconn.c	/^void masterconn_check_hdd_reports() {$/;"	f
masterconn_chunk_checksum	mfschunkserver/masterconn.c	/^void masterconn_chunk_checksum(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_chunk_checksum_tab	mfschunkserver/masterconn.c	/^void masterconn_chunk_checksum_tab(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_chunkop	mfschunkserver/masterconn.c	/^void masterconn_chunkop(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_chunkopfinished	mfschunkserver/masterconn.c	/^void masterconn_chunkopfinished(uint8_t status,void *packet) {$/;"	f
masterconn_connected	mfschunkserver/masterconn.c	/^void masterconn_connected(masterconn *eptr) {$/;"	f
masterconn_connected	mfsmetalogger/masterconn.c	/^void masterconn_connected(masterconn *eptr) {$/;"	f
masterconn_connecttest	mfschunkserver/masterconn.c	/^void masterconn_connecttest(masterconn *eptr) {$/;"	f
masterconn_connecttest	mfsmetalogger/masterconn.c	/^void masterconn_connecttest(masterconn *eptr) {$/;"	f
masterconn_create	mfschunkserver/masterconn.c	/^void masterconn_create(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_create_attached_packet	mfschunkserver/masterconn.c	/^uint8_t* masterconn_create_attached_packet(masterconn *eptr,uint32_t type,uint32_t size) {$/;"	f
masterconn_create_detached_packet	mfschunkserver/masterconn.c	/^void* masterconn_create_detached_packet(uint32_t type,uint32_t size) {$/;"	f
masterconn_createpacket	mfsmetalogger/masterconn.c	/^uint8_t* masterconn_createpacket(masterconn *eptr,uint32_t type,uint32_t size) {$/;"	f
masterconn_delete	mfschunkserver/masterconn.c	/^void masterconn_delete(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_delete_packet	mfschunkserver/masterconn.c	/^void masterconn_delete_packet(void *packet) {$/;"	f
masterconn_desc	mfschunkserver/masterconn.c	/^void masterconn_desc(struct pollfd *pdesc,uint32_t *ndesc) {$/;"	f
masterconn_desc	mfsmetalogger/masterconn.c	/^void masterconn_desc(struct pollfd *pdesc,uint32_t *ndesc) {$/;"	f
masterconn_download_data	mfsmetalogger/masterconn.c	/^void masterconn_download_data(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_download_end	mfsmetalogger/masterconn.c	/^int masterconn_download_end(masterconn *eptr) {$/;"	f
masterconn_download_init	mfsmetalogger/masterconn.c	/^void masterconn_download_init(masterconn *eptr,uint8_t filenum) {$/;"	f
masterconn_download_next	mfsmetalogger/masterconn.c	/^void masterconn_download_next(masterconn *eptr) {$/;"	f
masterconn_download_start	mfsmetalogger/masterconn.c	/^void masterconn_download_start(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_duplicate	mfschunkserver/masterconn.c	/^void masterconn_duplicate(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_duptrunc	mfschunkserver/masterconn.c	/^void masterconn_duptrunc(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_get_packet_data	mfschunkserver/masterconn.c	/^uint8_t* masterconn_get_packet_data(void *packet) {$/;"	f
masterconn_gotpacket	mfschunkserver/masterconn.c	/^void masterconn_gotpacket(masterconn *eptr,uint32_t type,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_gotpacket	mfsmetalogger/masterconn.c	/^void masterconn_gotpacket(masterconn *eptr,uint32_t type,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_init	mfschunkserver/masterconn.c	/^int masterconn_init(void) {$/;"	f
masterconn_init	mfsmetalogger/masterconn.c	/^int masterconn_init(void) {$/;"	f
masterconn_initconnect	mfschunkserver/masterconn.c	/^int masterconn_initconnect(masterconn *eptr) {$/;"	f
masterconn_initconnect	mfsmetalogger/masterconn.c	/^int masterconn_initconnect(masterconn *eptr) {$/;"	f
masterconn_jobfinished	mfschunkserver/masterconn.c	/^void masterconn_jobfinished(uint8_t status,void *packet) {$/;"	f
masterconn_metachanges_flush	mfsmetalogger/masterconn.c	/^void masterconn_metachanges_flush(void) {$/;"	f
masterconn_metachanges_log	mfsmetalogger/masterconn.c	/^void masterconn_metachanges_log(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_metadownloadinit	mfsmetalogger/masterconn.c	/^void masterconn_metadownloadinit(void) {$/;"	f
masterconn_read	mfschunkserver/masterconn.c	/^void masterconn_read(masterconn *eptr) {$/;"	f
masterconn_read	mfsmetalogger/masterconn.c	/^void masterconn_read(masterconn *eptr) {$/;"	f
masterconn_reconnect	mfschunkserver/masterconn.c	/^void masterconn_reconnect(void) {$/;"	f
masterconn_reconnect	mfsmetalogger/masterconn.c	/^void masterconn_reconnect(void) {$/;"	f
masterconn_reload	mfschunkserver/masterconn.c	/^void masterconn_reload(void) {$/;"	f
masterconn_reload	mfsmetalogger/masterconn.c	/^void masterconn_reload(void) {$/;"	f
masterconn_replicate	mfschunkserver/masterconn.c	/^void masterconn_replicate(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_replicationfinished	mfschunkserver/masterconn.c	/^void masterconn_replicationfinished(uint8_t status,void *packet) {$/;"	f
masterconn_sendregister	mfschunkserver/masterconn.c	/^void masterconn_sendregister(masterconn *eptr) {$/;"	f
masterconn_sendregister	mfsmetalogger/masterconn.c	/^void masterconn_sendregister(masterconn *eptr) {$/;"	f
masterconn_serve	mfschunkserver/masterconn.c	/^void masterconn_serve(struct pollfd *pdesc) {$/;"	f
masterconn_serve	mfsmetalogger/masterconn.c	/^void masterconn_serve(struct pollfd *pdesc) {$/;"	f
masterconn_sessionsdownloadinit	mfsmetalogger/masterconn.c	/^void masterconn_sessionsdownloadinit(void) {$/;"	f
masterconn_setversion	mfschunkserver/masterconn.c	/^void masterconn_setversion(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_stats	mfschunkserver/masterconn.c	/^void masterconn_stats(uint32_t *bin,uint32_t *bout,uint32_t *maxjobscnt) {$/;"	f
masterconn_stats	mfsmetalogger/masterconn.c	/^void masterconn_stats(uint32_t *bin,uint32_t *bout) {$/;"	f
masterconn_structure_log	mfschunkserver/masterconn.c	/^void masterconn_structure_log(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_structure_log_rotate	mfschunkserver/masterconn.c	/^void masterconn_structure_log_rotate(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_term	mfschunkserver/masterconn.c	/^void masterconn_term(void) {$/;"	f
masterconn_term	mfsmetalogger/masterconn.c	/^void masterconn_term(void) {$/;"	f
masterconn_truncate	mfschunkserver/masterconn.c	/^void masterconn_truncate(masterconn *eptr,const uint8_t *data,uint32_t length) {$/;"	f
masterconn_unwantedjobfinished	mfschunkserver/masterconn.c	/^void masterconn_unwantedjobfinished(uint8_t status,void *packet) {$/;"	f
masterconn_write	mfschunkserver/masterconn.c	/^void masterconn_write(masterconn *eptr) {$/;"	f
masterconn_write	mfsmetalogger/masterconn.c	/^void masterconn_write(masterconn *eptr) {$/;"	f
masterconnsingleton	mfschunkserver/masterconn.c	/^static masterconn *masterconnsingleton=NULL;$/;"	v	file:
masterconnsingleton	mfsmetalogger/masterconn.c	/^static masterconn *masterconnsingleton=NULL;$/;"	v	file:
masterhost	mfscgi/mfs.cgi.in	/^		masterhost = '127.0.0.1'$/;"	v
masterhost	mfscgi/mfs.cgi.in	/^		masterhost = fields.getvalue("masterhost")$/;"	v
masterhost	mfscgi/mfs.cgi.in	/^	masterhost = '127.0.0.1'$/;"	v
masterhost	mfsmount/main.c	/^	char *masterhost;$/;"	m	struct:mfsopts	file:
masterhostname	mfsmount/mastercomm.c	/^	char *masterhostname;$/;"	m	struct:connect_args_t	file:
masterinfoattr	mfsmount/mfs_fuse.c	/^static uint8_t masterinfoattr[35]={'f', 0x01,0x24, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1, 0,0,0,0,0,0,0,10};$/;"	v	file:
masterinfoattr	mfsmount/mfs_fuse.c	/^static uint8_t masterinfoattr[35]={'f', 0x01,0x24, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1, 0,0,0,0,0,0,0,14};$/;"	v	file:
masterinfoattr	mfsmount/mfs_meta_fuse.c	/^static uint8_t masterinfoattr[35]={'f', 0x01,0x24, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1, 0,0,0,0,0,0,0,10};$/;"	v	file:
masterinfoattr	mfsmount/mfs_meta_fuse.c	/^static uint8_t masterinfoattr[35]={'f', 0x01,0x24, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1, 0,0,0,0,0,0,0,14};$/;"	v	file:
masterip	mfschunkserver/masterconn.c	/^	uint32_t masterip;$/;"	m	struct:masterconn	file:
masterip	mfsmetalogger/masterconn.c	/^	uint32_t masterip;$/;"	m	struct:masterconn	file:
masterip	mfsmount/mastercomm.c	/^static uint32_t masterip=0;$/;"	v	file:
mastername	mfscgi/mfs.cgi.in	/^		mastername = 'MooseFS'$/;"	v
mastername	mfscgi/mfs.cgi.in	/^		mastername = fields.getvalue("mastername")$/;"	v
mastername	mfscgi/mfs.cgi.in	/^	mastername = 'MooseFS'$/;"	v
masterport	mfscgi/mfs.cgi.in	/^	masterport = 9421$/;"	v
masterport	mfscgi/mfs.cgi.in	/^	masterport = int(fields.getvalue("masterport"))$/;"	v
masterport	mfschunkserver/masterconn.c	/^	uint16_t masterport;$/;"	m	struct:masterconn	file:
masterport	mfsmetalogger/masterconn.c	/^	uint16_t masterport;$/;"	m	struct:masterconn	file:
masterport	mfsmount/main.c	/^	char *masterport;$/;"	m	struct:mfsopts	file:
masterport	mfsmount/mastercomm.c	/^static uint16_t masterport=0;$/;"	v	file:
masterportname	mfsmount/mastercomm.c	/^	char *masterportname;$/;"	m	struct:connect_args_t	file:
masterproxy_acceptor	mfsmount/masterproxy.c	/^static void* masterproxy_acceptor(void *args) {$/;"	f	file:
masterproxy_getlocation	mfsmount/masterproxy.c	/^void masterproxy_getlocation(uint8_t *masterinfo) {$/;"	f
masterproxy_init	mfsmount/masterproxy.c	/^int masterproxy_init(void) {$/;"	f
masterproxy_server	mfsmount/masterproxy.c	/^static void* masterproxy_server(void *args) {$/;"	f	file:
masterproxy_term	mfsmount/masterproxy.c	/^void masterproxy_term(void) {$/;"	f
masterstrip	mfsmount/mastercomm.c	/^static char masterstrip[17];$/;"	v	file:
masterversion	mfscgi/mfs.cgi.in	/^			masterversion = (1,4,0)$/;"	v
masterversion	mfscgi/mfs.cgi.in	/^			masterversion = (1,5,0)$/;"	v
masterversion	mfscgi/mfs.cgi.in	/^			masterversion = struct.unpack(">HBB",data[:4])$/;"	v
masterversion	mfscgi/mfs.cgi.in	/^masterversion = (0,0,0)$/;"	v
masterversion	mfsmount/mastercomm.c	/^static uint32_t masterversion;$/;"	v	file:
masterversion	mfsmount/mfstools.c	/^static uint32_t masterversion = 0;$/;"	v	file:
matocl_beforedisconnect	mfsmaster/matoclserv.c	/^void matocl_beforedisconnect(matoclserventry *eptr) {$/;"	f
matocl_session_check	mfsmaster/matoclserv.c	/^void matocl_session_check(void) {$/;"	f
matocl_session_statsmove	mfsmaster/matoclserv.c	/^void matocl_session_statsmove(void) {$/;"	f
matocl_session_timedout	mfsmaster/matoclserv.c	/^void matocl_session_timedout(session *sesdata) {$/;"	f
matoclserv_canexit	mfsmaster/matoclserv.c	/^int matoclserv_canexit(void) {$/;"	f
matoclserv_chart	mfsmaster/matoclserv.c	/^void matoclserv_chart(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_chart_data	mfsmaster/matoclserv.c	/^void matoclserv_chart_data(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_chunk_status	mfsmaster/matoclserv.c	/^void matoclserv_chunk_status(uint64_t chunkid,uint8_t status) {$/;"	f
matoclserv_chunks_matrix	mfsmaster/matoclserv.c	/^void matoclserv_chunks_matrix(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_chunkstest_info	mfsmaster/matoclserv.c	/^void matoclserv_chunkstest_info(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_close_session	mfsmaster/matoclserv.c	/^void matoclserv_close_session(uint32_t sessionid) {$/;"	f
matoclserv_createpacket	mfsmaster/matoclserv.c	/^uint8_t* matoclserv_createpacket(matoclserventry *eptr,uint32_t type,uint32_t size) {$/;"	f
matoclserv_cserv_list	mfsmaster/matoclserv.c	/^void matoclserv_cserv_list(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_desc	mfsmaster/matoclserv.c	/^void matoclserv_desc(struct pollfd *pdesc,uint32_t *ndesc) {$/;"	f
matoclserv_exports_info	mfsmaster/matoclserv.c	/^void matoclserv_exports_info(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_find_session	mfsmaster/matoclserv.c	/^session* matoclserv_find_session(uint32_t sessionid) {$/;"	f
matoclserv_fstest_info	mfsmaster/matoclserv.c	/^void matoclserv_fstest_info(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_access	mfsmaster/matoclserv.c	/^void matoclserv_fuse_access(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_append	mfsmaster/matoclserv.c	/^void matoclserv_fuse_append(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_check	mfsmaster/matoclserv.c	/^void matoclserv_fuse_check(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_getattr	mfsmaster/matoclserv.c	/^void matoclserv_fuse_getattr(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_getdetachedattr	mfsmaster/matoclserv.c	/^void matoclserv_fuse_getdetachedattr(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_getdir	mfsmaster/matoclserv.c	/^void matoclserv_fuse_getdir(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_getdirstats	mfsmaster/matoclserv.c	/^void matoclserv_fuse_getdirstats(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_getdirstats_old	mfsmaster/matoclserv.c	/^void matoclserv_fuse_getdirstats_old(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_geteattr	mfsmaster/matoclserv.c	/^void matoclserv_fuse_geteattr(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_getgoal	mfsmaster/matoclserv.c	/^void matoclserv_fuse_getgoal(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_getreserved	mfsmaster/matoclserv.c	/^void matoclserv_fuse_getreserved(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_gettrash	mfsmaster/matoclserv.c	/^void matoclserv_fuse_gettrash(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_gettrashpath	mfsmaster/matoclserv.c	/^void matoclserv_fuse_gettrashpath(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_gettrashtime	mfsmaster/matoclserv.c	/^void matoclserv_fuse_gettrashtime(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_link	mfsmaster/matoclserv.c	/^void matoclserv_fuse_link(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_lookup	mfsmaster/matoclserv.c	/^void matoclserv_fuse_lookup(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_mkdir	mfsmaster/matoclserv.c	/^void matoclserv_fuse_mkdir(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_mknod	mfsmaster/matoclserv.c	/^void matoclserv_fuse_mknod(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_open	mfsmaster/matoclserv.c	/^void matoclserv_fuse_open(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_purge	mfsmaster/matoclserv.c	/^void matoclserv_fuse_purge(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_quotacontrol	mfsmaster/matoclserv.c	/^void matoclserv_fuse_quotacontrol(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_read_chunk	mfsmaster/matoclserv.c	/^void matoclserv_fuse_read_chunk(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_readlink	mfsmaster/matoclserv.c	/^void matoclserv_fuse_readlink(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_register	mfsmaster/matoclserv.c	/^void matoclserv_fuse_register(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_rename	mfsmaster/matoclserv.c	/^void matoclserv_fuse_rename(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_repair	mfsmaster/matoclserv.c	/^void matoclserv_fuse_repair(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_reserved_inodes	mfsmaster/matoclserv.c	/^void matoclserv_fuse_reserved_inodes(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_rmdir	mfsmaster/matoclserv.c	/^void matoclserv_fuse_rmdir(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_setattr	mfsmaster/matoclserv.c	/^void matoclserv_fuse_setattr(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_seteattr	mfsmaster/matoclserv.c	/^void matoclserv_fuse_seteattr(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_setgoal	mfsmaster/matoclserv.c	/^void matoclserv_fuse_setgoal(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_settrashpath	mfsmaster/matoclserv.c	/^void matoclserv_fuse_settrashpath(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_settrashtime	mfsmaster/matoclserv.c	/^void matoclserv_fuse_settrashtime(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_snapshot	mfsmaster/matoclserv.c	/^void matoclserv_fuse_snapshot(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_statfs	mfsmaster/matoclserv.c	/^void matoclserv_fuse_statfs(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_symlink	mfsmaster/matoclserv.c	/^void matoclserv_fuse_symlink(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_truncate	mfsmaster/matoclserv.c	/^void matoclserv_fuse_truncate(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_undel	mfsmaster/matoclserv.c	/^void matoclserv_fuse_undel(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_unlink	mfsmaster/matoclserv.c	/^void matoclserv_fuse_unlink(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_write_chunk	mfsmaster/matoclserv.c	/^void matoclserv_fuse_write_chunk(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_fuse_write_chunk_end	mfsmaster/matoclserv.c	/^void matoclserv_fuse_write_chunk_end(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_gotpacket	mfsmaster/matoclserv.c	/^void matoclserv_gotpacket(matoclserventry *eptr,uint32_t type,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_info	mfsmaster/matoclserv.c	/^void matoclserv_info(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_init_sessions	mfsmaster/matoclserv.c	/^void matoclserv_init_sessions(uint32_t sessionid,uint32_t inode) {$/;"	f
matoclserv_insert_openfile	mfsmaster/matoclserv.c	/^int matoclserv_insert_openfile(session* cr,uint32_t inode) {$/;"	f
matoclserv_load_sessions	mfsmaster/matoclserv.c	/^int matoclserv_load_sessions() {$/;"	f
matoclserv_mlog_list	mfsmaster/matoclserv.c	/^void matoclserv_mlog_list(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_networkinit	mfsmaster/matoclserv.c	/^int matoclserv_networkinit(void) {$/;"	f
matoclserv_new_session	mfsmaster/matoclserv.c	/^session* matoclserv_new_session(uint8_t newsession,uint8_t nonewid) {$/;"	f
matoclserv_quota_info	mfsmaster/matoclserv.c	/^void matoclserv_quota_info(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_read	mfsmaster/matoclserv.c	/^void matoclserv_read(matoclserventry *eptr) {$/;"	f
matoclserv_serve	mfsmaster/matoclserv.c	/^void matoclserv_serve(struct pollfd *pdesc) {$/;"	f
matoclserv_session_list	mfsmaster/matoclserv.c	/^void matoclserv_session_list(matoclserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matoclserv_sessionsinit	mfsmaster/matoclserv.c	/^int matoclserv_sessionsinit(void) {$/;"	f
matoclserv_start_cond_check	mfsmaster/matoclserv.c	/^void matoclserv_start_cond_check(void) {$/;"	f
matoclserv_stats	mfsmaster/matoclserv.c	/^void matoclserv_stats(uint64_t stats[5]) {$/;"	f
matoclserv_store_sessions	mfsmaster/matoclserv.c	/^void matoclserv_store_sessions() {$/;"	f
matoclserv_term	mfsmaster/matoclserv.c	/^void matoclserv_term(void) {$/;"	f
matoclserv_ugid_remap	mfsmaster/matoclserv.c	/^static inline void matoclserv_ugid_remap(matoclserventry *eptr,uint32_t *auid,uint32_t *agid) {$/;"	f	file:
matoclserv_wantexit	mfsmaster/matoclserv.c	/^void matoclserv_wantexit(void) {$/;"	f
matoclserv_write	mfsmaster/matoclserv.c	/^void matoclserv_write(matoclserventry *eptr) {$/;"	f
matoclserventry	mfsmaster/matoclserv.c	/^typedef struct matoclserventry {$/;"	s	file:
matoclserventry	mfsmaster/matoclserv.c	/^} matoclserventry;$/;"	t	typeref:struct:matoclserventry	file:
matoclservhead	mfsmaster/matoclserv.c	/^static matoclserventry *matoclservhead=NULL;$/;"	v	file:
matocsserv_carry_compare	mfsmaster/matocsserv.c	/^int matocsserv_carry_compare(const void *a,const void *b) {$/;"	f
matocsserv_chunk_damaged	mfsmaster/matocsserv.c	/^void matocsserv_chunk_damaged(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_chunks_lost	mfsmaster/matocsserv.c	/^void matocsserv_chunks_lost(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_createpacket	mfsmaster/matocsserv.c	/^uint8_t* matocsserv_createpacket(matocsserventry *eptr,uint32_t type,uint32_t size) {$/;"	f
matocsserv_cservlist_data	mfsmaster/matocsserv.c	/^void matocsserv_cservlist_data(uint8_t *ptr) {$/;"	f
matocsserv_cservlist_size	mfsmaster/matocsserv.c	/^uint32_t matocsserv_cservlist_size(void) {$/;"	f
matocsserv_deletion_counter	mfsmaster/matocsserv.c	/^uint16_t matocsserv_deletion_counter(void *e) {$/;"	f
matocsserv_desc	mfsmaster/matocsserv.c	/^void matocsserv_desc(struct pollfd *pdesc,uint32_t *ndesc) {$/;"	f
matocsserv_error_occurred	mfsmaster/matocsserv.c	/^void matocsserv_error_occurred(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_getlocation	mfsmaster/matocsserv.c	/^int matocsserv_getlocation(void *e,uint32_t *servip,uint16_t *servport) {$/;"	f
matocsserv_getservers_lessrepl	mfsmaster/matocsserv.c	/^uint16_t matocsserv_getservers_lessrepl(void* ptrs[65535],uint16_t replimit) {$/;"	f
matocsserv_getservers_ordered	mfsmaster/matocsserv.c	/^uint16_t matocsserv_getservers_ordered(void* ptrs[65535],double maxusagediff,uint32_t *pmin,uint32_t *pmax) {$/;"	f
matocsserv_getservers_wrandom	mfsmaster/matocsserv.c	/^uint16_t matocsserv_getservers_wrandom(void* ptrs[65536],uint16_t demand) {$/;"	f
matocsserv_getspace	mfsmaster/matocsserv.c	/^void matocsserv_getspace(uint64_t *totalspace,uint64_t *availspace) {$/;"	f
matocsserv_getstrip	mfsmaster/matocsserv.c	/^char* matocsserv_getstrip(void *e) {$/;"	f
matocsserv_got_chunk_checksum	mfsmaster/matocsserv.c	/^void matocsserv_got_chunk_checksum(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_got_chunkop_status	mfsmaster/matocsserv.c	/^void matocsserv_got_chunkop_status(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_got_createchunk_status	mfsmaster/matocsserv.c	/^void matocsserv_got_createchunk_status(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_got_deletechunk_status	mfsmaster/matocsserv.c	/^void matocsserv_got_deletechunk_status(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_got_duplicatechunk_status	mfsmaster/matocsserv.c	/^void matocsserv_got_duplicatechunk_status(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_got_duptruncchunk_status	mfsmaster/matocsserv.c	/^void matocsserv_got_duptruncchunk_status(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_got_replicatechunk_status	mfsmaster/matocsserv.c	/^void matocsserv_got_replicatechunk_status(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_got_setchunkversion_status	mfsmaster/matocsserv.c	/^void matocsserv_got_setchunkversion_status(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_got_truncatechunk_status	mfsmaster/matocsserv.c	/^void matocsserv_got_truncatechunk_status(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_gotpacket	mfsmaster/matocsserv.c	/^void matocsserv_gotpacket(matocsserventry *eptr,uint32_t type,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_init	mfsmaster/matocsserv.c	/^int matocsserv_init(void) {$/;"	f
matocsserv_makestrip	mfsmaster/matocsserv.c	/^char* matocsserv_makestrip(uint32_t ip) {$/;"	f
matocsserv_read	mfsmaster/matocsserv.c	/^void matocsserv_read(matocsserventry *eptr) {$/;"	f
matocsserv_register	mfsmaster/matocsserv.c	/^void matocsserv_register(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_repdst_free	mfsmaster/matocsserv.c	/^void matocsserv_repdst_free(repdst *r) {$/;"	f
matocsserv_repdst_malloc	mfsmaster/matocsserv.c	/^repdst* matocsserv_repdst_malloc() {$/;"	f
matocsserv_replication_begin	mfsmaster/matocsserv.c	/^void matocsserv_replication_begin(uint64_t chunkid,uint32_t version,void *dst,uint8_t srccnt,void **src) {$/;"	f
matocsserv_replication_disconnected	mfsmaster/matocsserv.c	/^void matocsserv_replication_disconnected(void *srv) {$/;"	f
matocsserv_replication_end	mfsmaster/matocsserv.c	/^void matocsserv_replication_end(uint64_t chunkid,uint32_t version,void *dst) {$/;"	f
matocsserv_replication_find	mfsmaster/matocsserv.c	/^int matocsserv_replication_find(uint64_t chunkid,uint32_t version,void *dst) {$/;"	f
matocsserv_replication_init	mfsmaster/matocsserv.c	/^void matocsserv_replication_init(void) {$/;"	f
matocsserv_replication_read_counter	mfsmaster/matocsserv.c	/^uint16_t matocsserv_replication_read_counter(void *e) {$/;"	f
matocsserv_replication_write_counter	mfsmaster/matocsserv.c	/^uint16_t matocsserv_replication_write_counter(void *e) {$/;"	f
matocsserv_repsrc_free	mfsmaster/matocsserv.c	/^void matocsserv_repsrc_free(repsrc *r) {$/;"	f
matocsserv_repsrc_malloc	mfsmaster/matocsserv.c	/^repsrc* matocsserv_repsrc_malloc() {$/;"	f
matocsserv_send_chunk_checksum	mfsmaster/matocsserv.c	/^int matocsserv_send_chunk_checksum(void *e,uint64_t chunkid,uint32_t version) {$/;"	f
matocsserv_send_chunkop	mfsmaster/matocsserv.c	/^int matocsserv_send_chunkop(void *e,uint64_t chunkid,uint32_t version,uint32_t newversion,uint64_t copychunkid,uint32_t copyversion,uint32_t leng) {$/;"	f
matocsserv_send_createchunk	mfsmaster/matocsserv.c	/^int matocsserv_send_createchunk(void *e,uint64_t chunkid,uint32_t version) {$/;"	f
matocsserv_send_deletechunk	mfsmaster/matocsserv.c	/^int matocsserv_send_deletechunk(void *e,uint64_t chunkid,uint32_t version) {$/;"	f
matocsserv_send_duplicatechunk	mfsmaster/matocsserv.c	/^int matocsserv_send_duplicatechunk(void *e,uint64_t chunkid,uint32_t version,uint64_t oldchunkid,uint32_t oldversion) {$/;"	f
matocsserv_send_duptruncchunk	mfsmaster/matocsserv.c	/^int matocsserv_send_duptruncchunk(void *e,uint64_t chunkid,uint32_t version,uint64_t oldchunkid,uint32_t oldversion,uint32_t length) {$/;"	f
matocsserv_send_replicatechunk	mfsmaster/matocsserv.c	/^int matocsserv_send_replicatechunk(void *e,uint64_t chunkid,uint32_t version,void *src) {$/;"	f
matocsserv_send_replicatechunk_xor	mfsmaster/matocsserv.c	/^int matocsserv_send_replicatechunk_xor(void *e,uint64_t chunkid,uint32_t version,uint8_t cnt,void **src,uint64_t *srcchunkid,uint32_t *srcversion) {$/;"	f
matocsserv_send_setchunkversion	mfsmaster/matocsserv.c	/^int matocsserv_send_setchunkversion(void *e,uint64_t chunkid,uint32_t version,uint32_t oldversion) {$/;"	f
matocsserv_send_truncatechunk	mfsmaster/matocsserv.c	/^int matocsserv_send_truncatechunk(void *e,uint64_t chunkid,uint32_t length,uint32_t version,uint32_t oldversion) {$/;"	f
matocsserv_serve	mfsmaster/matocsserv.c	/^void matocsserv_serve(struct pollfd *pdesc) {$/;"	f
matocsserv_space	mfsmaster/matocsserv.c	/^void matocsserv_space(matocsserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matocsserv_space_compare	mfsmaster/matocsserv.c	/^int matocsserv_space_compare(const void *a,const void *b) {$/;"	f
matocsserv_term	mfsmaster/matocsserv.c	/^void matocsserv_term(void) {$/;"	f
matocsserv_usagedifference	mfsmaster/matocsserv.c	/^void matocsserv_usagedifference(double *minusage,double *maxusage,uint16_t *usablescount,uint16_t *totalscount) {$/;"	f
matocsserv_write	mfsmaster/matocsserv.c	/^void matocsserv_write(matocsserventry *eptr) {$/;"	f
matocsserventry	mfsmaster/matocsserv.c	/^typedef struct matocsserventry {$/;"	s	file:
matocsserventry	mfsmaster/matocsserv.c	/^} matocsserventry;$/;"	t	typeref:struct:matocsserventry	file:
matocsservhead	mfsmaster/matocsserv.c	/^static matocsserventry *matocsservhead=NULL;$/;"	v	file:
matomlserv_beforeclose	mfsmaster/matomlserv.c	/^void matomlserv_beforeclose(matomlserventry *eptr) {$/;"	f
matomlserv_broadcast_logrotate	mfsmaster/matomlserv.c	/^void matomlserv_broadcast_logrotate() {$/;"	f
matomlserv_broadcast_logstring	mfsmaster/matomlserv.c	/^void matomlserv_broadcast_logstring(uint64_t version,uint8_t *logstr,uint32_t logstrsize) {$/;"	f
matomlserv_createpacket	mfsmaster/matomlserv.c	/^uint8_t* matomlserv_createpacket(matomlserventry *eptr,uint32_t type,uint32_t size) {$/;"	f
matomlserv_desc	mfsmaster/matomlserv.c	/^void matomlserv_desc(struct pollfd *pdesc,uint32_t *ndesc) {$/;"	f
matomlserv_download_data	mfsmaster/matomlserv.c	/^void matomlserv_download_data(matomlserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matomlserv_download_end	mfsmaster/matomlserv.c	/^void matomlserv_download_end(matomlserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matomlserv_download_start	mfsmaster/matomlserv.c	/^void matomlserv_download_start(matomlserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matomlserv_gotpacket	mfsmaster/matomlserv.c	/^void matomlserv_gotpacket(matomlserventry *eptr,uint32_t type,const uint8_t *data,uint32_t length) {$/;"	f
matomlserv_init	mfsmaster/matomlserv.c	/^int matomlserv_init(void) {$/;"	f
matomlserv_makestrip	mfsmaster/matomlserv.c	/^char* matomlserv_makestrip(uint32_t ip) {$/;"	f
matomlserv_mloglist_data	mfsmaster/matomlserv.c	/^void matomlserv_mloglist_data(uint8_t *ptr) {$/;"	f
matomlserv_mloglist_size	mfsmaster/matomlserv.c	/^uint32_t matomlserv_mloglist_size(void) {$/;"	f
matomlserv_read	mfsmaster/matomlserv.c	/^void matomlserv_read(matomlserventry *eptr) {$/;"	f
matomlserv_register	mfsmaster/matomlserv.c	/^void matomlserv_register(matomlserventry *eptr,const uint8_t *data,uint32_t length) {$/;"	f
matomlserv_serve	mfsmaster/matomlserv.c	/^void matomlserv_serve(struct pollfd *pdesc) {$/;"	f
matomlserv_status	mfsmaster/matomlserv.c	/^void matomlserv_status(void) {$/;"	f
matomlserv_term	mfsmaster/matomlserv.c	/^void matomlserv_term(void) {$/;"	f
matomlserv_write	mfsmaster/matomlserv.c	/^void matomlserv_write(matomlserventry *eptr) {$/;"	f
matomlserventry	mfsmaster/matomlserv.c	/^typedef struct matomlserventry {$/;"	s	file:
matomlserventry	mfsmaster/matomlserv.c	/^} matomlserventry;$/;"	t	typeref:struct:matomlserventry	file:
matomlservhead	mfsmaster/matomlserv.c	/^static matomlserventry *matomlservhead=NULL;$/;"	v	file:
matrix	mfscgi/mfs.cgi.in	/^				matrix = []$/;"	v
maxfleng	mfsmount/writedata.c	/^	uint64_t maxfleng;$/;"	m	struct:inodedata_s	file:
maxidhole	mfsmetarestore/merger.c	/^static uint64_t maxidhole;$/;"	v	file:
maxnodeid	mfsmaster/filesystem.c	/^static uint32_t maxnodeid;$/;"	v	file:
maxretries	mfsmount/mastercomm.c	/^static uint32_t maxretries;$/;"	v	file:
maxretries	mfsmount/readdata.c	/^static uint32_t maxretries;$/;"	v	file:
maxretries	mfsmount/writedata.c	/^static uint32_t maxretries;$/;"	v	file:
maxsize	mfscommon/pcqueue.c	/^	uint32_t maxsize;$/;"	m	struct:_queue	file:
maxtotalspace	mfsmaster/matocsserv.c	/^static uint64_t maxtotalspace;$/;"	v	file:
md5_decode	mfscommon/md5.c	/^static void md5_decode (uint32_t *output,const uint8_t *input,uint32_t len) {$/;"	f	file:
md5_encode	mfscommon/md5.c	/^static void md5_encode (uint8_t *output,const uint32_t *input,uint32_t len) {$/;"	f	file:
md5_final	mfscommon/md5.c	/^void md5_final (uint8_t digest[16],md5ctx *ctx) {$/;"	f
md5_init	mfscommon/md5.c	/^void md5_init (md5ctx *ctx) {$/;"	f
md5_transform	mfscommon/md5.c	/^static void md5_transform (uint32_t state[4],const uint8_t block[64]) {$/;"	f	file:
md5_update	mfscommon/md5.c	/^void md5_update (md5ctx *ctx,const uint8_t *buff,uint32_t leng) {$/;"	f
md5ctx	mfscommon/md5.h	/^} md5ctx;$/;"	t	typeref:struct:_md5ctx
md5pass	mfsmount/main.c	/^	char *md5pass;$/;"	m	struct:mfsopts	file:
medhour	mfscommon/charts.c	/^static uint32_t medhour,medmin;$/;"	v	file:
medmin	mfscommon/charts.c	/^static uint32_t medhour,medmin;$/;"	v	file:
memlock	mfsmount/main.c	/^	int memlock;$/;"	m	struct:mfsopts	file:
memusage	mfsmaster/chartsdata.c	/^static uint64_t memusage;$/;"	v	file:
merger_delete_entry	mfsmetarestore/merger.c	/^void merger_delete_entry(void) {$/;"	f
merger_heap_sort_down	mfsmetarestore/merger.c	/^void merger_heap_sort_down(void) {$/;"	f
merger_heap_sort_up	mfsmetarestore/merger.c	/^void merger_heap_sort_up(void) {$/;"	f
merger_loop	mfsmetarestore/merger.c	/^int merger_loop(void) {$/;"	f
merger_new_entry	mfsmetarestore/merger.c	/^void merger_new_entry(const char *filename) {$/;"	f
merger_nextentry	mfsmetarestore/merger.c	/^void merger_nextentry(uint32_t pos) {$/;"	f
merger_start	mfsmetarestore/merger.c	/^int merger_start(uint32_t files,char **filenames,uint64_t maxhole) {$/;"	f
meta	mfscgi/mfs.cgi.in	/^					meta=0$/;"	v
meta	mfscgi/mfs.cgi.in	/^					meta=1$/;"	v
meta	mfsmaster/exports.c	/^	unsigned meta:1;$/;"	m	struct:_exports	file:
meta	mfsmount/main.c	/^	int meta;$/;"	m	struct:mfsopts	file:
meta	mfsmount/mastercomm.c	/^	uint8_t meta;$/;"	m	struct:connect_args_t	file:
metafd	mfsmaster/matomlserv.c	/^	int metafd,chain1fd,chain2fd;$/;"	m	struct:matomlserventry	file:
metafd	mfsmetalogger/masterconn.c	/^	int metafd;	\/\/ using standard unix I\/O because this is binary file$/;"	m	struct:masterconn	file:
mfs_access	mfsmount/mfs_fuse.c	/^void mfs_access(fuse_req_t req, fuse_ino_t ino, int mask) {$/;"	f
mfs_arg_errlog	mfscommon/slogger.h	27;"	d
mfs_arg_errlog_silent	mfscommon/slogger.h	34;"	d
mfs_arg_syslog	mfscommon/slogger.h	16;"	d
mfs_attr_get_mattr	mfsmount/mfs_fuse.c	/^static uint8_t mfs_attr_get_mattr(const uint8_t attr[35]) {$/;"	f	file:
mfs_attr_to_stat	mfsmount/mfs_fuse.c	/^static void mfs_attr_to_stat(uint32_t inode,const uint8_t attr[35], struct stat *stbuf) {$/;"	f	file:
mfs_attr_to_stat	mfsmount/mfs_meta_fuse.c	/^static void mfs_attr_to_stat(uint32_t inode,uint8_t attr[35], struct stat *stbuf) {$/;"	f	file:
mfs_create	mfsmount/mfs_fuse.c	/^void mfs_create(fuse_req_t req, fuse_ino_t parent, const char *name, mode_t mode, struct fuse_file_info *fi) {$/;"	f
mfs_errlog	mfscommon/slogger.h	21;"	d
mfs_errlog_silent	mfscommon/slogger.h	33;"	d
mfs_errorconv	mfsmount/mfs_fuse.c	/^static int mfs_errorconv(int status) {$/;"	f	file:
mfs_errorconv	mfsmount/mfs_meta_fuse.c	/^static int mfs_errorconv(int status) {$/;"	f	file:
mfs_flush	mfsmount/mfs_fuse.c	/^void mfs_flush(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi) {$/;"	f
mfs_fsinit	mfsmount/main.c	/^static void mfs_fsinit (void *userdata, struct fuse_conn_info *conn) {$/;"	f	file:
mfs_fsync	mfsmount/mfs_fuse.c	/^void mfs_fsync(fuse_req_t req, fuse_ino_t ino, int datasync, struct fuse_file_info *fi) {$/;"	f
mfs_getattr	mfsmount/mfs_fuse.c	/^void mfs_getattr(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi) {$/;"	f
mfs_init	mfsmount/mfs_fuse.c	/^void mfs_init(int debug_mode_in,int keep_cache_in,double direntry_cache_timeout_in,double entry_cache_timeout_in,double attr_cache_timeout_in,int mkdir_copy_sgid_in,int sugid_clear_mode_in) {$/;"	f
mfs_link	mfsmount/mfs_fuse.c	/^void mfs_link(fuse_req_t req, fuse_ino_t ino, fuse_ino_t newparent, const char *newname) {$/;"	f
mfs_lookup	mfsmount/mfs_fuse.c	/^void mfs_lookup(fuse_req_t req, fuse_ino_t parent, const char *name) {$/;"	f
mfs_meta_getattr	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_getattr(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi) {$/;"	f
mfs_meta_init	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_init(int debug_mode_in,double entry_cache_timeout_in,double attr_cache_timeout_in) {$/;"	f
mfs_meta_lookup	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_lookup(fuse_req_t req, fuse_ino_t parent, const char *name) {$/;"	f
mfs_meta_name_to_inode	mfsmount/mfs_meta_fuse.c	/^uint32_t mfs_meta_name_to_inode(const char *name) {$/;"	f
mfs_meta_open	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_open(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi) {$/;"	f
mfs_meta_opendir	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_opendir(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi) {$/;"	f
mfs_meta_oper	mfsmount/main.c	/^static struct fuse_lowlevel_ops mfs_meta_oper = {$/;"	v	typeref:struct:fuse_lowlevel_ops	file:
mfs_meta_read	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_read(fuse_req_t req, fuse_ino_t ino, size_t size, off_t off, struct fuse_file_info *fi) {$/;"	f
mfs_meta_readdir	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_readdir(fuse_req_t req, fuse_ino_t ino, size_t size, off_t off, struct fuse_file_info *fi) {$/;"	f
mfs_meta_release	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_release(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi) {$/;"	f
mfs_meta_releasedir	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_releasedir(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi) {$/;"	f
mfs_meta_rename	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_rename(fuse_req_t req, fuse_ino_t parent, const char *name, fuse_ino_t newparent, const char *newname) {$/;"	f
mfs_meta_setattr	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_setattr(fuse_req_t req, fuse_ino_t ino, struct stat *stbuf, int to_set, struct fuse_file_info *fi) {$/;"	f
mfs_meta_stat	mfsmount/mfs_meta_fuse.c	/^static void mfs_meta_stat(uint32_t inode, struct stat *stbuf) {$/;"	f	file:
mfs_meta_statfs	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_statfs(fuse_req_t req, fuse_ino_t ino) {$/;"	f
mfs_meta_type_to_stat	mfsmount/mfs_meta_fuse.c	/^static void mfs_meta_type_to_stat(uint32_t inode,uint8_t type, struct stat *stbuf) {$/;"	f	file:
mfs_meta_unlink	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_unlink(fuse_req_t req, fuse_ino_t parent, const char *name) {$/;"	f
mfs_meta_write	mfsmount/mfs_meta_fuse.c	/^void mfs_meta_write(fuse_req_t req, fuse_ino_t ino, const char *buf, size_t size, off_t off, struct fuse_file_info *fi) {$/;"	f
mfs_mkdir	mfsmount/mfs_fuse.c	/^void mfs_mkdir(fuse_req_t req, fuse_ino_t parent, const char *name, mode_t mode) {$/;"	f
mfs_mknod	mfsmount/mfs_fuse.c	/^void mfs_mknod(fuse_req_t req, fuse_ino_t parent, const char *name, mode_t mode, dev_t rdev) {$/;"	f
mfs_newfileinfo	mfsmount/mfs_fuse.c	/^static finfo* mfs_newfileinfo(uint8_t accmode,uint32_t inode) {$/;"	f	file:
mfs_open	mfsmount/mfs_fuse.c	/^void mfs_open(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi) {$/;"	f
mfs_opendir	mfsmount/mfs_fuse.c	/^void mfs_opendir(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi) {$/;"	f
mfs_oper	mfsmount/main.c	/^static struct fuse_lowlevel_ops mfs_oper = {$/;"	v	typeref:struct:fuse_lowlevel_ops	file:
mfs_opt_parse_cfg_file	mfsmount/main.c	/^static void mfs_opt_parse_cfg_file(const char *filename,int optional,struct fuse_args *outargs) {$/;"	f	file:
mfs_opt_proc_stage1	mfsmount/main.c	/^static int mfs_opt_proc_stage1(void *data, const char *arg, int key, struct fuse_args *outargs) {$/;"	f	file:
mfs_opt_proc_stage2	mfsmount/main.c	/^static int mfs_opt_proc_stage2(void *data, const char *arg, int key, struct fuse_args *outargs) {$/;"	f	file:
mfs_opts_stage1	mfsmount/main.c	/^static struct fuse_opt mfs_opts_stage1[] = {$/;"	v	typeref:struct:fuse_opt	file:
mfs_opts_stage2	mfsmount/main.c	/^static struct fuse_opt mfs_opts_stage2[] = {$/;"	v	typeref:struct:fuse_opt	file:
mfs_read	mfsmount/mfs_fuse.c	/^void mfs_read(fuse_req_t req, fuse_ino_t ino, size_t size, off_t off, struct fuse_file_info *fi) {$/;"	f
mfs_readdir	mfsmount/mfs_fuse.c	/^void mfs_readdir(fuse_req_t req, fuse_ino_t ino, size_t size, off_t off, struct fuse_file_info *fi) {$/;"	f
mfs_readlink	mfsmount/mfs_fuse.c	/^void mfs_readlink(fuse_req_t req, fuse_ino_t ino) {$/;"	f
mfs_release	mfsmount/mfs_fuse.c	/^void mfs_release(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi) {$/;"	f
mfs_releasedir	mfsmount/mfs_fuse.c	/^void mfs_releasedir(fuse_req_t req, fuse_ino_t ino, struct fuse_file_info *fi) {$/;"	f
mfs_removefileinfo	mfsmount/mfs_fuse.c	/^static void mfs_removefileinfo(finfo* fileinfo) {$/;"	f	file:
mfs_rename	mfsmount/mfs_fuse.c	/^void mfs_rename(fuse_req_t req, fuse_ino_t parent, const char *name, fuse_ino_t newparent, const char *newname) {$/;"	f
mfs_rmdir	mfsmount/mfs_fuse.c	/^void mfs_rmdir(fuse_req_t req, fuse_ino_t parent, const char *name) {$/;"	f
mfs_setattr	mfsmount/mfs_fuse.c	/^void mfs_setattr(fuse_req_t req, fuse_ino_t ino, struct stat *stbuf, int to_set, struct fuse_file_info *fi) {$/;"	f
mfs_statfs	mfsmount/mfs_fuse.c	/^void mfs_statfs(fuse_req_t req,fuse_ino_t ino) {$/;"	f
mfs_stats_inc	mfsmount/mfs_fuse.c	/^void mfs_stats_inc(uint8_t id) {$/;"	f
mfs_statsptr_init	mfsmount/mfs_fuse.c	/^void mfs_statsptr_init(void) {$/;"	f
mfs_strerror	mfsmount/mastercomm.c	/^static inline const char* mfs_strerror(uint8_t status) {$/;"	f	file:
mfs_strerror	mfsmount/mfstools.c	/^static inline const char* mfs_strerror(uint8_t status) {$/;"	f	file:
mfs_symlink	mfsmount/mfs_fuse.c	/^void mfs_symlink(fuse_req_t req, const char *path, fuse_ino_t parent, const char *name) {$/;"	f
mfs_syslog	mfscommon/slogger.h	11;"	d
mfs_type_to_stat	mfsmount/mfs_fuse.c	/^static void mfs_type_to_stat(uint32_t inode,uint8_t type, struct stat *stbuf) {$/;"	f	file:
mfs_unlink	mfsmount/mfs_fuse.c	/^void mfs_unlink(fuse_req_t req, fuse_ino_t parent, const char *name) {$/;"	f
mfs_write	mfsmount/mfs_fuse.c	/^void mfs_write(fuse_req_t req, fuse_ino_t ino, const char *buf, size_t size, off_t off, struct fuse_file_info *fi) {$/;"	f
mfsopts	mfsmount/main.c	/^static struct mfsopts mfsopts;$/;"	v	typeref:struct:mfsopts	file:
mfsopts	mfsmount/main.c	/^struct mfsopts {$/;"	s	file:
minversion	mfsmaster/exports.c	/^	uint32_t minversion;$/;"	m	struct:_exports	file:
mkdir_copy_sgid	mfsmount/mfs_fuse.c	/^static int mkdir_copy_sgid = 0;$/;"	v	file:
mkdircopysgid	mfsmount/main.c	/^	int mkdircopysgid;$/;"	m	struct:mfsopts	file:
mode	mfscgi/cgiserv.py.in	/^			mode = 0$/;"	v
mode	mfscgi/cgiserv.py.in	/^			mode = 1$/;"	v
mode	mfscgi/cgiserv.py.in	/^			mode = 2$/;"	v
mode	mfscgi/cgiserv.py.in	/^			mode = 3$/;"	v
mode	mfscgi/cgiserv.py.in	/^		mode = 0$/;"	v
mode	mfscgi/cgiserv.py.in	/^		mode = args[0]$/;"	v
mode	mfschunkserver/csserv.c	/^	uint8_t mode;$/;"	m	struct:csserventry	file:
mode	mfschunkserver/masterconn.c	/^	int mode;$/;"	m	struct:masterconn	file:
mode	mfschunkserver/replicator.c	/^	modetype mode;$/;"	m	struct:_repsrc	file:
mode	mfscommon/charts.h	/^	uint8_t mode;$/;"	m	struct:_estatdef
mode	mfscommon/charts.h	/^	uint8_t mode;$/;"	m	struct:_statdef
mode	mfscommon/main.c	/^	int mode;$/;"	m	struct:timeentry	file:
mode	mfsmaster/filesystem.c	/^	uint16_t mode;	\/\/ only 12 lowest bits are used for mode, in unix standard upper 4 are used for object type, but since there is field "type" this bits can be used as extra flags$/;"	m	struct:_fsnode	file:
mode	mfsmaster/matoclserv.c	/^	uint8_t mode;				\/\/0 - not active, 1 - read header, 2 - read packet$/;"	m	struct:matoclserventry	file:
mode	mfsmaster/matocsserv.c	/^	uint8_t mode;$/;"	m	struct:matocsserventry	file:
mode	mfsmaster/matomlserv.c	/^	uint8_t mode;$/;"	m	struct:matomlserventry	file:
mode	mfsmetalogger/masterconn.c	/^	int mode;$/;"	m	struct:masterconn	file:
mode	mfsmount/mfs_fuse.c	/^	uint8_t mode;$/;"	m	struct:_finfo	file:
modetype	mfschunkserver/replicator.c	/^typedef enum {IDLE,CONNECTING,HEADER,DATA} modetype;$/;"	t	typeref:enum:__anon21	file:
mtime	mfsmaster/filesystem.c	/^	uint32_t ctime,mtime,atime;$/;"	m	struct:_fsnode	file:
multiplier	mfscommon/charts.h	/^	uint16_t multiplier;$/;"	m	struct:_estatdef
multiplier	mfscommon/charts.h	/^	uint16_t multiplier;$/;"	m	struct:_statdef
mutex	mfsmount/mastercomm.c	/^	pthread_mutex_t mutex;$/;"	m	struct:_threc	file:
my_get_number	mfsmount/mfstools.c	/^int my_get_number(const char *str,uint64_t *ret,double max,uint8_t bytesflag) {$/;"	f
mycrc32	mfscommon/crc.c	/^uint32_t mycrc32(uint32_t crc,const uint8_t *block,uint32_t leng) {$/;"	f
mycrc32_combine	mfscommon/crc.c	/^uint32_t mycrc32_combine(uint32_t crc1, uint32_t crc2, uint32_t leng2) {$/;"	f
mycrc32_init	mfscommon/crc.c	/^void mycrc32_init(void) {$/;"	f
mycrc32_xorblocks	mfscommon/crc.h	27;"	d
mycrc32_zeroblock	mfscommon/crc.h	25;"	d
mycrc32_zeroexpanded	mfscommon/crc.h	26;"	d
mylistenip	mfschunkserver/csserv.c	/^static uint32_t mylistenip;$/;"	v	file:
mylistenport	mfschunkserver/csserv.c	/^static uint16_t mylistenport;$/;"	v	file:
mylock	mfscgi/cgiserv.py.in	/^def mylock(filename):$/;"	f
mylock	mfscommon/main.c	/^pid_t mylock(int fd) {$/;"	f
myrecv	mfscgi/chart.cgi.in	/^def myrecv(socket,leng):$/;"	f
myrecv	mfscgi/mfs.cgi.in	/^def myrecv(socket,leng):$/;"	f
mysend	mfscgi/chart.cgi.in	/^def mysend(socket,msg):$/;"	f
mysend	mfscgi/mfs.cgi.in	/^def mysend(socket,msg):$/;"	f
n	mfscgi/mfs.cgi.in	/^				n = length\/8$/;"	v
n	mfscgi/mfs.cgi.in	/^			n = length\/136$/;"	v
n	mfscgi/mfs.cgi.in	/^			n = length\/50$/;"	v
n	mfscgi/mfs.cgi.in	/^			n = length\/54$/;"	v
name	mfscgi/mfs.cgi.in	/^				name = "%s:%u" % (strip,port)$/;"	v
name	mfscgi/mfs.cgi.in	/^				name = oname.replace(":","")$/;"	v
name	mfschunkserver/init.h	/^	char *name;$/;"	m	struct:__anon24
name	mfscommon/cfg.c	/^	char *name;$/;"	m	struct:paramsstr	file:
name	mfscommon/charts.h	/^	char *name;$/;"	m	struct:_statdef
name	mfsmaster/filesystem.c	/^	uint8_t *name;$/;"	m	struct:_fsedge	file:
name	mfsmaster/init.h	/^	char *name;$/;"	m	struct:__anon14
name	mfsmetalogger/init.h	/^	char *name;$/;"	m	struct:__anon8
name	mfsmount/stats.c	/^	char *name;$/;"	m	struct:_statsnode	file:
namehashtab	mfsmount/dirattrcache.c	/^	const uint8_t **namehashtab;$/;"	m	struct:_dircache	file:
ndoplock	mfschunkserver/hddspacemgr.c	/^static pthread_mutex_t ndoplock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
needpassword	mfsmaster/exports.c	/^	unsigned needpassword:1;$/;"	m	struct:_exports	file:
needrefresh	mfschunkserver/hddspacemgr.c	/^	unsigned int needrefresh:1;$/;"	m	struct:folder	file:
needverincrease	mfsmaster/chunks.c	/^	unsigned needverincrease:1;$/;"	m	struct:chunk	file:
newdopchunks	mfschunkserver/hddspacemgr.c	/^static dopchunk *newdopchunks=NULL;$/;"	v	file:
newsession	mfsmaster/matoclserv.c	/^	uint8_t newsession;$/;"	m	struct:session	file:
newversion	mfschunkserver/bgjobs.c	/^	uint32_t version,newversion,copyversion;$/;"	m	struct:_chunk_op_args	file:
next	mfschunkserver/bgjobs.c	/^	struct _job *next;$/;"	m	struct:_job	typeref:struct:_job::_job	file:
next	mfschunkserver/csserv.c	/^	struct csserventry *next;$/;"	m	struct:csserventry	typeref:struct:csserventry::csserventry	file:
next	mfschunkserver/csserv.c	/^	struct packetstruct *next;$/;"	m	struct:packetstruct	typeref:struct:packetstruct::packetstruct	file:
next	mfschunkserver/csserv.c	/^	struct writestatus *next;$/;"	m	struct:writestatus	typeref:struct:writestatus::writestatus	file:
next	mfschunkserver/hddspacemgr.c	/^	struct _cntcond *next;$/;"	m	struct:_cntcond	typeref:struct:_cntcond::_cntcond	file:
next	mfschunkserver/hddspacemgr.c	/^	struct chunk *next;$/;"	m	struct:chunk	typeref:struct:chunk::chunk	file:
next	mfschunkserver/hddspacemgr.c	/^	struct damagedchunk *next;$/;"	m	struct:damagedchunk	typeref:struct:damagedchunk::damagedchunk	file:
next	mfschunkserver/hddspacemgr.c	/^	struct dopchunk *next;$/;"	m	struct:dopchunk	typeref:struct:dopchunk::dopchunk	file:
next	mfschunkserver/hddspacemgr.c	/^	struct folder *next;$/;"	m	struct:folder	typeref:struct:folder::folder	file:
next	mfschunkserver/hddspacemgr.c	/^	struct lostchunk *next;$/;"	m	struct:lostchunk	typeref:struct:lostchunk::lostchunk	file:
next	mfschunkserver/masterconn.c	/^	struct packetstruct *next;$/;"	m	struct:packetstruct	typeref:struct:packetstruct::packetstruct	file:
next	mfscommon/cfg.c	/^	struct paramsstr *next;$/;"	m	struct:paramsstr	typeref:struct:paramsstr::paramsstr	file:
next	mfscommon/main.c	/^	struct ceentry *next;$/;"	m	struct:ceentry	typeref:struct:ceentry::ceentry	file:
next	mfscommon/main.c	/^	struct deentry *next;$/;"	m	struct:deentry	typeref:struct:deentry::deentry	file:
next	mfscommon/main.c	/^	struct eloopentry *next;$/;"	m	struct:eloopentry	typeref:struct:eloopentry::eloopentry	file:
next	mfscommon/main.c	/^	struct pollentry *next;$/;"	m	struct:pollentry	typeref:struct:pollentry::pollentry	file:
next	mfscommon/main.c	/^	struct rlentry *next;$/;"	m	struct:rlentry	typeref:struct:rlentry::rlentry	file:
next	mfscommon/main.c	/^	struct timeentry *next;$/;"	m	struct:timeentry	typeref:struct:timeentry::timeentry	file:
next	mfscommon/main.c	/^	struct weentry *next;$/;"	m	struct:weentry	typeref:struct:weentry::weentry	file:
next	mfscommon/pcqueue.c	/^	struct _qentry *next;$/;"	m	struct:_qentry	typeref:struct:_qentry::_qentry	file:
next	mfsmaster/chunks.c	/^	struct _chunk_bucket *next;$/;"	m	struct:_chunk_bucket	typeref:struct:_chunk_bucket::_chunk_bucket	file:
next	mfsmaster/chunks.c	/^	struct _flist *next;$/;"	m	struct:_flist	typeref:struct:_flist::_flist	file:
next	mfsmaster/chunks.c	/^	struct _flist_bucket *next;$/;"	m	struct:_flist_bucket	typeref:struct:_flist_bucket::_flist_bucket	file:
next	mfsmaster/chunks.c	/^	struct _slist *next;$/;"	m	struct:_slist	typeref:struct:_slist::_slist	file:
next	mfsmaster/chunks.c	/^	struct _slist_bucket *next;$/;"	m	struct:_slist_bucket	typeref:struct:_slist_bucket::_slist_bucket	file:
next	mfsmaster/chunks.c	/^	struct chunk *next;$/;"	m	struct:chunk	typeref:struct:chunk::chunk	file:
next	mfsmaster/exports.c	/^	struct _exports *next;$/;"	m	struct:_exports	typeref:struct:_exports::_exports	file:
next	mfsmaster/filesystem.c	/^	struct _freenode *next;$/;"	m	struct:_freenode	typeref:struct:_freenode::_freenode	file:
next	mfsmaster/filesystem.c	/^	struct _freenode_bucket *next;$/;"	m	struct:_freenode_bucket	typeref:struct:_freenode_bucket::_freenode_bucket	file:
next	mfsmaster/filesystem.c	/^	struct _fsedge *next,**prev;$/;"	m	struct:_fsedge	typeref:struct:_fsedge::_fsedge	file:
next	mfsmaster/filesystem.c	/^	struct _fsnode *next;$/;"	m	struct:_fsnode	typeref:struct:_fsnode::_fsnode	file:
next	mfsmaster/filesystem.c	/^	struct _quotanode *next,**prev;$/;"	m	struct:_quotanode	typeref:struct:_quotanode::_quotanode	file:
next	mfsmaster/filesystem.c	/^	struct _sessionidrec *next;$/;"	m	struct:_sessionidrec	typeref:struct:_sessionidrec::_sessionidrec	file:
next	mfsmaster/filesystem.c	/^	struct _sessionidrec_bucket *next;$/;"	m	struct:_sessionidrec_bucket	typeref:struct:_sessionidrec_bucket::_sessionidrec_bucket	file:
next	mfsmaster/matoclserv.c	/^	struct chunklist *next;$/;"	m	struct:chunklist	typeref:struct:chunklist::chunklist	file:
next	mfsmaster/matoclserv.c	/^	struct filelist *next;$/;"	m	struct:filelist	typeref:struct:filelist::filelist	file:
next	mfsmaster/matoclserv.c	/^	struct matoclserventry *next;$/;"	m	struct:matoclserventry	typeref:struct:matoclserventry::matoclserventry	file:
next	mfsmaster/matoclserv.c	/^	struct packetstruct *next;$/;"	m	struct:packetstruct	typeref:struct:packetstruct::packetstruct	file:
next	mfsmaster/matoclserv.c	/^	struct session *next;$/;"	m	struct:session	typeref:struct:session::session	file:
next	mfsmaster/matocsserv.c	/^	struct _repdst *next;$/;"	m	struct:_repdst	typeref:struct:_repdst::_repdst	file:
next	mfsmaster/matocsserv.c	/^	struct _repsrc *next;$/;"	m	struct:_repsrc	typeref:struct:_repsrc::_repsrc	file:
next	mfsmaster/matocsserv.c	/^	struct matocsserventry *next;$/;"	m	struct:matocsserventry	typeref:struct:matocsserventry::matocsserventry	file:
next	mfsmaster/matocsserv.c	/^	struct packetstruct *next;$/;"	m	struct:packetstruct	typeref:struct:packetstruct::packetstruct	file:
next	mfsmaster/matomlserv.c	/^	struct matomlserventry *next;$/;"	m	struct:matomlserventry	typeref:struct:matomlserventry::matomlserventry	file:
next	mfsmaster/matomlserv.c	/^	struct packetstruct *next;$/;"	m	struct:packetstruct	typeref:struct:packetstruct::packetstruct	file:
next	mfsmetalogger/masterconn.c	/^	struct packetstruct *next;$/;"	m	struct:packetstruct	typeref:struct:packetstruct::packetstruct	file:
next	mfsmount/csdb.c	/^	struct _csdbentry *next;$/;"	m	struct:_csdbentry	typeref:struct:_csdbentry::_csdbentry	file:
next	mfsmount/dirattrcache.c	/^	struct _dircache *next,**prev;$/;"	m	struct:_dircache	typeref:struct:_dircache::_dircache	file:
next	mfsmount/mastercomm.c	/^	struct _acquired_file *next;$/;"	m	struct:_acquired_file	typeref:struct:_acquired_file::_acquired_file	file:
next	mfsmount/mastercomm.c	/^	struct _threc *next;$/;"	m	struct:_threc	typeref:struct:_threc::_threc	file:
next	mfsmount/oplog.c	/^	struct _fhentry *next;$/;"	m	struct:_fhentry	typeref:struct:_fhentry::_fhentry	file:
next	mfsmount/readdata.c	/^	struct _readrec *next;		\/\/ glock$/;"	m	struct:_readrec	typeref:struct:_readrec::_readrec	file:
next	mfsmount/writedata.c	/^	struct cblock_s *next,*prev;$/;"	m	struct:cblock_s	typeref:struct:cblock_s::cblock_s	file:
next	mfsmount/writedata.c	/^	struct inodedata_s *next;$/;"	m	struct:inodedata_s	typeref:struct:inodedata_s::inodedata_s	file:
nextchild	mfsmaster/filesystem.c	/^	struct _fsedge *nextchild,*nextparent;$/;"	m	struct:_fsedge	typeref:struct:_fsedge::_fsedge	file:
nextchunkid	mfsmaster/chunks.c	/^static uint64_t nextchunkid=1;$/;"	v	file:
nextevent	mfscommon/main.c	/^	uint32_t nextevent;$/;"	m	struct:timeentry	file:
nextfh	mfsmount/oplog.c	/^static unsigned long nextfh=1;$/;"	v	file:
nextid	mfsmetarestore/merger.c	/^	uint64_t nextid;$/;"	m	struct:_hentry	file:
nextjobid	mfschunkserver/bgjobs.c	/^	uint32_t nextjobid;$/;"	m	struct:_jobpool	file:
nextparent	mfsmaster/filesystem.c	/^	struct _fsedge *nextchild,*nextparent;$/;"	m	struct:_fsedge	typeref:struct:_fsedge::	file:
nextsessionid	mfsmaster/filesystem.c	/^static uint32_t nextsessionid;$/;"	v	file:
nextsibling	mfsmount/stats.c	/^	struct _statsnode *nextsibling;$/;"	m	struct:_statsnode	typeref:struct:_statsnode::_statsnode	file:
nice	mfsmount/main.c	/^	signed nice;$/;"	m	struct:mfsopts	file:
nleng	mfsmaster/filesystem.c	/^	uint16_t nleng;$/;"	m	struct:_fsedge	file:
nleng	mfsmount/stats.c	/^	uint32_t nleng;	\/\/ : strlen(name)$/;"	m	struct:_statsnode	file:
nlink	mfsmaster/filesystem.c	/^			uint32_t nlink;$/;"	m	struct:_fsnode::_data::_ddata	file:
no	mfscgi/mfs.cgi.in	/^				no=0$/;"	v
no	mfscgi/mfs.cgi.in	/^			no=0$/;"	v
noaccesscnt	mfsmount/readdata.c	/^	uint8_t noaccesscnt;		\/\/ glock$/;"	m	struct:_readrec	file:
nodata	mfsmount/oplog.c	/^static pthread_cond_t nodata = PTHREAD_COND_INITIALIZER;$/;"	v	file:
node	mfsmaster/filesystem.c	/^	struct _fsnode *node;$/;"	m	struct:_quotanode	typeref:struct:_quotanode::_fsnode	file:
nodehash	mfsmaster/filesystem.c	/^static fsnode* nodehash[NODEHASHSIZE];$/;"	v	file:
nodes	mfsmaster/filesystem.c	/^static uint32_t nodes;$/;"	v	file:
nofile	mfsmount/main.c	/^	unsigned nofile;$/;"	m	struct:mfsopts	file:
nostdmountoptions	mfsmount/main.c	/^	int nostdmountoptions;$/;"	m	struct:mfsopts	file:
notdone	mfsmaster/chunks.c	/^	job_info done,notdone;$/;"	m	struct:_loop_info	file:
now	mfscommon/main.c	/^static uint32_t now;$/;"	v	file:
npthid	mfsmount/mastercomm.c	/^static pthread_t rpthid,npthid;$/;"	v	file:
nsocks	mfsmaster/matoclserv.c	/^	uint32_t nsocks;	\/\/ >0 - connected (number of active connections) ; 0 - not connected$/;"	m	struct:session	file:
num	mfscommon/strerr.c	/^	int num;$/;"	m	struct:errent	file:
obuff	mfsmount/mastercomm.c	/^	uint8_t *obuff;$/;"	m	struct:_threc	file:
obuffsize	mfsmount/mastercomm.c	/^	uint32_t obuffsize;$/;"	m	struct:_threc	file:
ocargs	mfschunkserver/bgjobs.c	143;"	d	file:
odataleng	mfsmount/mastercomm.c	/^	uint32_t odataleng;$/;"	m	struct:_threc	file:
offset	mfschunkserver/bgjobs.c	/^	uint32_t offset,size;$/;"	m	struct:_chunk_rd_args	file:
offset	mfschunkserver/bgjobs.c	/^	uint32_t offset,size;$/;"	m	struct:_chunk_wr_args	file:
offset	mfschunkserver/csserv.c	/^	uint32_t offset;		\/\/ R$/;"	m	struct:csserventry	file:
offset	mfscommon/main.c	/^	uint32_t offset;$/;"	m	struct:timeentry	file:
oldmode	mfsmetalogger/masterconn.c	/^	uint8_t oldmode;$/;"	m	struct:masterconn	file:
op	mfscommon/pcqueue.c	/^	uint32_t op;$/;"	m	struct:_qentry	file:
opargs	mfschunkserver/bgjobs.c	142;"	d	file:
opbuff	mfsmount/oplog.c	/^static uint8_t opbuff[OPBUFFSIZE];$/;"	v	file:
opbufflock	mfsmount/oplog.c	/^static pthread_mutex_t opbufflock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
open_master_conn	mfsmount/mfstools.c	/^int open_master_conn(const char *name,uint32_t *inode,mode_t *mode,uint8_t needsamedev,uint8_t needrwfs) {$/;"	f
opened	mfschunkserver/replicator.c	/^	uint8_t created,opened;$/;"	m	struct:_replication	file:
openedfiles	mfsmaster/matoclserv.c	/^	filelist *openedfiles;$/;"	m	struct:session	file:
opensteps	mfschunkserver/hddspacemgr.c	/^	uint8_t opensteps;$/;"	m	struct:chunk	file:
operation	mfsmaster/chunks.c	/^	unsigned operation:4;$/;"	m	struct:chunk	file:
oplog_getdata	mfsmount/oplog.c	/^void oplog_getdata(unsigned long fh,uint8_t **buff,uint32_t *leng,uint32_t maxleng) {$/;"	f
oplog_newhandle	mfsmount/oplog.c	/^unsigned long oplog_newhandle(int hflag) {$/;"	f
oplog_printf	mfsmount/oplog.c	/^void oplog_printf(const struct fuse_ctx *ctx,const char *format,...) {$/;"	f
oplog_put	mfsmount/oplog.c	/^static inline void oplog_put(uint8_t *buff,uint32_t leng) {$/;"	f	file:
oplog_releasedata	mfsmount/oplog.c	/^void oplog_releasedata(unsigned long fh) {$/;"	f
oplog_releasehandle	mfsmount/oplog.c	/^void oplog_releasehandle(unsigned long fh) {$/;"	f
oplogattr	mfsmount/mfs_fuse.c	/^static uint8_t oplogattr[35]={'f', 0x01,0x00, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1, 0,0,0,0,0,0,0,0};$/;"	v	file:
out	mfscgi/mfs.cgi.in	/^			out = []$/;"	v
out	mfscgi/mfs.cgi.in	/^		out = []$/;"	v
out	mfscgi/mfs.cgi.in	/^	out = []$/;"	v
outputhead	mfschunkserver/csserv.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:csserventry	file:
outputhead	mfschunkserver/masterconn.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:masterconn	file:
outputhead	mfsmaster/matoclserv.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:matoclserventry	file:
outputhead	mfsmaster/matocsserv.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:matocsserventry	file:
outputhead	mfsmaster/matomlserv.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:matomlserventry	file:
outputhead	mfsmetalogger/masterconn.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:masterconn	file:
outputtail	mfschunkserver/csserv.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:csserventry	file:
outputtail	mfschunkserver/masterconn.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:masterconn	file:
outputtail	mfsmaster/matoclserv.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:matoclserventry	file:
outputtail	mfsmaster/matocsserv.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:matocsserventry	file:
outputtail	mfsmaster/matomlserv.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:matomlserventry	file:
outputtail	mfsmetalogger/masterconn.c	/^	packetstruct *outputhead,**outputtail;$/;"	m	struct:masterconn	file:
owner	mfschunkserver/hddspacemgr.c	/^	struct folder *owner;$/;"	m	struct:chunk	typeref:struct:chunk::folder	file:
p	mfscommon/random.c	/^static uint8_t p[256];$/;"	v	file:
p	mfsmount/mfs_fuse.c	/^	const uint8_t *p;$/;"	m	struct:_dirbuf	file:
p	mfsmount/mfs_meta_fuse.c	/^	char *p;$/;"	m	struct:_pathbuf	file:
p	mfsmount/mfs_meta_fuse.c	/^	uint8_t *p;$/;"	m	struct:_dirbuf	file:
packet	mfschunkserver/csserv.c	/^	uint8_t *packet;$/;"	m	struct:packetstruct	file:
packet	mfschunkserver/masterconn.c	/^	uint8_t *packet;$/;"	m	struct:packetstruct	file:
packet	mfschunkserver/replicator.c	/^	uint8_t *packet;$/;"	m	struct:_repsrc	file:
packet	mfsmaster/matoclserv.c	/^	uint8_t *packet;$/;"	m	struct:packetstruct	file:
packet	mfsmaster/matocsserv.c	/^	uint8_t *packet;$/;"	m	struct:packetstruct	file:
packet	mfsmaster/matomlserv.c	/^	uint8_t *packet;$/;"	m	struct:packetstruct	file:
packet	mfsmetalogger/masterconn.c	/^	uint8_t *packet;$/;"	m	struct:packetstruct	file:
packetid	mfsmount/mastercomm.c	/^	uint32_t packetid;	\/\/ thread number$/;"	m	struct:_threc	file:
packetstruct	mfschunkserver/csserv.c	/^typedef struct packetstruct {$/;"	s	file:
packetstruct	mfschunkserver/csserv.c	/^} packetstruct;$/;"	t	typeref:struct:packetstruct	file:
packetstruct	mfschunkserver/masterconn.c	/^typedef struct packetstruct {$/;"	s	file:
packetstruct	mfschunkserver/masterconn.c	/^} packetstruct;$/;"	t	typeref:struct:packetstruct	file:
packetstruct	mfsmaster/matoclserv.c	/^typedef struct packetstruct {$/;"	s	file:
packetstruct	mfsmaster/matoclserv.c	/^} packetstruct;$/;"	t	typeref:struct:packetstruct	file:
packetstruct	mfsmaster/matocsserv.c	/^typedef struct packetstruct {$/;"	s	file:
packetstruct	mfsmaster/matocsserv.c	/^} packetstruct;$/;"	t	typeref:struct:packetstruct	file:
packetstruct	mfsmaster/matomlserv.c	/^typedef struct packetstruct {$/;"	s	file:
packetstruct	mfsmaster/matomlserv.c	/^} packetstruct;$/;"	t	typeref:struct:packetstruct	file:
packetstruct	mfsmetalogger/masterconn.c	/^typedef struct packetstruct {$/;"	s	file:
packetstruct	mfsmetalogger/masterconn.c	/^} packetstruct;$/;"	t	typeref:struct:packetstruct	file:
padding	mfscommon/md5.c	/^static const uint8_t padding[64] = {$/;"	v	file:
paramhead	mfscommon/cfg.c	/^static paramstr *paramhead=NULL;$/;"	v	file:
paramsstr	mfscommon/cfg.c	/^typedef struct paramsstr {$/;"	s	file:
paramstr	mfscommon/cfg.c	/^} paramstr;$/;"	t	typeref:struct:paramsstr	file:
parent	mfsmaster/filesystem.c	/^	struct _fsnode *child,*parent;$/;"	m	struct:_fsedge	typeref:struct:_fsedge::	file:
parent	mfsmount/dirattrcache.c	/^	uint32_t parent;$/;"	m	struct:_dircache	file:
parents	mfsmaster/filesystem.c	/^	fsedge *parents;$/;"	m	struct:_fsnode	file:
passert	mfscommon/massert.h	29;"	d
password	mfsmount/main.c	/^	char *password;$/;"	m	struct:mfsopts	file:
passwordask	mfsmount/main.c	/^	int passwordask;$/;"	m	struct:mfsopts	file:
passworddigest	mfsmaster/exports.c	/^	uint8_t passworddigest[16];$/;"	m	struct:_exports	file:
passworddigest	mfsmount/mastercomm.c	/^	uint8_t *passworddigest;$/;"	m	struct:connect_args_t	file:
passwordrnd	mfsmaster/matoclserv.c	/^	uint8_t passwordrnd[32];$/;"	m	struct:matoclserventry	file:
path	mfscgi/mfs.cgi.in	/^								path = "%s:%u:%s" % (hostip,port,data[1:plen+1])$/;"	v
path	mfscgi/mfs.cgi.in	/^								path = "%s:%u:%s" % (hostip,port,entry[1:plen+1])$/;"	v
path	mfscgi/mfs.cgi.in	/^								path = "%s:%u:%s" % (hoststr,port,data[1:plen+1])$/;"	v
path	mfscgi/mfs.cgi.in	/^								path = "%s:%u:%s" % (hoststr,port,entry[1:plen+1])$/;"	v
path	mfscgi/mfs.cgi.in	/^				path = data[pos:pos+pleng]$/;"	v
path	mfschunkserver/hddspacemgr.c	/^	char *path;$/;"	m	struct:folder	file:
path	mfsmaster/exports.c	/^	const uint8_t *path;	\/\/ without '\/' at the begin and at the end$/;"	m	struct:_exports	file:
path	mfsmaster/filesystem.c	/^			uint8_t *path;$/;"	m	struct:_fsnode::_data::_sdata	file:
path	mfsmount/symlinkcache.c	/^	uint8_t* path[HASH_BUCKET_SIZE];$/;"	m	struct:_hashbucket	file:
pathbuf	mfsmount/mfs_meta_fuse.c	/^} pathbuf;$/;"	t	typeref:struct:_pathbuf	file:
pdescpos	mfschunkserver/csserv.c	/^	int32_t pdescpos;$/;"	m	struct:csserventry	file:
pdescpos	mfschunkserver/masterconn.c	/^	int32_t pdescpos;$/;"	m	struct:masterconn	file:
pdescpos	mfsmaster/matoclserv.c	/^	int32_t pdescpos;$/;"	m	struct:matoclserventry	file:
pdescpos	mfsmaster/matocsserv.c	/^	int32_t pdescpos;$/;"	m	struct:matocsserventry	file:
pdescpos	mfsmaster/matomlserv.c	/^	int32_t pdescpos;$/;"	m	struct:matomlserventry	file:
pdescpos	mfsmetalogger/masterconn.c	/^	int32_t pdescpos;$/;"	m	struct:masterconn	file:
peerip	mfsmaster/matoclserv.c	/^	uint32_t peerip;$/;"	m	struct:matoclserventry	file:
peerip	mfsmaster/matoclserv.c	/^	uint32_t peerip;$/;"	m	struct:session	file:
percent	mfscommon/charts.h	/^	uint8_t percent;$/;"	m	struct:_estatdef
percent	mfscommon/charts.h	/^	uint8_t percent;$/;"	m	struct:_statdef
pid	mfscgi/cgiserv.py.in	/^			pid = os.fork()$/;"	v
pipe	mfsmount/writedata.c	/^	int pipe[2];$/;"	m	struct:inodedata_s	file:
pipefd	mfscgi/cgiserv.py.in	/^	pipefd = posix.pipe()$/;"	v
pipelock	mfschunkserver/bgjobs.c	/^	pthread_mutex_t pipelock;$/;"	m	struct:_jobpool	file:
plen	mfscgi/mfs.cgi.in	/^							plen = ord(data[0])$/;"	v
plen	mfscgi/mfs.cgi.in	/^							plen = ord(entry[0])$/;"	v
pleng	mfscgi/mfs.cgi.in	/^				pleng = struct.unpack(">L",data[pos:pos+4])[0]$/;"	v
pleng	mfsmaster/exports.c	/^	uint32_t pleng;$/;"	m	struct:_exports	file:
pleng	mfsmaster/filesystem.c	/^			uint32_t pleng;$/;"	m	struct:_fsnode::_data::_sdata	file:
png_1x1	mfscommon/charts.c	/^static uint8_t png_1x1[] = {$/;"	v	file:
png_header	mfscommon/charts.c	/^static uint8_t png_header[] = {$/;"	v	file:
png_tailer	mfscommon/charts.c	/^static uint8_t png_tailer[] = {$/;"	v	file:
pointers	mfscommon/charts.c	/^static uint32_t pointers[RANGES];$/;"	v	file:
pollentry	mfscommon/main.c	/^typedef struct pollentry {$/;"	s	file:
pollentry	mfscommon/main.c	/^} pollentry;$/;"	t	typeref:struct:pollentry	file:
pollhead	mfscommon/main.c	/^static pollentry *pollhead=NULL;$/;"	v	file:
port	mfscgi/cgiserv.py.in	/^			port = int(val)$/;"	v
port	mfscgi/cgiserv.py.in	/^	port = 9425$/;"	v
port	mfscgi/chart.cgi.in	/^		port = 0$/;"	v
port	mfscgi/chart.cgi.in	/^		port = int(fields.getvalue("port"))$/;"	v
port	mfscgi/chart.cgi.in	/^	port = 0$/;"	v
port	mfschunkserver/replicator.c	/^	uint16_t port;$/;"	m	struct:_repsrc	file:
port	mfsmaster/chunks.c	/^	uint16_t port;$/;"	m	struct:locsort	file:
port	mfsmount/csdb.c	/^	uint16_t port;$/;"	m	struct:_csdbentry	file:
port	mfsmount/readdata.c	/^	uint16_t port;			\/\/ this->locked$/;"	m	struct:_readrec	file:
pos	mfscgi/mfs.cgi.in	/^				pos = 0$/;"	v
pos	mfscgi/mfs.cgi.in	/^				pos = 2$/;"	v
pos	mfscgi/mfs.cgi.in	/^			pos = 0$/;"	v
pos	mfsmount/chunkloccache.c	/^	uint32_t pos[HASH_BUCKET_SIZE];$/;"	m	struct:_hashbucket	file:
pos	mfsmount/writedata.c	/^	uint16_t pos;		\/\/ block in chunk (0...1023) - never modified$/;"	m	struct:cblock_s	file:
prev	mfsmaster/filesystem.c	/^	struct _fsedge *next,**prev;$/;"	m	struct:_fsedge	typeref:struct:_fsedge::	file:
prev	mfsmaster/filesystem.c	/^	struct _quotanode *next,**prev;$/;"	m	struct:_quotanode	typeref:struct:_quotanode::	file:
prev	mfsmount/dirattrcache.c	/^	struct _dircache *next,**prev;$/;"	m	struct:_dircache	typeref:struct:_dircache::	file:
prev	mfsmount/writedata.c	/^	struct cblock_s *next,*prev;$/;"	m	struct:cblock_s	typeref:struct:cblock_s::	file:
prevchild	mfsmaster/filesystem.c	/^	struct _fsedge **prevchild,**prevparent;$/;"	m	struct:_fsedge	typeref:struct:_fsedge::_fsedge	file:
prevparent	mfsmaster/filesystem.c	/^	struct _fsedge **prevchild,**prevparent;$/;"	m	struct:_fsedge	typeref:struct:_fsedge::	file:
print_extra_attributes	mfsmount/mfstools.c	/^static inline void print_extra_attributes() {$/;"	f	file:
print_humanized_number	mfsmount/mfstools.c	/^void print_humanized_number(const char *format,uint64_t number,uint8_t flags) {$/;"	f
print_name	mfsmetadump/mfsmetadump.c	/^void print_name(FILE *in,uint32_t nleng) {$/;"	f
print_number	mfsmount/mfstools.c	/^void print_number(const char *prefix,const char *suffix,uint64_t number,uint8_t mode32,uint8_t bytesflag,uint8_t dflag) {$/;"	f
print_numberformat_options	mfsmount/mfstools.c	/^static inline void print_numberformat_options() {$/;"	f	file:
print_recursive_option	mfsmount/mfstools.c	/^static inline void print_recursive_option() {$/;"	f	file:
process_incoming	mfscgi/cgiserv.py.in	/^	def process_incoming(self):$/;"	m	class:ClientHandler
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
proxyhost	mfsmount/masterproxy.c	/^static uint32_t proxyhost;$/;"	v	file:
proxyport	mfsmount/masterproxy.c	/^static uint16_t proxyport;$/;"	v	file:
proxythread	mfsmount/masterproxy.c	/^static pthread_t proxythread;$/;"	v	file:
pthid	mfsmount/readdata.c	/^static pthread_t pthid;$/;"	v	file:
ptr	mfsmaster/chunks.c	/^	void *ptr;$/;"	m	struct:_slist	file:
ptr	mfsmetarestore/merger.c	/^	char *ptr;$/;"	m	struct:_hentry	file:
put16bit	mfscommon/datapack.h	/^static inline void put16bit(uint8_t **ptr,uint16_t val) {$/;"	f
put32bit	mfscommon/datapack.h	/^static inline void put32bit(uint8_t **ptr,uint32_t val) {$/;"	f
put64bit	mfscommon/datapack.h	/^static inline void put64bit(uint8_t **ptr,uint64_t val) {$/;"	f
put8bit	mfscommon/datapack.h	/^static inline void put8bit(uint8_t **ptr,uint8_t val) {$/;"	f
qentry	mfscommon/pcqueue.c	/^} qentry;$/;"	t	typeref:struct:_qentry	file:
qid	mfsmaster/matoclserv.c	/^	uint32_t qid;		\/\/ queryid for answer$/;"	m	struct:chunklist	file:
queue	mfscommon/pcqueue.c	/^} queue;$/;"	t	typeref:struct:_queue	file:
queue_delete	mfscommon/pcqueue.c	/^void queue_delete(void *que) {$/;"	f
queue_elements	mfscommon/pcqueue.c	/^uint32_t queue_elements(void *que) {$/;"	f
queue_get	mfscommon/pcqueue.c	/^int queue_get(void *que,uint32_t *id,uint32_t *op,uint8_t **data,uint32_t *leng) {$/;"	f
queue_isempty	mfscommon/pcqueue.c	/^int queue_isempty(void *que) {$/;"	f
queue_isfull	mfscommon/pcqueue.c	/^int queue_isfull(void *que) {$/;"	f
queue_new	mfscommon/pcqueue.c	/^void* queue_new(uint32_t size) {$/;"	f
queue_put	mfscommon/pcqueue.c	/^int queue_put(void *que,uint32_t id,uint32_t op,uint8_t *data,uint32_t leng) {$/;"	f
queue_sizeleft	mfscommon/pcqueue.c	/^uint32_t queue_sizeleft(void *que) {$/;"	f
queue_tryget	mfscommon/pcqueue.c	/^int queue_tryget(void *que,uint32_t *id,uint32_t *op,uint8_t **data,uint32_t *leng) {$/;"	f
queue_tryput	mfscommon/pcqueue.c	/^int queue_tryput(void *que,uint32_t id,uint32_t op,uint8_t *data,uint32_t leng) {$/;"	f
quota	mfsmaster/filesystem.c	/^			quotanode *quota;$/;"	m	struct:_fsnode::_data::_ddata	file:
quota_control	mfsmount/mfstools.c	/^int quota_control(const char *fname,uint8_t del,uint8_t qflags,uint32_t sinodes,uint64_t slength,uint64_t ssize,uint64_t srealsize,uint32_t hinodes,uint64_t hlength,uint64_t hsize,uint64_t hrealsize) {$/;"	f
quotahead	mfsmaster/filesystem.c	/^static quotanode *quotahead;$/;"	v	file:
quotanode	mfsmaster/filesystem.c	/^} quotanode;$/;"	t	typeref:struct:_quotanode	file:
quotas	mfscgi/mfs.cgi.in	/^			quotas = []$/;"	v
racktree	mfsmaster/topology.c	/^static void *racktree;$/;"	v	file:
rawchart	mfscommon/charts.c	/^static uint8_t rawchart[RAWSIZE];$/;"	v	file:
rbsize	mfscgi/mfs.cgi.in	/^						rbsize = 0$/;"	v
rbsize	mfscgi/mfs.cgi.in	/^						rbsize = rbytes\/rops$/;"	v
rbuff	mfsmount/readdata.c	/^	uint8_t *rbuff;			\/\/ this->locked$/;"	m	struct:_readrec	file:
rbuffsize	mfsmount/readdata.c	/^	uint32_t rbuffsize;		\/\/ this->locked$/;"	m	struct:_readrec	file:
rbw	mfscgi/mfs.cgi.in	/^								rbw = 0$/;"	v
rbw	mfscgi/mfs.cgi.in	/^								rbw = rbytes*1000000\/usecreadsum$/;"	v
rbytes	mfschunkserver/hddspacemgr.c	/^	uint64_t rbytes;$/;"	m	struct:hddstats	file:
rcvd	mfsmount/mastercomm.c	/^	uint8_t rcvd;		\/\/ packet was received$/;"	m	struct:_threc	file:
rcvd_cmd	mfsmount/mastercomm.c	/^	uint32_t rcvd_cmd;$/;"	m	struct:_threc	file:
rdargs	mfschunkserver/bgjobs.c	144;"	d	file:
rdev	mfsmaster/filesystem.c	/^			uint32_t rdev;				\/\/ type==TYPE_BLOCKDEV ; type==TYPE_CHARDEV$/;"	m	struct:_fsnode::_data::_devdata	file:
rdhead	mfsmount/readdata.c	/^static readrec *rdhead=NULL;$/;"	v	file:
rdinodemap	mfsmount/readdata.c	/^static readrec *rdinodemap[MAPSIZE];$/;"	v	file:
read_data	mfsmount/readdata.c	/^int read_data(void *rr, uint64_t offset, uint32_t *size, uint8_t **buff) {$/;"	f
read_data_delayed_ops	mfsmount/readdata.c	/^void* read_data_delayed_ops(void *arg) {$/;"	f
read_data_end	mfsmount/readdata.c	/^void read_data_end(void* rr) {$/;"	f
read_data_freebuff	mfsmount/readdata.c	/^void read_data_freebuff(void *rr) {$/;"	f
read_data_init	mfsmount/readdata.c	/^void read_data_init(uint32_t retries) {$/;"	f
read_data_new	mfsmount/readdata.c	/^void* read_data_new(uint32_t inode) {$/;"	f
read_data_refresh_connection	mfsmount/readdata.c	/^static int read_data_refresh_connection(readrec *rrec) {$/;"	f	file:
read_data_term	mfsmount/readdata.c	/^void read_data_term(void) {$/;"	f
read_inode_ops	mfsmount/readdata.c	/^void read_inode_ops(uint32_t inode) {	\/\/ attributes of inode have been changed - force reconnect$/;"	f
readopcnt	mfsmount/csdb.c	/^	uint32_t readopcnt;$/;"	m	struct:_csdbentry	file:
readpos	mfsmount/oplog.c	/^	uint64_t readpos;$/;"	m	struct:_fhentry	file:
readrec	mfsmount/readdata.c	/^} readrec;$/;"	t	typeref:struct:_readrec	file:
realsize	mfsmaster/filesystem.c	/^	uint64_t realsize;$/;"	m	struct:_statsrecord	file:
reclock	mfsmount/mastercomm.c	/^static pthread_mutex_t fdlock,reclock,aflock;$/;"	v	file:
redirect_resp	mfscgi/cgiserv.py.in	/^	def redirect_resp(self,redirurl):$/;"	m	class:HTTP
refcnt	mfsmount/readdata.c	/^	uint8_t refcnt;			\/\/ glock$/;"	m	struct:_readrec	file:
refcount	mfsmount/oplog.c	/^	uint32_t refcount;$/;"	m	struct:_fhentry	file:
registered	mfsmaster/matoclserv.c	/^	uint8_t registered;$/;"	m	struct:matoclserventry	file:
regularchunkcounts	mfsmaster/chunks.c	/^uint32_t regularchunkcounts[11][11];$/;"	v
regularvalidcopies	mfsmaster/chunks.c	/^	uint8_t regularvalidcopies;$/;"	m	struct:chunk	file:
reload	mfscommon/main.c	/^static int reload=0;$/;"	v	file:
reloadhandle	mfscommon/main.c	/^void reloadhandle(int signo) {$/;"	f
reloadsignal	mfscommon/main.c	/^static int reloadsignal[]={$/;"	v	file:
remove_old_wdlock	mfscommon/main.c	/^void remove_old_wdlock(void) {$/;"	f
rep_cleanup	mfschunkserver/replicator.c	/^static void rep_cleanup(replication *r) {$/;"	f	file:
rep_create_packet	mfschunkserver/replicator.c	/^static uint8_t* rep_create_packet(repsrc *rs,uint32_t type,uint32_t size) {$/;"	f	file:
rep_no_packet	mfschunkserver/replicator.c	/^static void rep_no_packet(repsrc *rs) {$/;"	f	file:
rep_read	mfschunkserver/replicator.c	/^static int rep_read(repsrc *rs) {$/;"	f	file:
rep_receive_all_packets	mfschunkserver/replicator.c	/^static int rep_receive_all_packets(replication *r,uint32_t msecto) {$/;"	f	file:
rep_send_all_packets	mfschunkserver/replicator.c	/^static int rep_send_all_packets(replication *r,uint32_t msecto) {$/;"	f	file:
rep_wait_for_connection	mfschunkserver/replicator.c	/^static int rep_wait_for_connection(replication *r,uint32_t msecto) {$/;"	f	file:
rep_write	mfschunkserver/replicator.c	/^static int rep_write(repsrc *rs) {$/;"	f	file:
repdst	mfsmaster/matocsserv.c	/^} repdst;$/;"	t	typeref:struct:_repdst	file:
repdstfreehead	mfsmaster/matocsserv.c	/^static repdst *repdstfreehead=NULL;$/;"	v	file:
rephash	mfsmaster/matocsserv.c	/^static repdst* rephash[REPHASHSIZE];$/;"	v	file:
replicate	mfschunkserver/replicator.c	/^uint8_t replicate(uint64_t chunkid,uint32_t version,uint8_t srccnt,const uint8_t *srcs) {$/;"	f
replication	mfschunkserver/replicator.c	/^} replication;$/;"	t	typeref:struct:_replication	file:
replicator_stats	mfschunkserver/replicator.c	/^void replicator_stats(uint32_t *repl) {$/;"	f
repsources	mfschunkserver/replicator.c	/^	repsrc *repsources;$/;"	m	struct:_replication	file:
repsrc	mfschunkserver/replicator.c	/^} repsrc;$/;"	t	typeref:struct:_repsrc	file:
repsrc	mfsmaster/matocsserv.c	/^} repsrc;$/;"	t	typeref:struct:_repsrc	file:
repsrcfreehead	mfsmaster/matocsserv.c	/^static repsrc *repsrcfreehead=NULL;$/;"	v	file:
request_complete	mfscgi/cgiserv.py.in	/^	def request_complete(self):$/;"	m	class:ClientHandler
request_complete	mfscgi/cgiserv.py.in	/^	def request_complete(self):$/;"	m	class:HTTP
reserved	mfsmaster/filesystem.c	/^static fsedge *reserved;$/;"	v	file:
reservednodes	mfsmaster/filesystem.c	/^static uint32_t reservednodes;$/;"	v	file:
reservedspace	mfsmaster/filesystem.c	/^static uint64_t reservedspace;$/;"	v	file:
reset	mfsmount/mfs_fuse.c	/^	uint8_t reset;$/;"	m	struct:_sinfo	file:
restore	mfsmetarestore/restore.c	/^int restore(const char *filename,uint64_t lv,char *ptr) {$/;"	f
restore_line	mfsmetarestore/restore.c	/^int restore_line(const char *filename,uint64_t lv,char *line) {$/;"	f
restore_setverblevel	mfsmetarestore/restore.c	/^void restore_setverblevel(uint8_t _vlevel) {$/;"	f
right	mfsmaster/filesystem.c	/^	struct _bstnode *left,*right;$/;"	m	struct:_bstnode	typeref:struct:_bstnode::	file:
right	mfsmaster/itree.c	/^	struct _itnode *left,*right;$/;"	m	struct:_itnode	typeref:struct:_itnode::	file:
rjobid	mfschunkserver/csserv.c	/^	uint32_t rjobid;$/;"	m	struct:csserventry	file:
rlentry	mfscommon/main.c	/^typedef struct rlentry {$/;"	s	file:
rlentry	mfscommon/main.c	/^} rlentry;$/;"	t	typeref:struct:rlentry	file:
rlhead	mfscommon/main.c	/^static rlentry *rlhead=NULL;$/;"	v	file:
rnd	mfsmaster/chunks.c	/^	uint32_t rnd;$/;"	m	struct:locsort	file:
rnd_init	mfscommon/random.c	/^int rnd_init(void) {$/;"	f
rndu32	mfscommon/random.c	/^uint32_t rndu32() {$/;"	f
rndu32_ranged	mfscommon/random.c	/^uint32_t rndu32_ranged(uint32_t range) {$/;"	f
rndu64	mfscommon/random.c	/^uint64_t rndu64() {$/;"	f
rndu64_ranged	mfscommon/random.c	/^uint64_t rndu64_ranged(uint64_t range) {$/;"	f
rndu8	mfscommon/random.c	/^uint8_t rndu8() {$/;"	f
root	mfscgi/cgiserv.py.in	/^	root = os.getcwd()				# the directory to serve files from$/;"	v	class:HTTP
root	mfsmaster/filesystem.c	/^static fsnode *root;$/;"	v	file:
rootgid	mfsmaster/exports.c	/^	uint32_t rootgid;$/;"	m	struct:_exports	file:
rootgid	mfsmaster/matoclserv.c	/^	uint32_t rootgid;$/;"	m	struct:session	file:
rootinode	mfsmaster/matoclserv.c	/^	uint32_t rootinode;$/;"	m	struct:session	file:
rootpath	mfscgi/cgiserv.py.in	/^			rootpath = val$/;"	v
rootpath	mfscgi/cgiserv.py.in	/^	rootpath = os.path.realpath(rootpath)$/;"	v
rootpath	mfscgi/cgiserv.py.in	/^	rootpath="@CGIDIR@"$/;"	v
rootredefined	mfsmaster/exports.c	/^	unsigned rootredefined:1;$/;"	m	struct:_exports	file:
rootuid	mfsmaster/exports.c	/^	uint32_t rootuid;$/;"	m	struct:_exports	file:
rootuid	mfsmaster/matoclserv.c	/^	uint32_t rootuid;$/;"	m	struct:session	file:
rops	mfschunkserver/hddspacemgr.c	/^	uint32_t rops;$/;"	m	struct:hddstats	file:
rpacket	mfschunkserver/csserv.c	/^	void *rpacket;$/;"	m	struct:csserventry	file:
rpargs	mfschunkserver/bgjobs.c	146;"	d	file:
rpipe	mfschunkserver/bgjobs.c	/^	int rpipe,wpipe;$/;"	m	struct:_jobpool	file:
rpthid	mfsmount/mastercomm.c	/^static pthread_t rpthid,npthid;$/;"	v	file:
rrepcounter	mfsmaster/matocsserv.c	/^	uint16_t rrepcounter;$/;"	m	struct:matocsserventry	file:
rterm	mfsmount/readdata.c	/^static uint8_t rterm;$/;"	v	file:
rtime	mfscgi/mfs.cgi.in	/^									rtime = 0$/;"	v
rtime	mfscgi/mfs.cgi.in	/^									rtime = usecreadsum\/rops$/;"	v
rtime	mfscgi/mfs.cgi.in	/^								rtime = usecreadmax$/;"	v
run_cgi	mfscgi/cgiserv.py.in	/^	def run_cgi(self):$/;"	m	class:HTTP
runfn	mfschunkserver/init.h	/^typedef int (*runfn)(void);$/;"	t
runfn	mfsmaster/init.h	/^typedef int (*runfn)(void);$/;"	t
runfn	mfsmetalogger/init.h	/^typedef int (*runfn)(void);$/;"	t
s	mfscgi/chart.cgi.in	/^		s = socket.socket()$/;"	v
s	mfscgi/mfs.cgi.in	/^					s = socket.socket()$/;"	v
s	mfscgi/mfs.cgi.in	/^			s = socket.socket()$/;"	v
s	mfscgi/mfs.cgi.in	/^		s = socket.socket()$/;"	v
s	mfscgi/mfs.cgi.in	/^	s = socket.socket()$/;"	v
sassert	mfscommon/massert.h	30;"	d
sbhead	mfsmaster/chunks.c	/^static slist_bucket *sbhead = NULL;$/;"	v	file:
scale	mfscommon/charts.h	/^	uint8_t scale;$/;"	m	struct:_estatdef
scale	mfscommon/charts.h	/^	uint8_t scale;$/;"	m	struct:_statdef
scanprogress	mfschunkserver/hddspacemgr.c	/^static uint32_t scanprogress;$/;"	v	file:
scanprogresscond	mfschunkserver/hddspacemgr.c	/^static pthread_cond_t scanprogresscond = PTHREAD_COND_INITIALIZER;$/;"	v	file:
scanprogresswaiting	mfschunkserver/hddspacemgr.c	/^static uint8_t scanprogresswaiting;$/;"	v	file:
scanthread	mfschunkserver/hddspacemgr.c	/^	pthread_t scanthread;$/;"	m	struct:folder	file:
sdata	mfsmaster/filesystem.c	/^		} sdata;$/;"	m	union:_fsnode::_data	typeref:struct:_fsnode::_data::_sdata	file:
searchpos	mfsmaster/filesystem.c	/^static uint32_t searchpos;$/;"	v	file:
seconds	mfscommon/main.c	/^	uint32_t seconds;$/;"	m	struct:timeentry	file:
sectiondef	mfscgi/mfs.cgi.in	/^	sectiondef={$/;"	v
sectionorder	mfscgi/mfs.cgi.in	/^	sectionorder=["IN","CS","HD","EX","MS","MO","MC","CC"];$/;"	v
sectionorder	mfscgi/mfs.cgi.in	/^	sectionorder=["IN","CS","HD","EX","MS","MO","QU","MC","CC"];$/;"	v
sectionorder	mfscgi/mfs.cgi.in	/^	sectionorder=["IN","CS","HD","ML","MC","CC"];$/;"	v
sectionset	mfscgi/mfs.cgi.in	/^	sectionset = set(("IN",))$/;"	v
sectionset	mfscgi/mfs.cgi.in	/^	sectionset = set(sectionstr.split("|"))$/;"	v
sectionstr	mfscgi/mfs.cgi.in	/^	sectionstr = fields.getvalue("sections")$/;"	v
sent	mfsmount/mastercomm.c	/^	uint8_t sent;		\/\/ packet was sent$/;"	m	struct:_threc	file:
series	mfscommon/charts.c	/^static stat_record *series;$/;"	v	file:
serve	mfscommon/main.c	/^	void (*serve)(struct pollfd *);$/;"	m	struct:pollentry	file:
server	mfscgi/cgiserv.py.in	/^		server = Server(host, port)$/;"	v
servers	mfscgi/mfs.cgi.in	/^				servers = []$/;"	v
servers	mfscgi/mfs.cgi.in	/^			servers = []$/;"	v
servers	mfscgi/mfs.cgi.in	/^		servers = []$/;"	v
servip	mfsmaster/matocsserv.c	/^	uint32_t servip;		\/\/ ip to coonnect to$/;"	m	struct:matocsserventry	file:
servip	mfsmaster/matomlserv.c	/^	uint32_t servip;$/;"	m	struct:matomlserventry	file:
servport	mfsmaster/matocsserv.c	/^	uint16_t servport;		\/\/ port to connect to$/;"	m	struct:matocsserventry	file:
servstrip	mfsmaster/matocsserv.c	/^	char *servstrip;		\/\/ human readable version of servip$/;"	m	struct:matocsserventry	file:
servstrip	mfsmaster/matomlserv.c	/^	char *servstrip;		\/\/ human readable version of servip$/;"	m	struct:matomlserventry	file:
sesdata	mfsmaster/matoclserv.c	/^	session *sesdata;$/;"	m	struct:matoclserventry	file:
sesflags	mfsmaster/exports.c	/^	uint8_t sesflags;$/;"	m	struct:_exports	file:
sesflags	mfsmaster/matoclserv.c	/^	uint8_t sesflags;$/;"	m	struct:session	file:
session	mfsmaster/matoclserv.c	/^typedef struct session {$/;"	s	file:
session	mfsmaster/matoclserv.c	/^} session;$/;"	t	typeref:struct:session	file:
sessionid	mfsmaster/datacachemgr.c	/^	uint32_t sessionid;$/;"	m	struct:_datacache_entry	file:
sessionid	mfsmaster/filesystem.c	/^	uint32_t sessionid;$/;"	m	struct:_sessionidrec	file:
sessionid	mfsmaster/matoclserv.c	/^	uint32_t sessionid;$/;"	m	struct:session	file:
sessionid	mfsmount/mastercomm.c	/^static uint32_t sessionid;$/;"	v	file:
sessionidrec	mfsmaster/filesystem.c	/^} sessionidrec;$/;"	t	typeref:struct:_sessionidrec	file:
sessionidrec_bucket	mfsmaster/filesystem.c	/^} sessionidrec_bucket;$/;"	t	typeref:struct:_sessionidrec_bucket	file:
sessionidrec_free	mfsmaster/filesystem.c	/^static inline void sessionidrec_free(sessionidrec *p) {$/;"	f	file:
sessionidrec_free	mfsmaster/filesystem.c	/^static inline void sessionidrec_free(sessionidrec* p) {$/;"	f	file:
sessionidrec_malloc	mfsmaster/filesystem.c	/^static inline sessionidrec* sessionidrec_malloc() {$/;"	f	file:
sessionids	mfsmaster/filesystem.c	/^			sessionidrec *sessionids;$/;"	m	struct:_fsnode::_data::_fdata	file:
sessionlost	mfsmount/mastercomm.c	/^static int sessionlost;$/;"	v	file:
sessionshead	mfsmaster/matoclserv.c	/^static session *sessionshead=NULL;$/;"	v	file:
set_eattr	mfsmount/mfstools.c	/^int set_eattr(const char *fname,uint8_t eattr,uint8_t mode) {$/;"	f
set_goal	mfsmount/mfstools.c	/^int set_goal(const char *fname,uint8_t goal,uint8_t mode) {$/;"	f
set_signal_handlers	mfscommon/main.c	/^void set_signal_handlers(int daemonflag) {$/;"	f
set_trashtime	mfsmount/mfstools.c	/^int set_trashtime(const char *fname,uint32_t trashtime,uint8_t mode) {$/;"	f
sf	mfscgi/mfs.cgi.in	/^									sf = (1.0*used)\/total$/;"	v
sf	mfscgi/mfs.cgi.in	/^									sf = 0$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = (ip1,ip2,ip3,ip4,port,data[1:plen+1])$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = -flags$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = 0$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = chunkscnt$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = errtime$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = fsyncops$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = fsynctime$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = rbw$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = rops$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = rtime$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = total$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = used$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = wbw$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = wops$/;"	v
sf	mfscgi/mfs.cgi.in	/^								sf = wtime$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = (1.0*tdused)\/tdtotal$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = (1.0*used)\/total$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = (ip1,ip2,ip3,ip4)$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = (mapalluid,mapallgid)$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = (rootuid,rootgid)$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = (v1,v2,v3)$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = 0$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = None$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = exportflags&1$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = host$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = sesflags&4$/;"	v
sf	mfscgi/mfs.cgi.in	/^						sf = sesflags&8$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = (fip1,fip2,fip3,fip4,tip1,tip2,tip3,tip4)$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = (ip1,ip2,ip3,ip4)$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = (v1,v2,v3)$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = 0$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = 2-(sesflags&2)$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = chunks$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = cinodes$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = clength$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = crealsize$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = csize$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = exceeded$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = exportflags&2$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = hinodes$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = hlength$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = host$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = hrealsize$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = hsize$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = info$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = path$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = port$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = sesflags&1$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = sessionid$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = sinodes$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = slength$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = srealsize$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = ssize$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = stats_c[MLorder-100][0]+stats_l[MLorder-100][0]$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = stats_c[MOorder-100]+stats_l[MOorder-100]$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = sum(stats_c)+sum(stats_l)$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = tdchunks$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = tdtotal$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = tdused$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = timetoblock$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = total$/;"	v
sf	mfscgi/mfs.cgi.in	/^					sf = used$/;"	v
shhour	mfscommon/charts.c	/^static uint32_t shhour,shmin;$/;"	v	file:
shmin	mfscommon/charts.c	/^static uint32_t shhour,shmin;$/;"	v	file:
signal_lock	mfscommon/main.c	/^static pthread_mutex_t signal_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
sinfo	mfsmount/mfs_fuse.c	/^} sinfo;$/;"	t	typeref:struct:_sinfo	file:
sinodes	mfsmaster/filesystem.c	/^	uint32_t sinodes,hinodes;$/;"	m	struct:_quotanode	file:
size	mfschunkserver/bgjobs.c	/^	uint32_t offset,size;$/;"	m	struct:_chunk_rd_args	file:
size	mfschunkserver/bgjobs.c	/^	uint32_t offset,size;$/;"	m	struct:_chunk_wr_args	file:
size	mfschunkserver/csserv.c	/^	uint32_t size;			\/\/ R$/;"	m	struct:csserventry	file:
size	mfscommon/pcqueue.c	/^	uint32_t size;$/;"	m	struct:_queue	file:
size	mfsmaster/filesystem.c	/^	uint64_t size;$/;"	m	struct:_statsrecord	file:
size	mfsmount/mfs_fuse.c	/^	size_t size;$/;"	m	struct:_dirbuf	file:
size	mfsmount/mfs_meta_fuse.c	/^	size_t size;$/;"	m	struct:_dirbuf	file:
size	mfsmount/mfs_meta_fuse.c	/^	size_t size;$/;"	m	struct:_pathbuf	file:
slcachelock	mfsmount/symlinkcache.c	/^static pthread_mutex_t slcachelock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
slength	mfsmaster/filesystem.c	/^	uint64_t slength,hlength;$/;"	m	struct:_quotanode	file:
slfreehead	mfsmaster/chunks.c	/^static slist *slfreehead = NULL;$/;"	v	file:
slist	mfsmaster/chunks.c	/^} slist;$/;"	t	typeref:struct:_slist	file:
slist_bucket	mfsmaster/chunks.c	/^} slist_bucket;$/;"	t	typeref:struct:_slist_bucket	file:
slist_free	mfsmaster/chunks.c	/^static inline void slist_free(slist *p) {$/;"	f	file:
slist_free	mfsmaster/chunks.c	/^static inline void slist_free(slist* p) {$/;"	f	file:
slist_malloc	mfsmaster/chunks.c	/^static inline slist* slist_malloc() {$/;"	f	file:
slisthead	mfsmaster/chunks.c	/^	slist *slisthead;$/;"	m	struct:chunk	file:
snapshot	mfsmount/mfstools.c	/^int snapshot(const char *dstname,char * const *srcnames,uint32_t srcelements,uint8_t canowerwrite) {$/;"	f
sock	mfschunkserver/csserv.c	/^	int sock;$/;"	m	struct:csserventry	file:
sock	mfschunkserver/masterconn.c	/^	int sock;$/;"	m	struct:masterconn	file:
sock	mfschunkserver/replicator.c	/^	int sock;$/;"	m	struct:_repsrc	file:
sock	mfsmaster/matoclserv.c	/^	int sock;				\/\/socket number$/;"	m	struct:matoclserventry	file:
sock	mfsmaster/matocsserv.c	/^	int sock;$/;"	m	struct:matocsserventry	file:
sock	mfsmaster/matomlserv.c	/^	int sock;$/;"	m	struct:matomlserventry	file:
sock	mfsmetalogger/masterconn.c	/^	int sock;$/;"	m	struct:masterconn	file:
sockaddrfill	mfscommon/sockets.c	/^static inline int sockaddrfill(struct sockaddr_in *sa,const char *hostname,const char *service,int family,int socktype,int passive) {$/;"	f	file:
sockaddrnumfill	mfscommon/sockets.c	/^static inline int sockaddrnumfill(struct sockaddr_in *sa,uint32_t ip,uint16_t port) {$/;"	f	file:
socknonblock	mfscommon/sockets.c	/^static inline int socknonblock(int sock) {$/;"	f	file:
sockresolve	mfscommon/sockets.c	/^static inline int sockresolve(const char *hostname,const char *service,uint32_t *ip,uint16_t *port,int family,int socktype,int passive) {$/;"	f	file:
sortlink	mfscgi/mfs.cgi.in	/^				sortlink = createlink({"HDorder":"1","HDrev":"0"})$/;"	v
sortlink	mfscgi/mfs.cgi.in	/^				sortlink = createlink({"HDrev":"1"})$/;"	v
src	mfsmaster/matocsserv.c	/^	void *src;$/;"	m	struct:_repsrc	file:
srccnt	mfschunkserver/bgjobs.c	/^	uint8_t srccnt;$/;"	m	struct:_chunk_rp_args	file:
srccnt	mfschunkserver/replicator.c	/^	uint8_t srccnt;$/;"	m	struct:_replication	file:
srchead	mfsmaster/matocsserv.c	/^	repsrc *srchead;$/;"	m	struct:_repdst	file:
srcip	mfsmount/mastercomm.c	/^static uint32_t srcip=0;$/;"	v	file:
srcstrip	mfsmount/mastercomm.c	/^static char srcstrip[17];$/;"	v	file:
srealsize	mfsmaster/filesystem.c	/^	uint64_t srealsize,hrealsize;$/;"	m	struct:_quotanode	file:
ssize	mfsmaster/filesystem.c	/^	uint64_t ssize,hsize;$/;"	m	struct:_quotanode	file:
starting	mfsmaster/matoclserv.c	/^static int exiting,starting;$/;"	v	file:
startptr	mfschunkserver/csserv.c	/^	uint8_t *startptr;$/;"	m	struct:packetstruct	file:
startptr	mfschunkserver/masterconn.c	/^	uint8_t *startptr;$/;"	m	struct:packetstruct	file:
startptr	mfschunkserver/replicator.c	/^	uint8_t *startptr;$/;"	m	struct:_repsrc	file:
startptr	mfsmaster/matoclserv.c	/^	uint8_t *startptr;$/;"	m	struct:packetstruct	file:
startptr	mfsmaster/matocsserv.c	/^	uint8_t *startptr;$/;"	m	struct:packetstruct	file:
startptr	mfsmaster/matomlserv.c	/^	uint8_t *startptr;$/;"	m	struct:packetstruct	file:
startptr	mfsmetalogger/masterconn.c	/^	uint8_t *startptr;$/;"	m	struct:packetstruct	file:
starttime	mfsmaster/chunks.c	/^static uint32_t starttime;$/;"	v	file:
stat_record	mfscommon/charts.c	/^typedef uint64_t stat_record[RANGES][LENG];$/;"	t	file:
statdef	mfscommon/charts.h	/^} statdef;$/;"	t	typeref:struct:_statdef
statdefs	mfscommon/charts.c	/^static statdef *statdefs;$/;"	v	file:
statdefscount	mfscommon/charts.c	/^static uint32_t statdefscount;$/;"	v	file:
state	mfschunkserver/csserv.c	/^	uint8_t state;$/;"	m	struct:csserventry	file:
state	mfschunkserver/hddspacemgr.c	/^	uint8_t state;	\/\/ CH_AVAIL,CH_LOCKED,CH_DELETED$/;"	m	struct:chunk	file:
state	mfscommon/md5.h	/^	uint32_t state[4];$/;"	m	struct:_md5ctx
stats	mfschunkserver/hddspacemgr.c	/^	hddstats stats[STATSHISTORY];$/;"	m	struct:folder	file:
stats	mfsmaster/filesystem.c	/^			statsrecord *stats;$/;"	m	struct:_fsnode::_data::_ddata	file:
stats_brcvd	mfsmaster/matoclserv.c	/^static uint64_t stats_brcvd = 0;$/;"	v	file:
stats_bsent	mfsmaster/matoclserv.c	/^static uint64_t stats_bsent = 0;$/;"	v	file:
stats_bytesin	mfschunkserver/csserv.c	/^static uint32_t stats_bytesin=0;$/;"	v	file:
stats_bytesin	mfschunkserver/masterconn.c	/^static uint32_t stats_bytesin=0;$/;"	v	file:
stats_bytesin	mfsmetalogger/masterconn.c	/^static uint32_t stats_bytesin=0;$/;"	v	file:
stats_bytesout	mfschunkserver/csserv.c	/^static uint32_t stats_bytesout=0;$/;"	v	file:
stats_bytesout	mfschunkserver/masterconn.c	/^static uint32_t stats_bytesout=0;$/;"	v	file:
stats_bytesout	mfsmetalogger/masterconn.c	/^static uint32_t stats_bytesout=0;$/;"	v	file:
stats_bytesr	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_bytesr=0;$/;"	v	file:
stats_bytesw	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_bytesw=0;$/;"	v	file:
stats_c	mfscgi/mfs.cgi.in	/^					stats_c = struct.unpack(">"+"L"*statscnt,data[pos:pos+4*statscnt])+(0,)*(16-statscnt)$/;"	v
stats_c	mfscgi/mfs.cgi.in	/^					stats_c = struct.unpack(">LLLLLLLLLLLLLLLL",data[pos:pos+64])$/;"	v
stats_c	mfscgi/mfs.cgi.in	/^				stats_c = []$/;"	v
stats_create	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_create=0;$/;"	v	file:
stats_databytesr	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_databytesr=0;$/;"	v	file:
stats_databytesw	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_databytesw=0;$/;"	v	file:
stats_dataopr	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_dataopr=0;$/;"	v	file:
stats_dataopw	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_dataopw=0;$/;"	v	file:
stats_delete	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_delete=0;$/;"	v	file:
stats_deletions	mfsmaster/chunks.c	/^static uint32_t stats_deletions=0;$/;"	v	file:
stats_duplicate	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_duplicate=0;$/;"	v	file:
stats_duptrunc	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_duptrunc=0;$/;"	v	file:
stats_free	mfsmount/stats.c	/^void stats_free(statsnode *n) {$/;"	f
stats_get_counterptr	mfsmount/stats.c	/^uint64_t* stats_get_counterptr(void *node) {$/;"	f
stats_get_subnode	mfsmount/stats.c	/^void* stats_get_subnode(void *node,const char *name,uint8_t absolute) {$/;"	f
stats_getattr	mfsmaster/filesystem.c	/^static uint32_t stats_getattr=0;$/;"	v	file:
stats_hlopr	mfschunkserver/csserv.c	/^static uint32_t stats_hlopr=0;$/;"	v	file:
stats_hlopw	mfschunkserver/csserv.c	/^static uint32_t stats_hlopw=0;$/;"	v	file:
stats_l	mfscgi/mfs.cgi.in	/^					stats_l = struct.unpack(">"+"L"*statscnt,data[pos:pos+4*statscnt])+(0,)*(16-statscnt)$/;"	v
stats_l	mfscgi/mfs.cgi.in	/^					stats_l = struct.unpack(">LLLLLLLLLLLLLLLL",data[pos:pos+64])$/;"	v
stats_l	mfscgi/mfs.cgi.in	/^				stats_l = []$/;"	v
stats_link	mfsmaster/filesystem.c	/^static uint32_t stats_link=0;$/;"	v	file:
stats_lock	mfsmount/stats.c	/^void stats_lock(void) {$/;"	f
stats_lookup	mfsmaster/filesystem.c	/^static uint32_t stats_lookup=0;$/;"	v	file:
stats_maxjobscnt	mfschunkserver/csserv.c	/^static uint32_t stats_maxjobscnt=0;$/;"	v	file:
stats_maxjobscnt	mfschunkserver/masterconn.c	/^static uint32_t stats_maxjobscnt=0;$/;"	v	file:
stats_mkdir	mfsmaster/filesystem.c	/^static uint32_t stats_mkdir=0;$/;"	v	file:
stats_mknod	mfsmaster/filesystem.c	/^static uint32_t stats_mknod=0;$/;"	v	file:
stats_open	mfsmaster/filesystem.c	/^static uint32_t stats_open=0;$/;"	v	file:
stats_opr	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_opr=0;$/;"	v	file:
stats_opw	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_opw=0;$/;"	v	file:
stats_prcvd	mfsmaster/matoclserv.c	/^static uint32_t stats_prcvd = 0;$/;"	v	file:
stats_print_total	mfsmount/stats.c	/^static inline uint32_t stats_print_total(char *buff,uint32_t maxleng) {$/;"	f	file:
stats_print_values	mfsmount/stats.c	/^static inline uint32_t stats_print_values(char *buff,uint32_t maxleng,statsnode *n) {$/;"	f	file:
stats_psent	mfsmaster/matoclserv.c	/^static uint32_t stats_psent = 0;$/;"	v	file:
stats_read	mfsmaster/filesystem.c	/^static uint32_t stats_read=0;$/;"	v	file:
stats_readdir	mfsmaster/filesystem.c	/^static uint32_t stats_readdir=0;$/;"	v	file:
stats_readlink	mfsmaster/filesystem.c	/^static uint32_t stats_readlink=0;$/;"	v	file:
stats_rename	mfsmaster/filesystem.c	/^static uint32_t stats_rename=0;$/;"	v	file:
stats_repl	mfschunkserver/replicator.c	/^static uint32_t stats_repl=0;$/;"	v	file:
stats_replications	mfsmaster/chunks.c	/^static uint32_t stats_replications=0;$/;"	v	file:
stats_reset	mfsmount/stats.c	/^static inline void stats_reset(statsnode *n) {$/;"	f	file:
stats_reset_all	mfsmount/stats.c	/^void stats_reset_all(void) {$/;"	f
stats_rmdir	mfsmaster/filesystem.c	/^static uint32_t stats_rmdir=0;$/;"	v	file:
stats_rtime	mfschunkserver/hddspacemgr.c	/^static uint64_t stats_rtime=0;$/;"	v	file:
stats_setattr	mfsmaster/filesystem.c	/^static uint32_t stats_setattr=0;$/;"	v	file:
stats_show_all	mfsmount/stats.c	/^void stats_show_all(char **buff,uint32_t *leng) {$/;"	f
stats_statfs	mfsmaster/filesystem.c	/^static uint32_t stats_statfs=0;$/;"	v	file:
stats_symlink	mfsmaster/filesystem.c	/^static uint32_t stats_symlink=0;$/;"	v	file:
stats_term	mfsmount/stats.c	/^void stats_term(void) {$/;"	f
stats_test	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_test=0;$/;"	v	file:
stats_truncate	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_truncate=0;$/;"	v	file:
stats_unlink	mfsmaster/filesystem.c	/^static uint32_t stats_unlink=0;$/;"	v	file:
stats_unlock	mfsmount/stats.c	/^void stats_unlock(void) {$/;"	f
stats_version	mfschunkserver/hddspacemgr.c	/^static uint32_t stats_version=0;$/;"	v	file:
stats_write	mfsmaster/filesystem.c	/^static uint32_t stats_write=0;$/;"	v	file:
stats_wtime	mfschunkserver/hddspacemgr.c	/^static uint64_t stats_wtime=0;$/;"	v	file:
statsattr	mfsmount/mfs_fuse.c	/^static uint8_t statsattr[35]={'f', 0x01,0xA4, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,1, 0,0,0,0,0,0,0,0};$/;"	v	file:
statscnt	mfscgi/mfs.cgi.in	/^				statscnt = 16$/;"	v
statscnt	mfscgi/mfs.cgi.in	/^				statscnt = 21$/;"	v
statscnt	mfscgi/mfs.cgi.in	/^				statscnt = struct.unpack(">H",data[0:2])[0]$/;"	v
statsfilename	mfscommon/charts.c	/^static char* statsfilename;$/;"	v	file:
statslock	mfschunkserver/hddspacemgr.c	/^static pthread_mutex_t statslock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
statslock	mfschunkserver/replicator.c	/^static pthread_mutex_t statslock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
statsnode	mfsmount/stats.c	/^} statsnode;$/;"	t	typeref:struct:_statsnode	file:
statspos	mfschunkserver/hddspacemgr.c	/^	uint32_t statspos;$/;"	m	struct:folder	file:
statsptr	mfsmount/chunkloccache.c	/^static uint64_t *statsptr[STATNODES];$/;"	v	file:
statsptr	mfsmount/mastercomm.c	/^static uint64_t *statsptr[STATNODES];$/;"	v	file:
statsptr	mfsmount/mfs_fuse.c	/^static uint64_t *statsptr[STATNODES];$/;"	v	file:
statsptr	mfsmount/symlinkcache.c	/^static uint64_t *statsptr[STATNODES];$/;"	v	file:
statsrecord	mfsmaster/filesystem.c	/^} statsrecord;$/;"	t	typeref:struct:_statsrecord	file:
status	mfscgi/mfs.cgi.in	/^						status = 'damaged, marked for removal'$/;"	v
status	mfscgi/mfs.cgi.in	/^						status = 'damaged, to be empty'$/;"	v
status	mfscgi/mfs.cgi.in	/^						status = 'marked for removal'$/;"	v
status	mfscgi/mfs.cgi.in	/^						status = 'to be empty'$/;"	v
status	mfscgi/mfs.cgi.in	/^					status = 'damaged'$/;"	v
status	mfscgi/mfs.cgi.in	/^					status = 'ok'$/;"	v
status	mfsmount/mastercomm.c	/^	uint8_t status;		\/\/ receive status$/;"	m	struct:_threc	file:
status	mfsmount/writedata.c	/^	int status;$/;"	m	struct:inodedata_s	file:
statusqueue	mfschunkserver/bgjobs.c	/^	void *statusqueue;$/;"	m	struct:_jobpool	file:
stimestamp	mfsmaster/filesystem.c	/^	uint32_t stimestamp;	\/\/ time when soft quota exceeded$/;"	m	struct:_quotanode	file:
str	mfscommon/strerr.c	/^	const char* str;$/;"	m	struct:errent	file:
strerr	mfscommon/strerr.c	/^const char* strerr(int error) {$/;"	f
strerr_init	mfscommon/strerr.c	/^void strerr_init(void) {$/;"	f
strerr_term	mfscommon/strerr.c	/^void strerr_term(void) {$/;"	f
strip	mfscgi/mfs.cgi.in	/^				strip = "%u.%u.%u.%u" % (ip1,ip2,ip3,ip4)$/;"	v
strncpy_escape_commas	mfsmount/main.c	/^static unsigned int strncpy_escape_commas(char *dstbuff, unsigned int dstsize,char *src) {$/;"	f	file:
strncpy_remove_commas	mfsmount/main.c	/^static unsigned int strncpy_remove_commas(char *dstbuff, unsigned int dstsize,char *src) {$/;"	f	file:
subfolder	mfsmount/main.c	/^	char *subfolder;$/;"	m	struct:mfsopts	file:
subfolder	mfsmount/mastercomm.c	/^	char *subfolder;$/;"	m	struct:connect_args_t	file:
sugid_clear_mode	mfsmount/mfs_fuse.c	/^static int sugid_clear_mode = 0;$/;"	v	file:
sugidclearmode	mfsmount/main.c	/^	int sugidclearmode;$/;"	m	struct:mfsopts	file:
sugidclearmodestr	mfsmount/main.c	/^	char *sugidclearmodestr;$/;"	m	struct:mfsopts	file:
sumlist	mfscgi/mfs.cgi.in	/^						sumlist = [ a + b for (a,b) in zip(sumlist,matrix[goal])]$/;"	v
sumlist	mfscgi/mfs.cgi.in	/^				sumlist = 11*[0]$/;"	v
symlink_cache_init	mfsmount/symlinkcache.c	/^void symlink_cache_init(void) {$/;"	f
symlink_cache_insert	mfsmount/symlinkcache.c	/^void symlink_cache_insert(uint32_t inode,const uint8_t *path) {$/;"	f
symlink_cache_search	mfsmount/symlinkcache.c	/^int symlink_cache_search(uint32_t inode,const uint8_t **path) {$/;"	f
symlink_cache_stats_dec	mfsmount/symlinkcache.c	/^static inline void symlink_cache_stats_dec(uint8_t id) {$/;"	f	file:
symlink_cache_stats_inc	mfsmount/symlinkcache.c	/^static inline void symlink_cache_stats_inc(uint8_t id) {$/;"	f	file:
symlink_cache_statsptr_init	mfsmount/symlinkcache.c	/^static inline void symlink_cache_statsptr_init(void) {$/;"	f	file:
symlink_cache_term	mfsmount/symlinkcache.c	/^void symlink_cache_term(void) {$/;"	f
symlinkhash	mfsmount/symlinkcache.c	/^static hashbucket *symlinkhash = NULL;$/;"	v	file:
tail	mfscommon/pcqueue.c	/^	qentry *head,**tail;$/;"	m	struct:_queue	file:
tbstr	mfscgi/mfs.cgi.in	/^							tbstr = "%ud,&nbsp;%uh&nbsp;%um&nbsp;%us" % (days,hours,min,sec)$/;"	v
tbstr	mfscgi/mfs.cgi.in	/^							tbstr = "%uh&nbsp;%um&nbsp;%us" % (hours,min,sec)$/;"	v
tbstr	mfscgi/mfs.cgi.in	/^							tbstr = "%um&nbsp;%us" % (min,sec)$/;"	v
tbstr	mfscgi/mfs.cgi.in	/^							tbstr = "%us" % sec$/;"	v
tcpaccept	mfscommon/sockets.c	/^int tcpaccept(int lsock) {$/;"	f
tcpaccfdata	mfscommon/sockets.c	/^int tcpaccfdata(int sock) {$/;"	f
tcpaccfhttp	mfscommon/sockets.c	/^int tcpaccfhttp(int sock) {$/;"	f
tcpclose	mfscommon/sockets.c	/^int tcpclose(int sock) {$/;"	f
tcpgetmyaddr	mfscommon/sockets.c	/^int tcpgetmyaddr(int sock,uint32_t *ip,uint16_t *port) {$/;"	f
tcpgetpeer	mfscommon/sockets.c	/^int tcpgetpeer(int sock,uint32_t *ip,uint16_t *port) {$/;"	f
tcpgetstatus	mfscommon/sockets.c	/^int tcpgetstatus(int sock) {$/;"	f
tcpnodelay	mfscommon/sockets.c	/^int tcpnodelay(int sock) {$/;"	f
tcpnonblock	mfscommon/sockets.c	/^int tcpnonblock(int sock) {$/;"	f
tcpnumbind	mfscommon/sockets.c	/^int tcpnumbind(int sock,uint32_t ip,uint16_t port) {$/;"	f
tcpnumconnect	mfscommon/sockets.c	/^int tcpnumconnect(int sock,uint32_t ip,uint16_t port) {$/;"	f
tcpnumlisten	mfscommon/sockets.c	/^int tcpnumlisten(int sock,uint32_t ip,uint16_t port,uint16_t queue) {$/;"	f
tcpnumtoconnect	mfscommon/sockets.c	/^int tcpnumtoconnect(int sock,uint32_t ip,uint16_t port,uint32_t msecto) {$/;"	f
tcpread	mfsmount/mfstools.c	40;"	d	file:
tcpresolve	mfscommon/sockets.c	/^int tcpresolve(const char *hostname,const char *service,uint32_t *ip,uint16_t *port,int passive) {$/;"	f
tcpreuseaddr	mfscommon/sockets.c	/^int tcpreuseaddr(int sock) {$/;"	f
tcpsetacceptfilter	mfscommon/sockets.c	/^int tcpsetacceptfilter(int sock) {$/;"	f
tcpsocket	mfscommon/sockets.c	/^int tcpsocket(void) {$/;"	f
tcpstrbind	mfscommon/sockets.c	/^int tcpstrbind(int sock,const char *hostname,const char *service) {$/;"	f
tcpstrconnect	mfscommon/sockets.c	/^int tcpstrconnect(int sock,const char *hostname,const char *service) {$/;"	f
tcpstrlisten	mfscommon/sockets.c	/^int tcpstrlisten(int sock,const char *hostname,const char *service,uint16_t queue) {$/;"	f
tcpstrtoconnect	mfscommon/sockets.c	/^int tcpstrtoconnect(int sock,const char *hostname,const char *service,uint32_t msecto) {$/;"	f
tcptoaccept	mfscommon/sockets.c	/^int tcptoaccept(int sock,uint32_t msecto) {$/;"	f
tcptoread	mfscommon/sockets.c	/^int32_t tcptoread(int sock,void *buff,uint32_t leng,uint32_t msecto) {$/;"	f
tcptowrite	mfscommon/sockets.c	/^int32_t tcptowrite(int sock,const void *buff,uint32_t leng,uint32_t msecto) {$/;"	f
tcpwrite	mfsmount/mfstools.c	41;"	d	file:
term	mfschunkserver/hddspacemgr.c	/^static int term=0;$/;"	v	file:
termhandle	mfscommon/main.c	/^void termhandle(int signo) {$/;"	f
terminate	mfscommon/main.c	/^static int terminate=0;$/;"	v	file:
terminate	mfsmount/masterproxy.c	/^static uint8_t terminate;$/;"	v	file:
termlock	mfschunkserver/hddspacemgr.c	/^static pthread_mutex_t termlock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
termsignal	mfscommon/main.c	/^static int termsignal[]={$/;"	v	file:
test_start_time	mfsmaster/filesystem.c	/^static uint32_t test_start_time;$/;"	v	file:
testerthread	mfschunkserver/hddspacemgr.c	/^static pthread_t foldersthread,delayedthread,testerthread;$/;"	v	file:
testhead	mfschunkserver/hddspacemgr.c	/^	struct chunk *testhead,**testtail;$/;"	m	struct:folder	typeref:struct:folder::chunk	file:
testlock	mfschunkserver/hddspacemgr.c	/^static pthread_mutex_t testlock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
testnext	mfschunkserver/hddspacemgr.c	/^	struct chunk *testnext,**testprev;$/;"	m	struct:chunk	typeref:struct:chunk::chunk	file:
testprev	mfschunkserver/hddspacemgr.c	/^	struct chunk *testnext,**testprev;$/;"	m	struct:chunk	typeref:struct:chunk::	file:
testtail	mfschunkserver/hddspacemgr.c	/^	struct chunk *testhead,**testtail;$/;"	m	struct:folder	typeref:struct:folder::	file:
thid	mfsmount/mastercomm.c	/^	pthread_t thid;$/;"	m	struct:_threc	file:
threc	mfsmount/mastercomm.c	/^} threc;$/;"	t	typeref:struct:_threc	file:
threchead	mfsmount/mastercomm.c	/^static threc *threchead=NULL;$/;"	v	file:
thsep	mfscgi/mfs.cgi.in	/^thsep = ''$/;"	v
time	mfsmount/chunkloccache.c	/^	uint32_t time[HASH_BUCKET_SIZE];$/;"	m	struct:_hashbucket	file:
time	mfsmount/symlinkcache.c	/^	uint32_t time[HASH_BUCKET_SIZE];$/;"	m	struct:_hashbucket	file:
timeentry	mfscommon/main.c	/^typedef struct timeentry {$/;"	s	file:
timeentry	mfscommon/main.c	/^} timeentry;$/;"	t	typeref:struct:timeentry	file:
timehead	mfscommon/main.c	/^static timeentry *timehead=NULL;$/;"	v	file:
timelock	mfsmount/oplog.c	/^static pthread_mutex_t timelock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
timeout	mfsmaster/matocsserv.c	/^	uint16_t timeout;		\/\/ communication timeout$/;"	m	struct:matocsserventry	file:
timeout	mfsmaster/matomlserv.c	/^	uint16_t timeout;$/;"	m	struct:matomlserventry	file:
timepoint	mfscommon/charts.c	/^static uint32_t timepoint[RANGES];$/;"	v	file:
timestamp	mfschunkserver/hddspacemgr.c	/^	uint32_t timestamp;$/;"	m	struct:ioerror	file:
to	mfsmaster/itree.c	/^	uint32_t from,to;$/;"	m	struct:_itnode	file:
to	mfsmount/writedata.c	/^	uint32_t to;		\/\/ first not used byte in data (modified only when writeid==0)$/;"	m	struct:cblock_s	file:
todel	mfschunkserver/hddspacemgr.c	/^	unsigned int todel:2;$/;"	m	struct:folder	file:
todelchunkscount	mfsmaster/matocsserv.c	/^	uint32_t todelchunkscount;$/;"	m	struct:matocsserventry	file:
todeltotalspace	mfsmaster/matocsserv.c	/^	uint64_t todeltotalspace;$/;"	m	struct:matocsserventry	file:
todelusedspace	mfsmaster/matocsserv.c	/^	uint64_t todelusedspace;$/;"	m	struct:matocsserventry	file:
todocnt	mfschunkserver/csserv.c	/^	uint8_t todocnt;		\/\/ R (read finished + send finished)$/;"	m	struct:csserventry	file:
todolist	mfschunkserver/csserv.c	/^	writestatus *todolist;$/;"	m	struct:csserventry	file:
toip	mfsmaster/exports.c	/^	uint32_t fromip,toip;$/;"	m	struct:_exports	file:
topology_distance	mfsmaster/topology.c	/^uint8_t topology_distance(uint32_t ip1,uint32_t ip2) {$/;"	f
topology_init	mfsmaster/topology.c	/^int topology_init(void) {$/;"	f
topology_load	mfsmaster/topology.c	/^void topology_load(void) {$/;"	f
topology_parseline	mfsmaster/topology.c	/^int topology_parseline(char *line,uint32_t lineno,uint32_t *fip,uint32_t *tip,uint32_t *rid) {$/;"	f
topology_parsenet	mfsmaster/topology.c	/^int topology_parsenet(char *net,uint32_t *fromip,uint32_t *toip) {$/;"	f
topology_reload	mfsmaster/topology.c	/^void topology_reload(void) {$/;"	f
topology_term	mfsmaster/topology.c	/^void topology_term(void) {$/;"	f
total	mfschunkserver/hddspacemgr.c	/^	uint64_t total;$/;"	m	struct:folder	file:
totalspace	mfsmaster/matocsserv.c	/^	uint64_t totalspace;		\/\/ total hdd space in bytes$/;"	m	struct:matocsserventry	file:
translate_path	mfscgi/cgiserv.py.in	/^	def translate_path(self):$/;"	m	class:HTTP
trash	mfsmaster/filesystem.c	/^static fsedge *trash;$/;"	v	file:
trashnodes	mfsmaster/filesystem.c	/^static uint32_t trashnodes;$/;"	v	file:
trashspace	mfsmaster/filesystem.c	/^static uint64_t trashspace;$/;"	v	file:
trashtime	mfsmaster/filesystem.c	/^	uint32_t trashtime;$/;"	m	struct:_fsnode	file:
trycnt	mfsmount/writedata.c	/^	uint32_t trycnt;$/;"	m	struct:inodedata_s	file:
type	mfsmaster/filesystem.c	/^	uint8_t type;$/;"	m	struct:_fsnode	file:
type	mfsmaster/matoclserv.c	/^	uint8_t type;$/;"	m	struct:chunklist	file:
udpclose	mfscommon/sockets.c	/^int udpclose(int sock) {$/;"	f
udpnonblock	mfscommon/sockets.c	/^int udpnonblock(int sock) {$/;"	f
udpnumlisten	mfscommon/sockets.c	/^int udpnumlisten(int sock,uint32_t ip,uint16_t port) {$/;"	f
udpread	mfscommon/sockets.c	/^int udpread(int sock,uint32_t *ip,uint16_t *port,void *buff,uint16_t leng) {$/;"	f
udpresolve	mfscommon/sockets.c	/^int udpresolve(const char *hostname,const char *service,uint32_t *ip,uint16_t *port,int passive) {$/;"	f
udpsocket	mfscommon/sockets.c	/^int udpsocket(void) {$/;"	f
udpstrlisten	mfscommon/sockets.c	/^int udpstrlisten(int sock,const char *hostname,const char *service) {$/;"	f
udpwrite	mfscommon/sockets.c	/^int udpwrite(int sock,uint32_t ip,uint16_t port,const void *buff,uint16_t leng) {$/;"	f
uid	mfsmaster/filesystem.c	/^	uint32_t uid;$/;"	m	struct:_fsnode	file:
uid	mfsmaster/matoclserv.c	/^	uint32_t uid;$/;"	m	struct:chunklist	file:
uid	mfsmount/mfs_fuse.c	/^	uid_t uid;$/;"	m	struct:_dirbuf	file:
urlescape	mfscgi/mfs.cgi.in	/^def urlescape(str):$/;"	f
usage	mfscommon/main.c	/^void usage(const char *appname) {$/;"	f
usage	mfsmetarestore/main.c	/^void usage(const char* appname) {$/;"	f
usage	mfsmount/main.c	/^static void usage(const char *progname) {$/;"	f	file:
usage	mfsmount/mfstools.c	/^void usage(int f) {$/;"	f
usecfsyncmax	mfschunkserver/hddspacemgr.c	/^	uint32_t usecfsyncmax;$/;"	m	struct:hddstats	file:
usecfsyncsum	mfschunkserver/hddspacemgr.c	/^	uint64_t usecfsyncsum;$/;"	m	struct:hddstats	file:
usecnow	mfscommon/main.c	/^static uint64_t usecnow;$/;"	v	file:
usecreadmax	mfschunkserver/hddspacemgr.c	/^	uint32_t usecreadmax;$/;"	m	struct:hddstats	file:
usecreadsum	mfschunkserver/hddspacemgr.c	/^	uint64_t usecreadsum;$/;"	m	struct:hddstats	file:
usecwritemax	mfschunkserver/hddspacemgr.c	/^	uint32_t usecwritemax;$/;"	m	struct:hddstats	file:
usecwritesum	mfschunkserver/hddspacemgr.c	/^	uint64_t usecwritesum;$/;"	m	struct:hddstats	file:
usedblocks	mfsmount/writedata.c	/^static uint32_t usedblocks;$/;"	v	file:
usedircache	mfsmount/mfs_fuse.c	/^static int usedircache = 1;$/;"	v	file:
usedspace	mfsmaster/matocsserv.c	/^	uint64_t usedspace;		\/\/ used hdd space in bytes$/;"	m	struct:matocsserventry	file:
v	mfsmetarestore/restore.c	/^static uint64_t v=0,lastv=0;$/;"	v	file:
val	mfsmaster/filesystem.c	/^	uint32_t val,count;$/;"	m	struct:_bstnode	file:
valid	mfsmaster/chunks.c	/^	uint8_t valid;$/;"	m	struct:_slist	file:
valid	mfsmount/readdata.c	/^	uint8_t valid;			\/\/ glock$/;"	m	struct:_readrec	file:
validattr	mfschunkserver/hddspacemgr.c	/^	uint8_t validattr;$/;"	m	struct:chunk	file:
value	mfscommon/cfg.c	/^	char *value;$/;"	m	struct:paramsstr	file:
ver	mfscgi/mfs.cgi.in	/^						ver = "1.3.x"$/;"	v
ver	mfscgi/mfs.cgi.in	/^						ver = "1.4.x"$/;"	v
ver	mfscgi/mfs.cgi.in	/^						ver = "unknown"$/;"	v
ver	mfscgi/mfs.cgi.in	/^					ver = "%d.%d.%d" % (v1,v2,v3)$/;"	v
ver	mfscgi/mfs.cgi.in	/^				ver = "%d.%d.%d" % (v1,v2,v3)$/;"	v
verbose	mfscgi/cgiserv.py.in	/^			verbose = 1$/;"	v
verbose	mfscgi/cgiserv.py.in	/^	verbose = 0$/;"	v
version	mfschunkserver/bgjobs.c	/^	uint32_t version,newversion,copyversion;$/;"	m	struct:_chunk_op_args	file:
version	mfschunkserver/bgjobs.c	/^	uint32_t version;$/;"	m	struct:_chunk_rd_args	file:
version	mfschunkserver/bgjobs.c	/^	uint32_t version;$/;"	m	struct:_chunk_rp_args	file:
version	mfschunkserver/bgjobs.c	/^	uint32_t version;$/;"	m	struct:_chunk_wr_args	file:
version	mfschunkserver/csserv.c	/^	uint32_t version;		\/\/ R+W$/;"	m	struct:csserventry	file:
version	mfschunkserver/hddspacemgr.c	/^	uint32_t version;$/;"	m	struct:chunk	file:
version	mfschunkserver/replicator.c	/^	uint32_t version;$/;"	m	struct:_replication	file:
version	mfschunkserver/replicator.c	/^	uint32_t version;$/;"	m	struct:_repsrc	file:
version	mfsmaster/chunks.c	/^	uint32_t version;$/;"	m	struct:_slist	file:
version	mfsmaster/chunks.c	/^	uint32_t version;$/;"	m	struct:chunk	file:
version	mfsmaster/filesystem.c	/^static uint64_t version;$/;"	v	file:
version	mfsmaster/matoclserv.c	/^	uint32_t version;$/;"	m	struct:matoclserventry	file:
version	mfsmaster/matocsserv.c	/^	uint32_t version;$/;"	m	struct:_repdst	file:
version	mfsmaster/matocsserv.c	/^	uint32_t version;$/;"	m	struct:matocsserventry	file:
version	mfsmaster/matomlserv.c	/^	uint32_t version;$/;"	m	struct:matomlserventry	file:
version	mfsmount/readdata.c	/^	uint32_t version;		\/\/ this->locked$/;"	m	struct:_readrec	file:
vlevel	mfsmetarestore/restore.c	/^static uint8_t vlevel;$/;"	v	file:
vlngmday	mfscommon/charts.c	/^static uint32_t vlngmday,vlngmonth,vlngyear;$/;"	v	file:
vlngmonth	mfscommon/charts.c	/^static uint32_t vlngmday,vlngmonth,vlngyear;$/;"	v	file:
vlngyear	mfscommon/charts.c	/^static uint32_t vlngmday,vlngmonth,vlngyear;$/;"	v	file:
waitfree	mfscommon/pcqueue.c	/^	pthread_cond_t waitfree,waitfull;$/;"	m	struct:_queue	file:
waitfull	mfscommon/pcqueue.c	/^	pthread_cond_t waitfree,waitfull;$/;"	m	struct:_queue	file:
waiting	mfsmount/mastercomm.c	/^	uint8_t waiting;	\/\/ thread is waiting for answer$/;"	m	struct:_threc	file:
waiting	mfsmount/oplog.c	/^static uint8_t waiting=0;$/;"	v	file:
waiting	mfsmount/readdata.c	/^	uint16_t waiting;		\/\/ glock$/;"	m	struct:_readrec	file:
waitingworker	mfsmount/writedata.c	/^	uint8_t waitingworker;$/;"	m	struct:inodedata_s	file:
warning	mfscommon/charts.c	/^static uint8_t warning[50] = {$/;"	v	file:
wasread	mfsmount/mfs_fuse.c	/^	int wasread;$/;"	m	struct:_dirbuf	file:
wasread	mfsmount/mfs_meta_fuse.c	/^	int wasread;$/;"	m	struct:_dirbuf	file:
wbsize	mfscgi/mfs.cgi.in	/^						wbsize = 0$/;"	v
wbsize	mfscgi/mfs.cgi.in	/^						wbsize = wbytes\/wops$/;"	v
wbw	mfscgi/mfs.cgi.in	/^								wbw = 0$/;"	v
wbw	mfscgi/mfs.cgi.in	/^								wbw = wbytes*1000000\/(usecwritesum+usecfsyncsum)$/;"	v
wbytes	mfschunkserver/hddspacemgr.c	/^	uint64_t wbytes;$/;"	m	struct:hddstats	file:
wcnt	mfschunkserver/hddspacemgr.c	/^	uint32_t wcnt;$/;"	m	struct:_cntcond	file:
wdlock	mfscgi/cgiserv.py.in	/^def wdlock(fname,runmode,timeout):$/;"	f
wdlock	mfscommon/main.c	/^int wdlock(uint8_t runmode,uint32_t timeout) {$/;"	f
weentry	mfscommon/main.c	/^typedef struct weentry {$/;"	s	file:
weentry	mfscommon/main.c	/^} weentry;$/;"	t	typeref:struct:weentry	file:
wehead	mfscommon/main.c	/^static weentry *wehead=NULL;$/;"	v	file:
wjobid	mfschunkserver/csserv.c	/^	uint32_t wjobid;$/;"	m	struct:csserventry	file:
wjobwriteid	mfschunkserver/csserv.c	/^	uint32_t wjobwriteid;$/;"	m	struct:csserventry	file:
wops	mfschunkserver/hddspacemgr.c	/^	uint32_t wops;$/;"	m	struct:hddstats	file:
workers	mfschunkserver/bgjobs.c	/^	uint8_t workers;$/;"	m	struct:_jobpool	file:
workerthreads	mfschunkserver/bgjobs.c	/^	pthread_t *workerthreads;$/;"	m	struct:_jobpool	file:
wpacket	mfschunkserver/csserv.c	/^	void *wpacket;$/;"	m	struct:csserventry	file:
wpipe	mfschunkserver/bgjobs.c	/^	int rpipe,wpipe;$/;"	m	struct:_jobpool	file:
wrargs	mfschunkserver/bgjobs.c	145;"	d	file:
wrepcounter	mfsmaster/matocsserv.c	/^	uint16_t wrepcounter;$/;"	m	struct:matocsserventry	file:
write_block	mfsmount/writedata.c	/^int write_block(inodedata *id,uint32_t chindx,uint16_t pos,uint32_t from,uint32_t to,const uint8_t *data) {$/;"	f
write_cb_acquire	mfsmount/writedata.c	/^cblock* write_cb_acquire(inodedata *id) {$/;"	f
write_cb_expand	mfsmount/writedata.c	/^int write_cb_expand(cblock *cb,uint32_t from,uint32_t to,const uint8_t *data) {$/;"	f
write_cb_release	mfsmount/writedata.c	/^void write_cb_release (inodedata *id,cblock *cb) {$/;"	f
write_data	mfsmount/writedata.c	/^int write_data(void *vid,uint64_t offset,uint32_t size,const uint8_t *data) {$/;"	f
write_data_end	mfsmount/writedata.c	/^int write_data_end(void *vid) {$/;"	f
write_data_flush	mfsmount/writedata.c	/^int write_data_flush(void *vid) {$/;"	f
write_data_flush_inode	mfsmount/writedata.c	/^int write_data_flush_inode(uint32_t inode) {$/;"	f
write_data_getmaxfleng	mfsmount/writedata.c	/^uint64_t write_data_getmaxfleng(uint32_t inode) {$/;"	f
write_data_init	mfsmount/writedata.c	/^void write_data_init (uint32_t cachesize,uint32_t retries) {$/;"	f
write_data_new	mfsmount/writedata.c	/^void* write_data_new(uint32_t inode) {$/;"	f
write_data_term	mfsmount/writedata.c	/^void write_data_term(void) {$/;"	f
write_delayed_enqueue	mfsmount/writedata.c	/^void write_delayed_enqueue(inodedata *id,uint32_t cnt) {$/;"	f
write_dqueue_worker	mfsmount/writedata.c	/^void* write_dqueue_worker(void *arg) {$/;"	f
write_enqueue	mfsmount/writedata.c	/^void write_enqueue(inodedata *id) {$/;"	f
write_find_inodedata	mfsmount/writedata.c	/^inodedata* write_find_inodedata(uint32_t inode) {$/;"	f
write_free_inodedata	mfsmount/writedata.c	/^void write_free_inodedata(inodedata *fid) {$/;"	f
write_get_inodedata	mfsmount/writedata.c	/^inodedata* write_get_inodedata(uint32_t inode) {$/;"	f
write_info_worker	mfsmount/writedata.c	/^void* write_info_worker(void *arg) {$/;"	f
write_job_end	mfsmount/writedata.c	/^void write_job_end(inodedata *id,int status,uint32_t delay) {$/;"	f
write_worker	mfsmount/writedata.c	/^void* write_worker(void *arg) {$/;"	f
write_worker_th	mfsmount/writedata.c	/^static pthread_t write_worker_th[WORKERS];$/;"	v	file:
writecachesize	mfsmount/main.c	/^	unsigned writecachesize;$/;"	m	struct:mfsopts	file:
writecond	mfsmount/writedata.c	/^	pthread_cond_t writecond;	\/\/ wait for flushwaiting==0 (write)$/;"	m	struct:inodedata_s	file:
writeid	mfschunkserver/csserv.c	/^	uint32_t writeid;$/;"	m	struct:writestatus	file:
writeid	mfsmount/writedata.c	/^	uint32_t writeid;	\/\/ 0 = not sent, >0 = block was sent (modified and accessed only when wchunk is locked)$/;"	m	struct:cblock_s	file:
writeopcnt	mfsmount/csdb.c	/^	uint32_t writeopcnt;$/;"	m	struct:_csdbentry	file:
writepos	mfsmount/oplog.c	/^static uint64_t writepos=0;$/;"	v	file:
writestatus	mfschunkserver/csserv.c	/^typedef struct writestatus {$/;"	s	file:
writestatus	mfschunkserver/csserv.c	/^} writestatus;$/;"	t	typeref:struct:writestatus	file:
writewaiting	mfsmount/writedata.c	/^	uint16_t writewaiting;$/;"	m	struct:inodedata_s	file:
wtime	mfscgi/mfs.cgi.in	/^									wtime = 0$/;"	v
wtime	mfscgi/mfs.cgi.in	/^									wtime = usecwritesum\/wops$/;"	v
wtime	mfscgi/mfs.cgi.in	/^								wtime = usecwritemax$/;"	v
xorbuff	mfschunkserver/replicator.c	/^	uint8_t *xorbuff;$/;"	m	struct:_replication	file:
xordata	mfschunkserver/replicator.c	/^static void xordata(uint8_t *dst,const uint8_t *src,uint32_t leng) {$/;"	f	file:
zstr	mfscommon/charts.c	/^static z_stream zstr;$/;"	v	file:
